{
	"id": "64f0f09cb00273142cc6e73683875576",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/compliance/DefaultCompliance.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\n *\n *     Copyright (C) 2021, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\nimport './ICompliance.sol';\n\ncontract DefaultCompliance is ICompliance, Ownable {\n    /// @dev Mapping between agents and their statuses\n    mapping(address => bool) private _tokenAgentsList;\n\n    /// @dev Mapping of tokens linked to the compliance contract\n    mapping(address => bool) private _tokensBound;\n\n    /**\n     *  @dev See {ICompliance-isTokenAgent}.\n     */\n    function isTokenAgent(address _agentAddress) public view override returns (bool) {\n        return (_tokenAgentsList[_agentAddress]);\n    }\n\n    /**\n     *  @dev See {ICompliance-isTokenBound}.\n     */\n    function isTokenBound(address _token) public view override returns (bool) {\n        return (_tokensBound[_token]);\n    }\n\n    /**\n     *  @dev See {ICompliance-addTokenAgent}.\n     */\n    function addTokenAgent(address _agentAddress) external override onlyOwner {\n        require(!_tokenAgentsList[_agentAddress], 'This Agent is already registered');\n        _tokenAgentsList[_agentAddress] = true;\n        emit TokenAgentAdded(_agentAddress);\n    }\n\n    /**\n     *  @dev See {ICompliance-isTokenAgent}.\n     */\n    function removeTokenAgent(address _agentAddress) external override onlyOwner {\n        require(_tokenAgentsList[_agentAddress], 'This Agent is not registered yet');\n        _tokenAgentsList[_agentAddress] = false;\n        emit TokenAgentRemoved(_agentAddress);\n    }\n\n    /**\n     *  @dev See {ICompliance-isTokenAgent}.\n     */\n    function bindToken(address _token) external override onlyOwner {\n        require(!_tokensBound[_token], 'This token is already bound');\n        _tokensBound[_token] = true;\n        emit TokenBound(_token);\n    }\n\n    /**\n     *  @dev See {ICompliance-isTokenAgent}.\n     */\n    function unbindToken(address _token) external override onlyOwner {\n        require(_tokensBound[_token], 'This token is not bound yet');\n        _tokensBound[_token] = false;\n        emit TokenUnbound(_token);\n    }\n\n    /**\n     *  @dev See {ICompliance-canTransfer}.\n     */\n    function canTransfer(\n        address /* _from */,\n        address /* _to */,\n        uint256 /* _value */\n    ) external view override returns (bool) {\n        return true;\n    }\n\n    /**\n     *  @dev See {ICompliance-transferred}.\n     */\n    function transferred(\n        address /* _from */,\n        address /* _to */,\n        uint256 /* _value */\n    ) external override {}\n\n    /**\n     *  @dev See {ICompliance-created}.\n     */\n    function created(address /* _to */, uint256 /* _value */) external override {}\n\n    /**\n     *  @dev See {ICompliance-destroyed}.\n     */\n    function destroyed(address /* _from */, uint256 /* _value */) external override {}\n\n    /**\n     *  @dev See {ICompliance-transferOwnershipOnComplianceContract}.\n     */\n    function transferOwnershipOnComplianceContract(address newOwner) external override onlyOwner {\n        transferOwnership(newOwner);\n    }\n}\n"
			},
			"contracts/compliance/ICompliance.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\n *\n *     Copyright (C) 2021, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity ^0.8.0;\n\ninterface ICompliance {\n    /**\n     *  this event is emitted when the Agent has been added on the allowedList of this Compliance.\n     *  the event is emitted by the Compliance constructor and by the addTokenAgent function\n     *  `_agentAddress` is the address of the Agent to add\n     */\n    event TokenAgentAdded(address _agentAddress);\n\n    /**\n     *  this event is emitted when the Agent has been removed from the agent list of this Compliance.\n     *  the event is emitted by the Compliance constructor and by the removeTokenAgent function\n     *  `_agentAddress` is the address of the Agent to remove\n     */\n    event TokenAgentRemoved(address _agentAddress);\n\n    /**\n     *  this event is emitted when a token has been bound to the compliance contract\n     *  the event is emitted by the bindToken function\n     *  `_token` is the address of the token to bind\n     */\n    event TokenBound(address _token);\n\n    /**\n     *  this event is emitted when a token has been unbound from the compliance contract\n     *  the event is emitted by the unbindToken function\n     *  `_token` is the address of the token to unbind\n     */\n    event TokenUnbound(address _token);\n\n    /**\n     *  @dev Returns true if the Address is in the list of token agents\n     *  @param _agentAddress address of this agent\n     */\n    function isTokenAgent(address _agentAddress) external view returns (bool);\n\n    /**\n     *  @dev Returns true if the address given corresponds to a token that is bound with the Compliance contract\n     *  @param _token address of the token\n     */\n    function isTokenBound(address _token) external view returns (bool);\n\n    /**\n     *  @dev adds an agent to the list of token agents\n     *  @param _agentAddress address of the agent to be added\n     *  Emits a TokenAgentAdded event\n     */\n    function addTokenAgent(address _agentAddress) external;\n\n    /**\n     *  @dev remove Agent from the list of token agents\n     *  @param _agentAddress address of the agent to be removed (must be added first)\n     *  Emits a TokenAgentRemoved event\n     */\n    function removeTokenAgent(address _agentAddress) external;\n\n    /**\n     *  @dev binds a token to the compliance contract\n     *  @param _token address of the token to bind\n     *  Emits a TokenBound event\n     */\n    function bindToken(address _token) external;\n\n    /**\n     *  @dev unbinds a token from the compliance contract\n     *  @param _token address of the token to unbind\n     *  Emits a TokenUnbound event\n     */\n    function unbindToken(address _token) external;\n\n    /**\n     *  @dev checks that the transfer is compliant.\n     *  default compliance always returns true\n     *  READ ONLY FUNCTION, this function cannot be used to increment\n     *  counters, emit events, ...\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     */\n    function canTransfer(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external view returns (bool);\n\n    /**\n     *  @dev function called whenever tokens are transferred\n     *  from one wallet to another\n     *  this function can update state variables in the compliance contract\n     *  these state variables being used by `canTransfer` to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the compliance smart contract\n     *  @param _from The address of the sender\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     */\n    function transferred(\n        address _from,\n        address _to,\n        uint256 _amount\n    ) external;\n\n    /**\n     *  @dev function called whenever tokens are created\n     *  on a wallet\n     *  this function can update state variables in the compliance contract\n     *  these state variables being used by `canTransfer` to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the compliance smart contract\n     *  @param _to The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     */\n    function created(address _to, uint256 _amount) external;\n\n    /**\n     *  @dev function called whenever tokens are destroyed\n     *  this function can update state variables in the compliance contract\n     *  these state variables being used by `canTransfer` to decide if a transfer\n     *  is compliant or not depending on the values stored in these state variables and on\n     *  the parameters of the compliance smart contract\n     *  @param _from The address of the receiver\n     *  @param _amount The amount of tokens involved in the transfer\n     */\n    function destroyed(address _from, uint256 _amount) external;\n\n    /**\n     *  @dev function used to transfer the ownership of the compliance contract\n     *  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\n     *  @param newOwner The address of the new owner of the compliance contract\n     *  This function can only be called by the owner of the compliance contract\n     *  emits an `OwnershipTransferred` event\n     */\n    function transferOwnershipOnComplianceContract(address newOwner) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _setOwner(_msgSender());\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n        _;\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _setOwner(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _setOwner(newOwner);\n    }\n\n    function _setOwner(address newOwner) private {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n\npragma solidity ^0.8.0;\n\n/*\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/compliance/DefaultCompliance.sol": {
				"DefaultCompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "TokenAgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "TokenAgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "addTokenAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "isTokenAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "isTokenBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "removeTokenAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnershipOnComplianceContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTokenAgent(address)": {
								"details": "See {ICompliance-addTokenAgent}."
							},
							"bindToken(address)": {
								"details": "See {ICompliance-isTokenAgent}."
							},
							"canTransfer(address,address,uint256)": {
								"details": "See {ICompliance-canTransfer}."
							},
							"created(address,uint256)": {
								"details": "See {ICompliance-created}."
							},
							"destroyed(address,uint256)": {
								"details": "See {ICompliance-destroyed}."
							},
							"isTokenAgent(address)": {
								"details": "See {ICompliance-isTokenAgent}."
							},
							"isTokenBound(address)": {
								"details": "See {ICompliance-isTokenBound}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeTokenAgent(address)": {
								"details": "See {ICompliance-isTokenAgent}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferOwnershipOnComplianceContract(address)": {
								"details": "See {ICompliance-transferOwnershipOnComplianceContract}."
							},
							"transferred(address,address,uint256)": {
								"details": "See {ICompliance-transferred}."
							},
							"unbindToken(address)": {
								"details": "See {ICompliance-isTokenAgent}."
							}
						},
						"stateVariables": {
							"_tokenAgentsList": {
								"details": "Mapping between agents and their statuses"
							},
							"_tokensBound": {
								"details": "Mapping of tokens linked to the compliance contract"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/compliance/DefaultCompliance.sol\":1202:4056  contract DefaultCompliance is ICompliance, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":877:889  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":877:887  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":877:889  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:876  _setOwner */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":867:890  _setOwner(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/compliance/DefaultCompliance.sol\":1202:4056  contract DefaultCompliance is ICompliance, Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":639:646  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":658:675  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2121  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2140:2148  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2137  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2194:2202  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2184:2192  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n  pop\n  jump\t// out\n    /* \"contracts/compliance/DefaultCompliance.sol\":1202:4056  contract DefaultCompliance is ICompliance, Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/compliance/DefaultCompliance.sol\":1202:4056  contract DefaultCompliance is ICompliance, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8d2ea772\n      gt\n      tag_17\n      jumpi\n      dup1\n      0xcdde2932\n      gt\n      tag_18\n      jumpi\n      dup1\n      0xcdde2932\n      eq\n      tag_13\n      jumpi\n      dup1\n      0xe46638e6\n      eq\n      tag_14\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_15\n      jumpi\n      dup1\n      0xff3e6954\n      eq\n      tag_16\n      jumpi\n      jump(tag_2)\n    tag_18:\n      dup1\n      0x8d2ea772\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x993e8b95\n      eq\n      tag_12\n      jumpi\n      jump(tag_2)\n    tag_17:\n      dup1\n      0x5f8dead3\n      gt\n      tag_19\n      jumpi\n      dup1\n      0x5f8dead3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x7bcf0487\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x8baf29b4\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_19:\n      dup1\n      0x346531fa\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x3ff5aa02\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x40db3b50\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/compliance/DefaultCompliance.sol\":1548:1686  function isTokenAgent(address _agentAddress) public view override returns (bool) {... */\n    tag_3:\n      tag_20\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_21\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_21:\n      tag_23\n      jump\t// in\n    tag_20:\n      mload(0x40)\n      tag_24\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_24:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/compliance/DefaultCompliance.sol\":2602:2813  function bindToken(address _token) external override onlyOwner {... */\n    tag_4:\n      tag_26\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_27\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_27:\n      tag_28\n      jump\t// in\n    tag_26:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":2880:3095  function unbindToken(address _token) external override onlyOwner {... */\n    tag_5:\n      tag_29\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_30\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_30:\n      tag_31\n      jump\t// in\n    tag_29:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3601:3679  function created(address /* _to */, uint256 /* _value */) external override {} */\n    tag_6:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_33:\n      tag_35\n      jump\t// in\n    tag_32:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_7:\n      tag_36\n      tag_37\n      jump\t// in\n    tag_36:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3917:4054  function transferOwnershipOnComplianceContract(address newOwner) external override onlyOwner {... */\n    tag_8:\n      tag_38\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_39\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_39:\n      tag_40\n      jump\t// in\n    tag_38:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3406:3539  function transferred(... */\n    tag_9:\n      tag_41\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_42\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3743:3825  function destroyed(address /* _from */, uint256 /* _value */) external override {} */\n    tag_10:\n      tag_45\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_46\n      swap2\n      swap1\n      tag_34\n      jump\t// in\n    tag_46:\n      tag_47\n      jump\t// in\n    tag_45:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_11:\n      tag_48\n      tag_49\n      jump\t// in\n    tag_48:\n      mload(0x40)\n      tag_50\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_50:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/compliance/DefaultCompliance.sol\":1753:1873  function isTokenBound(address _token) public view override returns (bool) {... */\n    tag_12:\n      tag_52\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_53\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_53:\n      tag_54\n      jump\t// in\n    tag_52:\n      mload(0x40)\n      tag_55\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_55:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/compliance/DefaultCompliance.sol\":2269:2535  function removeTokenAgent(address _agentAddress) external override onlyOwner {... */\n    tag_13:\n      tag_56\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_57\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_57:\n      tag_58\n      jump\t// in\n    tag_56:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3161:3340  function canTransfer(... */\n    tag_14:\n      tag_59\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_60\n      swap2\n      swap1\n      tag_43\n      jump\t// in\n    tag_60:\n      tag_61\n      jump\t// in\n    tag_59:\n      mload(0x40)\n      tag_62\n      swap2\n      swap1\n      tag_25\n      jump\t// in\n    tag_62:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_15:\n      tag_63\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_64\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_64:\n      tag_65\n      jump\t// in\n    tag_63:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":1941:2202  function addTokenAgent(address _agentAddress) external override onlyOwner {... */\n    tag_16:\n      tag_66\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_67\n      swap2\n      swap1\n      tag_22\n      jump\t// in\n    tag_67:\n      tag_68\n      jump\t// in\n    tag_66:\n      stop\n        /* \"contracts/compliance/DefaultCompliance.sol\":1548:1686  function isTokenAgent(address _agentAddress) public view override returns (bool) {... */\n    tag_23:\n        /* \"contracts/compliance/DefaultCompliance.sol\":1623:1627  bool */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":1647:1663  _tokenAgentsList */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":1647:1678  _tokenAgentsList[_agentAddress] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":1664:1677  _agentAddress */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":1647:1678  _tokenAgentsList[_agentAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":1639:1679  return (_tokenAgentsList[_agentAddress]) */\n      swap1\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":1548:1686  function isTokenAgent(address _agentAddress) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":2602:2813  function bindToken(address _token) external override onlyOwner {... */\n    tag_28:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_71\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_71:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_73\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_73:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_74\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_75\n      swap1\n      tag_76\n      jump\t// in\n    tag_75:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_74:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2684:2696  _tokensBound */\n      0x02\n        /* \"contracts/compliance/DefaultCompliance.sol\":2684:2704  _tokensBound[_token] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2697:2703  _token */\n      dup3\n        /* \"contracts/compliance/DefaultCompliance.sol\":2684:2704  _tokensBound[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":2683:2704  !_tokensBound[_token] */\n      iszero\n        /* \"contracts/compliance/DefaultCompliance.sol\":2675:2736  require(!_tokensBound[_token], 'This token is already bound') */\n      tag_78\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_79\n      swap1\n      tag_80\n      jump\t// in\n    tag_79:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_78:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2769:2773  true */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":2746:2758  _tokensBound */\n      0x02\n        /* \"contracts/compliance/DefaultCompliance.sol\":2746:2766  _tokensBound[_token] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2759:2765  _token */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":2746:2766  _tokensBound[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2746:2773  _tokensBound[_token] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":2788:2806  TokenBound(_token) */\n      0x2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b\n        /* \"contracts/compliance/DefaultCompliance.sol\":2799:2805  _token */\n      dup2\n        /* \"contracts/compliance/DefaultCompliance.sol\":2788:2806  TokenBound(_token) */\n      mload(0x40)\n      tag_81\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_81:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/compliance/DefaultCompliance.sol\":2602:2813  function bindToken(address _token) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":2880:3095  function unbindToken(address _token) external override onlyOwner {... */\n    tag_31:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_83\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_83:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_84\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_84:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_85\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_86\n      swap1\n      tag_76\n      jump\t// in\n    tag_86:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_85:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2963:2975  _tokensBound */\n      0x02\n        /* \"contracts/compliance/DefaultCompliance.sol\":2963:2983  _tokensBound[_token] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2976:2982  _token */\n      dup3\n        /* \"contracts/compliance/DefaultCompliance.sol\":2963:2983  _tokensBound[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":2955:3015  require(_tokensBound[_token], 'This token is not bound yet') */\n      tag_88\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_89\n      swap1\n      tag_90\n      jump\t// in\n    tag_89:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_88:\n        /* \"contracts/compliance/DefaultCompliance.sol\":3048:3053  false */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":3025:3037  _tokensBound */\n      0x02\n        /* \"contracts/compliance/DefaultCompliance.sol\":3025:3045  _tokensBound[_token] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":3038:3044  _token */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":3025:3045  _tokensBound[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":3025:3053  _tokensBound[_token] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3068:3088  TokenUnbound(_token) */\n      0x28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a\n        /* \"contracts/compliance/DefaultCompliance.sol\":3081:3087  _token */\n      dup2\n        /* \"contracts/compliance/DefaultCompliance.sol\":3068:3088  TokenUnbound(_token) */\n      mload(0x40)\n      tag_91\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_91:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/compliance/DefaultCompliance.sol\":2880:3095  function unbindToken(address _token) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":3601:3679  function created(address /* _to */, uint256 /* _value */) external override {} */\n    tag_35:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_95\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_95:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_96\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_97\n      swap1\n      tag_76\n      jump\t// in\n    tag_97:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      tag_99\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1687:1688  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1678  _setOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1669:1690  _setOwner(address(0)) */\n      jump\t// in\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1605:1697  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":3917:4054  function transferOwnershipOnComplianceContract(address newOwner) external override onlyOwner {... */\n    tag_40:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_102\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_102:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_103\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_103:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_104\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_105\n      swap1\n      tag_76\n      jump\t// in\n    tag_105:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_104:\n        /* \"contracts/compliance/DefaultCompliance.sol\":4020:4047  transferOwnership(newOwner) */\n      tag_107\n        /* \"contracts/compliance/DefaultCompliance.sol\":4038:4046  newOwner */\n      dup2\n        /* \"contracts/compliance/DefaultCompliance.sol\":4020:4037  transferOwnership */\n      tag_65\n        /* \"contracts/compliance/DefaultCompliance.sol\":4020:4047  transferOwnership(newOwner) */\n      jump\t// in\n    tag_107:\n        /* \"contracts/compliance/DefaultCompliance.sol\":3917:4054  function transferOwnershipOnComplianceContract(address newOwner) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":3406:3539  function transferred(... */\n    tag_44:\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":3743:3825  function destroyed(address /* _from */, uint256 /* _value */) external override {} */\n    tag_47:\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n    tag_49:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1019:1026  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1045:1051  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1038:1051  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":973:1058  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":1753:1873  function isTokenBound(address _token) public view override returns (bool) {... */\n    tag_54:\n        /* \"contracts/compliance/DefaultCompliance.sol\":1821:1825  bool */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":1845:1857  _tokensBound */\n      0x02\n        /* \"contracts/compliance/DefaultCompliance.sol\":1845:1865  _tokensBound[_token] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":1858:1864  _token */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":1845:1865  _tokensBound[_token] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":1837:1866  return (_tokensBound[_token]) */\n      swap1\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":1753:1873  function isTokenBound(address _token) public view override returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":2269:2535  function removeTokenAgent(address _agentAddress) external override onlyOwner {... */\n    tag_58:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_113\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_113:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_114\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_114:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_115\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_116\n      swap1\n      tag_76\n      jump\t// in\n    tag_116:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_115:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2364:2380  _tokenAgentsList */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":2364:2395  _tokenAgentsList[_agentAddress] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2381:2394  _agentAddress */\n      dup3\n        /* \"contracts/compliance/DefaultCompliance.sol\":2364:2395  _tokenAgentsList[_agentAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":2356:2432  require(_tokenAgentsList[_agentAddress], 'This Agent is not registered yet') */\n      tag_118\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_119\n      swap1\n      tag_120\n      jump\t// in\n    tag_119:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_118:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2476:2481  false */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2442:2458  _tokenAgentsList */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":2442:2473  _tokenAgentsList[_agentAddress] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2459:2472  _agentAddress */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":2442:2473  _tokenAgentsList[_agentAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2442:2481  _tokenAgentsList[_agentAddress] = false */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":2496:2528  TokenAgentRemoved(_agentAddress) */\n      0x6a659bb87bb23efbdc295f8eed8ae8c4379bfb77660ced2ef0f3d7d26b05c6a6\n        /* \"contracts/compliance/DefaultCompliance.sol\":2514:2527  _agentAddress */\n      dup2\n        /* \"contracts/compliance/DefaultCompliance.sol\":2496:2528  TokenAgentRemoved(_agentAddress) */\n      mload(0x40)\n      tag_121\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_121:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/compliance/DefaultCompliance.sol\":2269:2535  function removeTokenAgent(address _agentAddress) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":3161:3340  function canTransfer(... */\n    tag_61:\n        /* \"contracts/compliance/DefaultCompliance.sol\":3306:3310  bool */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":3329:3333  true */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":3322:3333  return true */\n      swap1\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":3161:3340  function canTransfer(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_124\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_124:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_125\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_125:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_126\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_127\n      swap1\n      tag_76\n      jump\t// in\n    tag_127:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_126:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1954:1955  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1942  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1934:1956  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1926:1999  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_129\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_130\n      swap1\n      tag_131\n      jump\t// in\n    tag_130:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_129:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      tag_132\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2019:2027  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2018  _setOwner */\n      tag_100\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2009:2028  _setOwner(newOwner) */\n      jump\t// in\n    tag_132:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1846:2035  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/compliance/DefaultCompliance.sol\":1941:2202  function addTokenAgent(address _agentAddress) external override onlyOwner {... */\n    tag_68:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      tag_134\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1206  _msgSender */\n      tag_72\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1196:1208  _msgSender() */\n      jump\t// in\n    tag_134:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      tag_135\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1190  owner */\n      tag_49\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1192  owner() */\n      jump\t// in\n    tag_135:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1185:1208  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1177:1245  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_136\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_137\n      swap1\n      tag_76\n      jump\t// in\n    tag_137:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_136:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2034:2050  _tokenAgentsList */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":2034:2065  _tokenAgentsList[_agentAddress] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2051:2064  _agentAddress */\n      dup3\n        /* \"contracts/compliance/DefaultCompliance.sol\":2034:2065  _tokenAgentsList[_agentAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"contracts/compliance/DefaultCompliance.sol\":2033:2065  !_tokenAgentsList[_agentAddress] */\n      iszero\n        /* \"contracts/compliance/DefaultCompliance.sol\":2025:2102  require(!_tokenAgentsList[_agentAddress], 'This Agent is already registered') */\n      tag_139\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_140\n      swap1\n      tag_141\n      jump\t// in\n    tag_140:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_139:\n        /* \"contracts/compliance/DefaultCompliance.sol\":2146:2150  true */\n      0x01\n        /* \"contracts/compliance/DefaultCompliance.sol\":2112:2128  _tokenAgentsList */\n      dup1\n        /* \"contracts/compliance/DefaultCompliance.sol\":2112:2143  _tokenAgentsList[_agentAddress] */\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2129:2142  _agentAddress */\n      dup4\n        /* \"contracts/compliance/DefaultCompliance.sol\":2112:2143  _tokenAgentsList[_agentAddress] */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n        /* \"contracts/compliance/DefaultCompliance.sol\":2112:2150  _tokenAgentsList[_agentAddress] = true */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xff\n      mul\n      not\n      and\n      swap1\n      dup4\n      iszero\n      iszero\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"contracts/compliance/DefaultCompliance.sol\":2165:2195  TokenAgentAdded(_agentAddress) */\n      0xd62c45e13ac30396aceb3ad37c89bd1ba9048032fe61679000e92eb93dbfd67d\n        /* \"contracts/compliance/DefaultCompliance.sol\":2181:2194  _agentAddress */\n      dup2\n        /* \"contracts/compliance/DefaultCompliance.sol\":2165:2195  TokenAgentAdded(_agentAddress) */\n      mload(0x40)\n      tag_142\n      swap2\n      swap1\n      tag_51\n      jump\t// in\n    tag_142:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"contracts/compliance/DefaultCompliance.sol\":1941:2202  function addTokenAgent(address _agentAddress) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n    tag_72:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":639:646  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":665:675  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":658:675  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":586:682  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n    tag_100:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2112  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2115:2121  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2096:2121  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2140:2148  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2137  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2131:2148  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2194:2202  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2184:2192  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2163:2203  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2086:2210  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2041:2210  function _setOwner(address newOwner) private {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_146:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_148\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_150:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_152\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_153\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_22:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_155\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_156\n      tag_157\n      jump\t// in\n    tag_156:\n        /* \"#utility.yul\":373:492   */\n    tag_155:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_158\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_146\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:1251   */\n    tag_43:\n        /* \"#utility.yul\":709:715   */\n      0x00\n        /* \"#utility.yul\":717:723   */\n      dup1\n        /* \"#utility.yul\":725:731   */\n      0x00\n        /* \"#utility.yul\":774:776   */\n      0x60\n        /* \"#utility.yul\":762:771   */\n      dup5\n        /* \"#utility.yul\":753:760   */\n      dup7\n        /* \"#utility.yul\":749:772   */\n      sub\n        /* \"#utility.yul\":745:777   */\n      slt\n        /* \"#utility.yul\":742:861   */\n      iszero\n      tag_160\n      jumpi\n        /* \"#utility.yul\":780:859   */\n      tag_161\n      tag_157\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":742:861   */\n    tag_160:\n        /* \"#utility.yul\":900:901   */\n      0x00\n        /* \"#utility.yul\":925:978   */\n      tag_162\n        /* \"#utility.yul\":970:977   */\n      dup7\n        /* \"#utility.yul\":961:967   */\n      dup3\n        /* \"#utility.yul\":950:959   */\n      dup8\n        /* \"#utility.yul\":946:968   */\n      add\n        /* \"#utility.yul\":925:978   */\n      tag_146\n      jump\t// in\n    tag_162:\n        /* \"#utility.yul\":915:978   */\n      swap4\n      pop\n        /* \"#utility.yul\":871:988   */\n      pop\n        /* \"#utility.yul\":1027:1029   */\n      0x20\n        /* \"#utility.yul\":1053:1106   */\n      tag_163\n        /* \"#utility.yul\":1098:1105   */\n      dup7\n        /* \"#utility.yul\":1089:1095   */\n      dup3\n        /* \"#utility.yul\":1078:1087   */\n      dup8\n        /* \"#utility.yul\":1074:1096   */\n      add\n        /* \"#utility.yul\":1053:1106   */\n      tag_146\n      jump\t// in\n    tag_163:\n        /* \"#utility.yul\":1043:1106   */\n      swap3\n      pop\n        /* \"#utility.yul\":998:1116   */\n      pop\n        /* \"#utility.yul\":1155:1157   */\n      0x40\n        /* \"#utility.yul\":1181:1234   */\n      tag_164\n        /* \"#utility.yul\":1226:1233   */\n      dup7\n        /* \"#utility.yul\":1217:1223   */\n      dup3\n        /* \"#utility.yul\":1206:1215   */\n      dup8\n        /* \"#utility.yul\":1202:1224   */\n      add\n        /* \"#utility.yul\":1181:1234   */\n      tag_150\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":1171:1234   */\n      swap2\n      pop\n        /* \"#utility.yul\":1126:1244   */\n      pop\n        /* \"#utility.yul\":632:1251   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":1257:1731   */\n    tag_34:\n        /* \"#utility.yul\":1325:1331   */\n      0x00\n        /* \"#utility.yul\":1333:1339   */\n      dup1\n        /* \"#utility.yul\":1382:1384   */\n      0x40\n        /* \"#utility.yul\":1370:1379   */\n      dup4\n        /* \"#utility.yul\":1361:1368   */\n      dup6\n        /* \"#utility.yul\":1357:1380   */\n      sub\n        /* \"#utility.yul\":1353:1385   */\n      slt\n        /* \"#utility.yul\":1350:1469   */\n      iszero\n      tag_166\n      jumpi\n        /* \"#utility.yul\":1388:1467   */\n      tag_167\n      tag_157\n      jump\t// in\n    tag_167:\n        /* \"#utility.yul\":1350:1469   */\n    tag_166:\n        /* \"#utility.yul\":1508:1509   */\n      0x00\n        /* \"#utility.yul\":1533:1586   */\n      tag_168\n        /* \"#utility.yul\":1578:1585   */\n      dup6\n        /* \"#utility.yul\":1569:1575   */\n      dup3\n        /* \"#utility.yul\":1558:1567   */\n      dup7\n        /* \"#utility.yul\":1554:1576   */\n      add\n        /* \"#utility.yul\":1533:1586   */\n      tag_146\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":1523:1586   */\n      swap3\n      pop\n        /* \"#utility.yul\":1479:1596   */\n      pop\n        /* \"#utility.yul\":1635:1637   */\n      0x20\n        /* \"#utility.yul\":1661:1714   */\n      tag_169\n        /* \"#utility.yul\":1706:1713   */\n      dup6\n        /* \"#utility.yul\":1697:1703   */\n      dup3\n        /* \"#utility.yul\":1686:1695   */\n      dup7\n        /* \"#utility.yul\":1682:1704   */\n      add\n        /* \"#utility.yul\":1661:1714   */\n      tag_150\n      jump\t// in\n    tag_169:\n        /* \"#utility.yul\":1651:1714   */\n      swap2\n      pop\n        /* \"#utility.yul\":1606:1724   */\n      pop\n        /* \"#utility.yul\":1257:1731   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1737:1855   */\n    tag_170:\n        /* \"#utility.yul\":1824:1848   */\n      tag_172\n        /* \"#utility.yul\":1842:1847   */\n      dup2\n        /* \"#utility.yul\":1824:1848   */\n      tag_173\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":1819:1822   */\n      dup3\n        /* \"#utility.yul\":1812:1849   */\n      mstore\n        /* \"#utility.yul\":1737:1855   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1861:1970   */\n    tag_174:\n        /* \"#utility.yul\":1942:1963   */\n      tag_176\n        /* \"#utility.yul\":1957:1962   */\n      dup2\n        /* \"#utility.yul\":1942:1963   */\n      tag_177\n      jump\t// in\n    tag_176:\n        /* \"#utility.yul\":1937:1940   */\n      dup3\n        /* \"#utility.yul\":1930:1964   */\n      mstore\n        /* \"#utility.yul\":1861:1970   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1976:2342   */\n    tag_178:\n        /* \"#utility.yul\":2118:2121   */\n      0x00\n        /* \"#utility.yul\":2139:2206   */\n      tag_180\n        /* \"#utility.yul\":2203:2205   */\n      0x26\n        /* \"#utility.yul\":2198:2201   */\n      dup4\n        /* \"#utility.yul\":2139:2206   */\n      tag_181\n      jump\t// in\n    tag_180:\n        /* \"#utility.yul\":2132:2206   */\n      swap2\n      pop\n        /* \"#utility.yul\":2215:2308   */\n      tag_182\n        /* \"#utility.yul\":2304:2307   */\n      dup3\n        /* \"#utility.yul\":2215:2308   */\n      tag_183\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":2333:2335   */\n      0x40\n        /* \"#utility.yul\":2328:2331   */\n      dup3\n        /* \"#utility.yul\":2324:2336   */\n      add\n        /* \"#utility.yul\":2317:2336   */\n      swap1\n      pop\n        /* \"#utility.yul\":1976:2342   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2348:2714   */\n    tag_184:\n        /* \"#utility.yul\":2490:2493   */\n      0x00\n        /* \"#utility.yul\":2511:2578   */\n      tag_186\n        /* \"#utility.yul\":2575:2577   */\n      0x20\n        /* \"#utility.yul\":2570:2573   */\n      dup4\n        /* \"#utility.yul\":2511:2578   */\n      tag_181\n      jump\t// in\n    tag_186:\n        /* \"#utility.yul\":2504:2578   */\n      swap2\n      pop\n        /* \"#utility.yul\":2587:2680   */\n      tag_187\n        /* \"#utility.yul\":2676:2679   */\n      dup3\n        /* \"#utility.yul\":2587:2680   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":2705:2707   */\n      0x20\n        /* \"#utility.yul\":2700:2703   */\n      dup3\n        /* \"#utility.yul\":2696:2708   */\n      add\n        /* \"#utility.yul\":2689:2708   */\n      swap1\n      pop\n        /* \"#utility.yul\":2348:2714   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2720:3086   */\n    tag_189:\n        /* \"#utility.yul\":2862:2865   */\n      0x00\n        /* \"#utility.yul\":2883:2950   */\n      tag_191\n        /* \"#utility.yul\":2947:2949   */\n      0x1b\n        /* \"#utility.yul\":2942:2945   */\n      dup4\n        /* \"#utility.yul\":2883:2950   */\n      tag_181\n      jump\t// in\n    tag_191:\n        /* \"#utility.yul\":2876:2950   */\n      swap2\n      pop\n        /* \"#utility.yul\":2959:3052   */\n      tag_192\n        /* \"#utility.yul\":3048:3051   */\n      dup3\n        /* \"#utility.yul\":2959:3052   */\n      tag_193\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":3077:3079   */\n      0x20\n        /* \"#utility.yul\":3072:3075   */\n      dup3\n        /* \"#utility.yul\":3068:3080   */\n      add\n        /* \"#utility.yul\":3061:3080   */\n      swap1\n      pop\n        /* \"#utility.yul\":2720:3086   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3092:3458   */\n    tag_194:\n        /* \"#utility.yul\":3234:3237   */\n      0x00\n        /* \"#utility.yul\":3255:3322   */\n      tag_196\n        /* \"#utility.yul\":3319:3321   */\n      0x1b\n        /* \"#utility.yul\":3314:3317   */\n      dup4\n        /* \"#utility.yul\":3255:3322   */\n      tag_181\n      jump\t// in\n    tag_196:\n        /* \"#utility.yul\":3248:3322   */\n      swap2\n      pop\n        /* \"#utility.yul\":3331:3424   */\n      tag_197\n        /* \"#utility.yul\":3420:3423   */\n      dup3\n        /* \"#utility.yul\":3331:3424   */\n      tag_198\n      jump\t// in\n    tag_197:\n        /* \"#utility.yul\":3449:3451   */\n      0x20\n        /* \"#utility.yul\":3444:3447   */\n      dup3\n        /* \"#utility.yul\":3440:3452   */\n      add\n        /* \"#utility.yul\":3433:3452   */\n      swap1\n      pop\n        /* \"#utility.yul\":3092:3458   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3464:3830   */\n    tag_199:\n        /* \"#utility.yul\":3606:3609   */\n      0x00\n        /* \"#utility.yul\":3627:3694   */\n      tag_201\n        /* \"#utility.yul\":3691:3693   */\n      0x20\n        /* \"#utility.yul\":3686:3689   */\n      dup4\n        /* \"#utility.yul\":3627:3694   */\n      tag_181\n      jump\t// in\n    tag_201:\n        /* \"#utility.yul\":3620:3694   */\n      swap2\n      pop\n        /* \"#utility.yul\":3703:3796   */\n      tag_202\n        /* \"#utility.yul\":3792:3795   */\n      dup3\n        /* \"#utility.yul\":3703:3796   */\n      tag_203\n      jump\t// in\n    tag_202:\n        /* \"#utility.yul\":3821:3823   */\n      0x20\n        /* \"#utility.yul\":3816:3819   */\n      dup3\n        /* \"#utility.yul\":3812:3824   */\n      add\n        /* \"#utility.yul\":3805:3824   */\n      swap1\n      pop\n        /* \"#utility.yul\":3464:3830   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3836:4202   */\n    tag_204:\n        /* \"#utility.yul\":3978:3981   */\n      0x00\n        /* \"#utility.yul\":3999:4066   */\n      tag_206\n        /* \"#utility.yul\":4063:4065   */\n      0x20\n        /* \"#utility.yul\":4058:4061   */\n      dup4\n        /* \"#utility.yul\":3999:4066   */\n      tag_181\n      jump\t// in\n    tag_206:\n        /* \"#utility.yul\":3992:4066   */\n      swap2\n      pop\n        /* \"#utility.yul\":4075:4168   */\n      tag_207\n        /* \"#utility.yul\":4164:4167   */\n      dup3\n        /* \"#utility.yul\":4075:4168   */\n      tag_208\n      jump\t// in\n    tag_207:\n        /* \"#utility.yul\":4193:4195   */\n      0x20\n        /* \"#utility.yul\":4188:4191   */\n      dup3\n        /* \"#utility.yul\":4184:4196   */\n      add\n        /* \"#utility.yul\":4177:4196   */\n      swap1\n      pop\n        /* \"#utility.yul\":3836:4202   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4208:4430   */\n    tag_51:\n        /* \"#utility.yul\":4301:4305   */\n      0x00\n        /* \"#utility.yul\":4339:4341   */\n      0x20\n        /* \"#utility.yul\":4328:4337   */\n      dup3\n        /* \"#utility.yul\":4324:4342   */\n      add\n        /* \"#utility.yul\":4316:4342   */\n      swap1\n      pop\n        /* \"#utility.yul\":4352:4423   */\n      tag_210\n        /* \"#utility.yul\":4420:4421   */\n      0x00\n        /* \"#utility.yul\":4409:4418   */\n      dup4\n        /* \"#utility.yul\":4405:4422   */\n      add\n        /* \"#utility.yul\":4396:4402   */\n      dup5\n        /* \"#utility.yul\":4352:4423   */\n      tag_170\n      jump\t// in\n    tag_210:\n        /* \"#utility.yul\":4208:4430   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4436:4646   */\n    tag_25:\n        /* \"#utility.yul\":4523:4527   */\n      0x00\n        /* \"#utility.yul\":4561:4563   */\n      0x20\n        /* \"#utility.yul\":4550:4559   */\n      dup3\n        /* \"#utility.yul\":4546:4564   */\n      add\n        /* \"#utility.yul\":4538:4564   */\n      swap1\n      pop\n        /* \"#utility.yul\":4574:4639   */\n      tag_212\n        /* \"#utility.yul\":4636:4637   */\n      0x00\n        /* \"#utility.yul\":4625:4634   */\n      dup4\n        /* \"#utility.yul\":4621:4638   */\n      add\n        /* \"#utility.yul\":4612:4618   */\n      dup5\n        /* \"#utility.yul\":4574:4639   */\n      tag_174\n      jump\t// in\n    tag_212:\n        /* \"#utility.yul\":4436:4646   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4652:5071   */\n    tag_131:\n        /* \"#utility.yul\":4818:4822   */\n      0x00\n        /* \"#utility.yul\":4856:4858   */\n      0x20\n        /* \"#utility.yul\":4845:4854   */\n      dup3\n        /* \"#utility.yul\":4841:4859   */\n      add\n        /* \"#utility.yul\":4833:4859   */\n      swap1\n      pop\n        /* \"#utility.yul\":4905:4914   */\n      dup2\n        /* \"#utility.yul\":4899:4903   */\n      dup2\n        /* \"#utility.yul\":4895:4915   */\n      sub\n        /* \"#utility.yul\":4891:4892   */\n      0x00\n        /* \"#utility.yul\":4880:4889   */\n      dup4\n        /* \"#utility.yul\":4876:4893   */\n      add\n        /* \"#utility.yul\":4869:4916   */\n      mstore\n        /* \"#utility.yul\":4933:5064   */\n      tag_214\n        /* \"#utility.yul\":5059:5063   */\n      dup2\n        /* \"#utility.yul\":4933:5064   */\n      tag_178\n      jump\t// in\n    tag_214:\n        /* \"#utility.yul\":4925:5064   */\n      swap1\n      pop\n        /* \"#utility.yul\":4652:5071   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5077:5496   */\n    tag_120:\n        /* \"#utility.yul\":5243:5247   */\n      0x00\n        /* \"#utility.yul\":5281:5283   */\n      0x20\n        /* \"#utility.yul\":5270:5279   */\n      dup3\n        /* \"#utility.yul\":5266:5284   */\n      add\n        /* \"#utility.yul\":5258:5284   */\n      swap1\n      pop\n        /* \"#utility.yul\":5330:5339   */\n      dup2\n        /* \"#utility.yul\":5324:5328   */\n      dup2\n        /* \"#utility.yul\":5320:5340   */\n      sub\n        /* \"#utility.yul\":5316:5317   */\n      0x00\n        /* \"#utility.yul\":5305:5314   */\n      dup4\n        /* \"#utility.yul\":5301:5318   */\n      add\n        /* \"#utility.yul\":5294:5341   */\n      mstore\n        /* \"#utility.yul\":5358:5489   */\n      tag_216\n        /* \"#utility.yul\":5484:5488   */\n      dup2\n        /* \"#utility.yul\":5358:5489   */\n      tag_184\n      jump\t// in\n    tag_216:\n        /* \"#utility.yul\":5350:5489   */\n      swap1\n      pop\n        /* \"#utility.yul\":5077:5496   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5502:5921   */\n    tag_90:\n        /* \"#utility.yul\":5668:5672   */\n      0x00\n        /* \"#utility.yul\":5706:5708   */\n      0x20\n        /* \"#utility.yul\":5695:5704   */\n      dup3\n        /* \"#utility.yul\":5691:5709   */\n      add\n        /* \"#utility.yul\":5683:5709   */\n      swap1\n      pop\n        /* \"#utility.yul\":5755:5764   */\n      dup2\n        /* \"#utility.yul\":5749:5753   */\n      dup2\n        /* \"#utility.yul\":5745:5765   */\n      sub\n        /* \"#utility.yul\":5741:5742   */\n      0x00\n        /* \"#utility.yul\":5730:5739   */\n      dup4\n        /* \"#utility.yul\":5726:5743   */\n      add\n        /* \"#utility.yul\":5719:5766   */\n      mstore\n        /* \"#utility.yul\":5783:5914   */\n      tag_218\n        /* \"#utility.yul\":5909:5913   */\n      dup2\n        /* \"#utility.yul\":5783:5914   */\n      tag_189\n      jump\t// in\n    tag_218:\n        /* \"#utility.yul\":5775:5914   */\n      swap1\n      pop\n        /* \"#utility.yul\":5502:5921   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5927:6346   */\n    tag_80:\n        /* \"#utility.yul\":6093:6097   */\n      0x00\n        /* \"#utility.yul\":6131:6133   */\n      0x20\n        /* \"#utility.yul\":6120:6129   */\n      dup3\n        /* \"#utility.yul\":6116:6134   */\n      add\n        /* \"#utility.yul\":6108:6134   */\n      swap1\n      pop\n        /* \"#utility.yul\":6180:6189   */\n      dup2\n        /* \"#utility.yul\":6174:6178   */\n      dup2\n        /* \"#utility.yul\":6170:6190   */\n      sub\n        /* \"#utility.yul\":6166:6167   */\n      0x00\n        /* \"#utility.yul\":6155:6164   */\n      dup4\n        /* \"#utility.yul\":6151:6168   */\n      add\n        /* \"#utility.yul\":6144:6191   */\n      mstore\n        /* \"#utility.yul\":6208:6339   */\n      tag_220\n        /* \"#utility.yul\":6334:6338   */\n      dup2\n        /* \"#utility.yul\":6208:6339   */\n      tag_194\n      jump\t// in\n    tag_220:\n        /* \"#utility.yul\":6200:6339   */\n      swap1\n      pop\n        /* \"#utility.yul\":5927:6346   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6352:6771   */\n    tag_141:\n        /* \"#utility.yul\":6518:6522   */\n      0x00\n        /* \"#utility.yul\":6556:6558   */\n      0x20\n        /* \"#utility.yul\":6545:6554   */\n      dup3\n        /* \"#utility.yul\":6541:6559   */\n      add\n        /* \"#utility.yul\":6533:6559   */\n      swap1\n      pop\n        /* \"#utility.yul\":6605:6614   */\n      dup2\n        /* \"#utility.yul\":6599:6603   */\n      dup2\n        /* \"#utility.yul\":6595:6615   */\n      sub\n        /* \"#utility.yul\":6591:6592   */\n      0x00\n        /* \"#utility.yul\":6580:6589   */\n      dup4\n        /* \"#utility.yul\":6576:6593   */\n      add\n        /* \"#utility.yul\":6569:6616   */\n      mstore\n        /* \"#utility.yul\":6633:6764   */\n      tag_222\n        /* \"#utility.yul\":6759:6763   */\n      dup2\n        /* \"#utility.yul\":6633:6764   */\n      tag_199\n      jump\t// in\n    tag_222:\n        /* \"#utility.yul\":6625:6764   */\n      swap1\n      pop\n        /* \"#utility.yul\":6352:6771   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6777:7196   */\n    tag_76:\n        /* \"#utility.yul\":6943:6947   */\n      0x00\n        /* \"#utility.yul\":6981:6983   */\n      0x20\n        /* \"#utility.yul\":6970:6979   */\n      dup3\n        /* \"#utility.yul\":6966:6984   */\n      add\n        /* \"#utility.yul\":6958:6984   */\n      swap1\n      pop\n        /* \"#utility.yul\":7030:7039   */\n      dup2\n        /* \"#utility.yul\":7024:7028   */\n      dup2\n        /* \"#utility.yul\":7020:7040   */\n      sub\n        /* \"#utility.yul\":7016:7017   */\n      0x00\n        /* \"#utility.yul\":7005:7014   */\n      dup4\n        /* \"#utility.yul\":7001:7018   */\n      add\n        /* \"#utility.yul\":6994:7041   */\n      mstore\n        /* \"#utility.yul\":7058:7189   */\n      tag_224\n        /* \"#utility.yul\":7184:7188   */\n      dup2\n        /* \"#utility.yul\":7058:7189   */\n      tag_204\n      jump\t// in\n    tag_224:\n        /* \"#utility.yul\":7050:7189   */\n      swap1\n      pop\n        /* \"#utility.yul\":6777:7196   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7283:7452   */\n    tag_181:\n        /* \"#utility.yul\":7367:7378   */\n      0x00\n        /* \"#utility.yul\":7401:7407   */\n      dup3\n        /* \"#utility.yul\":7396:7399   */\n      dup3\n        /* \"#utility.yul\":7389:7408   */\n      mstore\n        /* \"#utility.yul\":7441:7445   */\n      0x20\n        /* \"#utility.yul\":7436:7439   */\n      dup3\n        /* \"#utility.yul\":7432:7446   */\n      add\n        /* \"#utility.yul\":7417:7446   */\n      swap1\n      pop\n        /* \"#utility.yul\":7283:7452   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7458:7554   */\n    tag_173:\n        /* \"#utility.yul\":7495:7502   */\n      0x00\n        /* \"#utility.yul\":7524:7548   */\n      tag_229\n        /* \"#utility.yul\":7542:7547   */\n      dup3\n        /* \"#utility.yul\":7524:7548   */\n      tag_230\n      jump\t// in\n    tag_229:\n        /* \"#utility.yul\":7513:7548   */\n      swap1\n      pop\n        /* \"#utility.yul\":7458:7554   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7560:7650   */\n    tag_177:\n        /* \"#utility.yul\":7594:7601   */\n      0x00\n        /* \"#utility.yul\":7637:7642   */\n      dup2\n        /* \"#utility.yul\":7630:7643   */\n      iszero\n        /* \"#utility.yul\":7623:7644   */\n      iszero\n        /* \"#utility.yul\":7612:7644   */\n      swap1\n      pop\n        /* \"#utility.yul\":7560:7650   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7656:7782   */\n    tag_230:\n        /* \"#utility.yul\":7693:7700   */\n      0x00\n        /* \"#utility.yul\":7733:7775   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":7726:7731   */\n      dup3\n        /* \"#utility.yul\":7722:7776   */\n      and\n        /* \"#utility.yul\":7711:7776   */\n      swap1\n      pop\n        /* \"#utility.yul\":7656:7782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7788:7865   */\n    tag_233:\n        /* \"#utility.yul\":7825:7832   */\n      0x00\n        /* \"#utility.yul\":7854:7859   */\n      dup2\n        /* \"#utility.yul\":7843:7859   */\n      swap1\n      pop\n        /* \"#utility.yul\":7788:7865   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7994:8111   */\n    tag_157:\n        /* \"#utility.yul\":8103:8104   */\n      0x00\n        /* \"#utility.yul\":8100:8101   */\n      dup1\n        /* \"#utility.yul\":8093:8105   */\n      revert\n        /* \"#utility.yul\":8117:8342   */\n    tag_183:\n        /* \"#utility.yul\":8257:8291   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":8253:8254   */\n      0x00\n        /* \"#utility.yul\":8245:8251   */\n      dup3\n        /* \"#utility.yul\":8241:8255   */\n      add\n        /* \"#utility.yul\":8234:8292   */\n      mstore\n        /* \"#utility.yul\":8326:8334   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":8321:8323   */\n      0x20\n        /* \"#utility.yul\":8313:8319   */\n      dup3\n        /* \"#utility.yul\":8309:8324   */\n      add\n        /* \"#utility.yul\":8302:8335   */\n      mstore\n        /* \"#utility.yul\":8117:8342   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8348:8530   */\n    tag_188:\n        /* \"#utility.yul\":8488:8522   */\n      0x54686973204167656e74206973206e6f74207265676973746572656420796574\n        /* \"#utility.yul\":8484:8485   */\n      0x00\n        /* \"#utility.yul\":8476:8482   */\n      dup3\n        /* \"#utility.yul\":8472:8486   */\n      add\n        /* \"#utility.yul\":8465:8523   */\n      mstore\n        /* \"#utility.yul\":8348:8530   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8536:8713   */\n    tag_193:\n        /* \"#utility.yul\":8676:8705   */\n      0x5468697320746f6b656e206973206e6f7420626f756e64207965740000000000\n        /* \"#utility.yul\":8672:8673   */\n      0x00\n        /* \"#utility.yul\":8664:8670   */\n      dup3\n        /* \"#utility.yul\":8660:8674   */\n      add\n        /* \"#utility.yul\":8653:8706   */\n      mstore\n        /* \"#utility.yul\":8536:8713   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8719:8896   */\n    tag_198:\n        /* \"#utility.yul\":8859:8888   */\n      0x5468697320746f6b656e20697320616c726561647920626f756e640000000000\n        /* \"#utility.yul\":8855:8856   */\n      0x00\n        /* \"#utility.yul\":8847:8853   */\n      dup3\n        /* \"#utility.yul\":8843:8857   */\n      add\n        /* \"#utility.yul\":8836:8889   */\n      mstore\n        /* \"#utility.yul\":8719:8896   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8902:9084   */\n    tag_203:\n        /* \"#utility.yul\":9042:9076   */\n      0x54686973204167656e7420697320616c72656164792072656769737465726564\n        /* \"#utility.yul\":9038:9039   */\n      0x00\n        /* \"#utility.yul\":9030:9036   */\n      dup3\n        /* \"#utility.yul\":9026:9040   */\n      add\n        /* \"#utility.yul\":9019:9077   */\n      mstore\n        /* \"#utility.yul\":8902:9084   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9090:9272   */\n    tag_208:\n        /* \"#utility.yul\":9230:9264   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":9226:9227   */\n      0x00\n        /* \"#utility.yul\":9218:9224   */\n      dup3\n        /* \"#utility.yul\":9214:9228   */\n      add\n        /* \"#utility.yul\":9207:9265   */\n      mstore\n        /* \"#utility.yul\":9090:9272   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9278:9400   */\n    tag_149:\n        /* \"#utility.yul\":9351:9375   */\n      tag_245\n        /* \"#utility.yul\":9369:9374   */\n      dup2\n        /* \"#utility.yul\":9351:9375   */\n      tag_173\n      jump\t// in\n    tag_245:\n        /* \"#utility.yul\":9344:9349   */\n      dup2\n        /* \"#utility.yul\":9341:9376   */\n      eq\n        /* \"#utility.yul\":9331:9394   */\n      tag_246\n      jumpi\n        /* \"#utility.yul\":9390:9391   */\n      0x00\n        /* \"#utility.yul\":9387:9388   */\n      dup1\n        /* \"#utility.yul\":9380:9392   */\n      revert\n        /* \"#utility.yul\":9331:9394   */\n    tag_246:\n        /* \"#utility.yul\":9278:9400   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9406:9528   */\n    tag_153:\n        /* \"#utility.yul\":9479:9503   */\n      tag_248\n        /* \"#utility.yul\":9497:9502   */\n      dup2\n        /* \"#utility.yul\":9479:9503   */\n      tag_233\n      jump\t// in\n    tag_248:\n        /* \"#utility.yul\":9472:9477   */\n      dup2\n        /* \"#utility.yul\":9469:9504   */\n      eq\n        /* \"#utility.yul\":9459:9522   */\n      tag_249\n      jumpi\n        /* \"#utility.yul\":9518:9519   */\n      0x00\n        /* \"#utility.yul\":9515:9516   */\n      dup1\n        /* \"#utility.yul\":9508:9520   */\n      revert\n        /* \"#utility.yul\":9459:9522   */\n    tag_249:\n        /* \"#utility.yul\":9406:9528   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212208ca1f6eb13d8e9892406568621f0bbe4b984c3002c7b7efe76e7227e4ef4e46164736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_114": {
									"entryPoint": 50,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 58,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b61117d8061010d6000396000f3fe608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638d2ea7721161008c578063cdde293211610066578063cdde29321461021f578063e46638e61461023b578063f2fde38b1461026b578063ff3e695414610287576100ea565b80638d2ea772146101b55780638da5cb5b146101d1578063993e8b95146101ef576100ea565b80635f8dead3116100c85780635f8dead314610157578063715018a6146101735780637bcf04871461017d5780638baf29b414610199576100ea565b8063346531fa146100ef5780633ff5aa021461011f57806340db3b501461013b575b600080fd5b61010960048036038101906101049190610cf9565b6102a3565b6040516101169190610ec4565b60405180910390f35b61013960048036038101906101349190610cf9565b6102f9565b005b61015560048036038101906101509190610cf9565b610494565b005b610171600480360381019061016c9190610d79565b61062e565b005b61017b610632565b005b61019760048036038101906101929190610cf9565b6106ba565b005b6101b360048036038101906101ae9190610d26565b610742565b005b6101cf60048036038101906101ca9190610d79565b610747565b005b6101d961074b565b6040516101e69190610ea9565b60405180910390f35b61020960048036038101906102049190610cf9565b610774565b6040516102169190610ec4565b60405180910390f35b61023960048036038101906102349190610cf9565b6107ca565b005b61025560048036038101906102509190610d26565b610964565b6040516102629190610ec4565b60405180910390f35b61028560048036038101906102809190610cf9565b610971565b005b6102a1600480360381019061029c9190610cf9565b610a69565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610301610c03565b73ffffffffffffffffffffffffffffffffffffffff1661031f61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610f7f565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990610f3f565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b816040516104899190610ea9565b60405180910390a150565b61049c610c03565b73ffffffffffffffffffffffffffffffffffffffff166104ba61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790610f7f565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610f1f565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a816040516106239190610ea9565b60405180910390a150565b5050565b61063a610c03565b73ffffffffffffffffffffffffffffffffffffffff1661065861074b565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a590610f7f565b60405180910390fd5b6106b86000610c0b565b565b6106c2610c03565b73ffffffffffffffffffffffffffffffffffffffff166106e061074b565b73ffffffffffffffffffffffffffffffffffffffff1614610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d90610f7f565b60405180910390fd5b61073f81610971565b50565b505050565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6107d2610c03565b73ffffffffffffffffffffffffffffffffffffffff166107f061074b565b73ffffffffffffffffffffffffffffffffffffffff1614610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90610f7f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990610eff565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6a659bb87bb23efbdc295f8eed8ae8c4379bfb77660ced2ef0f3d7d26b05c6a6816040516109599190610ea9565b60405180910390a150565b6000600190509392505050565b610979610c03565b73ffffffffffffffffffffffffffffffffffffffff1661099761074b565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490610edf565b60405180910390fd5b610a6681610c0b565b50565b610a71610c03565b73ffffffffffffffffffffffffffffffffffffffff16610a8f61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90610f7f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6990610f5f565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd62c45e13ac30396aceb3ad37c89bd1ba9048032fe61679000e92eb93dbfd67d81604051610bf89190610ea9565b60405180910390a150565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610cde81611119565b92915050565b600081359050610cf381611130565b92915050565b600060208284031215610d0f57610d0e610ff8565b5b6000610d1d84828501610ccf565b91505092915050565b600080600060608486031215610d3f57610d3e610ff8565b5b6000610d4d86828701610ccf565b9350506020610d5e86828701610ccf565b9250506040610d6f86828701610ce4565b9150509250925092565b60008060408385031215610d9057610d8f610ff8565b5b6000610d9e85828601610ccf565b9250506020610daf85828601610ce4565b9150509250929050565b610dc281610fb0565b82525050565b610dd181610fc2565b82525050565b6000610de4602683610f9f565b9150610def82610ffd565b604082019050919050565b6000610e07602083610f9f565b9150610e128261104c565b602082019050919050565b6000610e2a601b83610f9f565b9150610e3582611075565b602082019050919050565b6000610e4d601b83610f9f565b9150610e588261109e565b602082019050919050565b6000610e70602083610f9f565b9150610e7b826110c7565b602082019050919050565b6000610e93602083610f9f565b9150610e9e826110f0565b602082019050919050565b6000602082019050610ebe6000830184610db9565b92915050565b6000602082019050610ed96000830184610dc8565b92915050565b60006020820190508181036000830152610ef881610dd7565b9050919050565b60006020820190508181036000830152610f1881610dfa565b9050919050565b60006020820190508181036000830152610f3881610e1d565b9050919050565b60006020820190508181036000830152610f5881610e40565b9050919050565b60006020820190508181036000830152610f7881610e63565b9050919050565b60006020820190508181036000830152610f9881610e86565b9050919050565b600082825260208201905092915050565b6000610fbb82610fce565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f54686973204167656e74206973206e6f74207265676973746572656420796574600082015250565b7f5468697320746f6b656e206973206e6f7420626f756e64207965740000000000600082015250565b7f5468697320746f6b656e20697320616c726561647920626f756e640000000000600082015250565b7f54686973204167656e7420697320616c72656164792072656769737465726564600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61112281610fb0565b811461112d57600080fd5b50565b61113981610fee565b811461114457600080fd5b5056fea26469706673582212208ca1f6eb13d8e9892406568621f0bbe4b984c3002c7b7efe76e7227e4ef4e46164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x117D DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D2EA772 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCDDE2932 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDE2932 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xFF3E6954 EQ PUSH2 0x287 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x993E8B95 EQ PUSH2 0x1EF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5F8DEAD3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x7BCF0487 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x199 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x346531FA EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x301 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31F PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B DUP2 PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BA PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A DUP2 PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B8 PUSH1 0x0 PUSH2 0xC0B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C2 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E0 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x971 JUMP JUMPDEST POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F0 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6A659BB87BB23EFBDC295F8EED8AE8C4379BFB77660CED2EF0F3D7D26B05C6A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA66 DUP2 PUSH2 0xC0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA71 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8F PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB69 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD62C45E13AC30396ACEB3AD37C89BD1BA9048032FE61679000E92EB93DBFD67D DUP2 PUSH1 0x40 MLOAD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDE DUP2 PUSH2 0x1119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF3 DUP2 PUSH2 0x1130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4D DUP7 DUP3 DUP8 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5E DUP7 DUP3 DUP8 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6F DUP7 DUP3 DUP8 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH2 0xD8F PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9E DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDAF DUP6 DUP3 DUP7 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDD1 DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 PUSH1 0x26 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xDEF DUP3 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE07 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE12 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A PUSH1 0x1B DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE35 DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D PUSH1 0x1B DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE58 DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE70 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP3 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF8 DUP2 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF18 DUP2 PUSH2 0xDFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF58 DUP2 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF78 DUP2 PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF98 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP3 PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686973204167656E74206973206E6F74207265676973746572656420796574 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64207965740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E20697320616C726561647920626F756E640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686973204167656E7420697320616C72656164792072656769737465726564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1122 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x112D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1139 DUP2 PUSH2 0xFEE JUMP JUMPDEST DUP2 EQ PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 LOG1 0xF6 0xEB SGT 0xD8 0xE9 DUP10 0x24 MOD JUMP DUP7 0x21 CREATE 0xBB 0xE4 0xB9 DUP5 0xC3 STOP 0x2C PUSH28 0x7EFE76E7227E4EF4E46164736F6C6343000807003300000000000000 ",
							"sourceMap": "1202:2854:2:-:0;;;;;;;;;;;;;867:23:0;877:12;:10;;;:12;;:::i;:::-;867:9;;;:23;;:::i;:::-;1202:2854:2;;586:96:1;639:7;665:10;658:17;;586:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;1202:2854:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_msgSender_114": {
									"entryPoint": 3075,
									"id": 114,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_setOwner_102": {
									"entryPoint": 3083,
									"id": 102,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addTokenAgent_200": {
									"entryPoint": 2665,
									"id": 200,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@bindToken_255": {
									"entryPoint": 761,
									"id": 255,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@canTransfer_298": {
									"entryPoint": 2404,
									"id": 298,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@created_320": {
									"entryPoint": 1582,
									"id": 320,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@destroyed_330": {
									"entryPoint": 1863,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@isTokenAgent_157": {
									"entryPoint": 675,
									"id": 157,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@isTokenBound_172": {
									"entryPoint": 1908,
									"id": 172,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@owner_32": {
									"entryPoint": 1867,
									"id": 32,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeTokenAgent_227": {
									"entryPoint": 1994,
									"id": 227,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_60": {
									"entryPoint": 1586,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnershipOnComplianceContract_344": {
									"entryPoint": 1722,
									"id": 344,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_83": {
									"entryPoint": 2417,
									"id": 83,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferred_310": {
									"entryPoint": 1858,
									"id": 310,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unbindToken_282": {
									"entryPoint": 1172,
									"id": 282,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 3279,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 3300,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 3321,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_uint256": {
									"entryPoint": 3366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 3449,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 3513,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 3528,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3543,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3578,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3613,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3648,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3683,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 3718,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 3753,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 3780,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3807,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3839,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3871,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3903,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3935,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 3967,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 3999,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 4016,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 4034,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 4046,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 4078,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 4088,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 4093,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c": {
									"entryPoint": 4172,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243": {
									"entryPoint": 4213,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c": {
									"entryPoint": 4254,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c": {
									"entryPoint": 4295,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 4336,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 4377,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 4400,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:9531:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "732:519:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "778:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "780:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "780:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "780:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "753:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "762:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "749:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "749:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "774:2:4",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "745:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:32:4"
															},
															"nodeType": "YulIf",
															"src": "742:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "871:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "886:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "900:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "890:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "915:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "950:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "961:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "946:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "946:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "970:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "925:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "925:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "915:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "998:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1013:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1027:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1017:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1043:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1078:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1089:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1074:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1074:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1098:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1053:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1053:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1043:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1126:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1141:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1155:2:4",
																		"type": "",
																		"value": "64"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1145:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1171:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1206:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1217:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1202:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1202:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1226:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1181:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1181:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value2",
																			"nodeType": "YulIdentifier",
																			"src": "1171:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "686:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "697:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "717:6:4",
														"type": ""
													},
													{
														"name": "value2",
														"nodeType": "YulTypedName",
														"src": "725:6:4",
														"type": ""
													}
												],
												"src": "632:619:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1340:391:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1386:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "1388:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1388:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1388:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1361:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "1370:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1357:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1357:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1382:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "1353:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1353:32:4"
															},
															"nodeType": "YulIf",
															"src": "1350:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "1479:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1494:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1508:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1498:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1523:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1558:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1569:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1554:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1554:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1578:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1533:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1533:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "1523:6:4"
																		}
																	]
																}
															]
														},
														{
															"nodeType": "YulBlock",
															"src": "1606:118:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "1621:16:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1635:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "1625:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "1651:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "1686:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "1697:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "1682:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "1682:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "1706:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "1661:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1661:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nodeType": "YulIdentifier",
																			"src": "1651:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "1302:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "1313:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1325:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nodeType": "YulTypedName",
														"src": "1333:6:4",
														"type": ""
													}
												],
												"src": "1257:474:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1802:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1819:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1842:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1824:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1824:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1812:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1812:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1812:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1790:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1797:3:4",
														"type": ""
													}
												],
												"src": "1737:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1920:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1937:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1957:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nodeType": "YulIdentifier",
																			"src": "1942:14:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1942:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1930:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1930:34:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1930:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1908:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1915:3:4",
														"type": ""
													}
												],
												"src": "1861:109:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2122:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2132:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2198:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2203:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2139:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2139:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2132:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2304:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2215:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2215:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2215:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2317:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2328:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2333:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2324:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2324:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2317:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2110:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2118:3:4",
														"type": ""
													}
												],
												"src": "1976:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2494:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2504:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2570:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2575:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2511:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2511:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2504:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2676:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c",
																	"nodeType": "YulIdentifier",
																	"src": "2587:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2587:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2587:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2689:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2700:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2705:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2696:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2696:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2689:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2482:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2490:3:4",
														"type": ""
													}
												],
												"src": "2348:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2866:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2876:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2942:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2947:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2883:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2883:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2876:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3048:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243",
																	"nodeType": "YulIdentifier",
																	"src": "2959:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2959:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2959:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3061:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3072:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3077:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3068:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3068:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3061:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2854:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2862:3:4",
														"type": ""
													}
												],
												"src": "2720:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3238:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3248:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3314:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3319:2:4",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3255:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3255:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3248:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3420:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c",
																	"nodeType": "YulIdentifier",
																	"src": "3331:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3331:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3331:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3433:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3444:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3449:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3440:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3440:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3433:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3226:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3234:3:4",
														"type": ""
													}
												],
												"src": "3092:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3610:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3620:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3686:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3691:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3627:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3627:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3620:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3792:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c",
																	"nodeType": "YulIdentifier",
																	"src": "3703:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3703:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3703:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3805:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3816:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3821:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3812:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3812:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3805:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3598:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3606:3:4",
														"type": ""
													}
												],
												"src": "3464:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3982:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3992:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4058:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4063:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3999:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3999:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "3992:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4164:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "4075:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4075:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4075:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4177:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "4188:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4193:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4184:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3970:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "3978:3:4",
														"type": ""
													}
												],
												"src": "3836:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4306:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4316:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4328:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4339:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4324:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4324:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4316:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4409:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4420:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4405:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4405:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4352:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4352:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4352:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4278:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4290:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4301:4:4",
														"type": ""
													}
												],
												"src": "4208:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4528:118:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4538:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4550:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4561:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4546:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4546:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4538:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "4612:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4625:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4636:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4621:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4621:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4574:37:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4574:65:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4574:65:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4500:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "4512:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4523:4:4",
														"type": ""
													}
												],
												"src": "4436:210:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4823:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4833:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4845:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4856:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4841:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4841:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4833:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4880:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4891:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4876:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4876:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4899:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4905:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4895:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4895:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4869:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4869:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4869:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4925:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5059:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4933:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4933:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4925:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4803:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4818:4:4",
														"type": ""
													}
												],
												"src": "4652:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5248:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5258:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5270:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5281:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5266:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5266:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5258:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5305:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5316:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5301:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5301:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5324:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5330:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5320:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5320:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5294:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5294:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5294:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5350:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5484:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5358:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5358:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5350:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5228:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5243:4:4",
														"type": ""
													}
												],
												"src": "5077:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5673:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5683:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5695:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5706:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5691:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5691:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5683:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5730:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "5741:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "5726:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5726:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "5749:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "5755:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "5745:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5745:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5719:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5719:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5775:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5909:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5783:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5783:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5775:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "5653:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "5668:4:4",
														"type": ""
													}
												],
												"src": "5502:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6098:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6108:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6120:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6131:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6116:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6116:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6108:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6155:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6166:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6151:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6151:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6174:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6180:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6170:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6170:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6144:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6144:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6144:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6200:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6334:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6208:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6208:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6200:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6078:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6093:4:4",
														"type": ""
													}
												],
												"src": "5927:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6523:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6533:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6545:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6556:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6541:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6541:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6533:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6580:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "6591:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "6576:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6576:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "6599:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "6605:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6595:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6569:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6569:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6569:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6625:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "6759:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "6633:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6633:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6625:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6503:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6518:4:4",
														"type": ""
													}
												],
												"src": "6352:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6948:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6958:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "6970:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6981:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6966:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6966:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "6958:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7005:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7016:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7001:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7001:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "7024:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "7030:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "7020:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7020:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6994:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6994:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6994:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7050:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "7184:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "7058:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7058:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "7050:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "6928:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "6943:4:4",
														"type": ""
													}
												],
												"src": "6777:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7242:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7252:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7268:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "7262:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7262:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "7252:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7235:6:4",
														"type": ""
													}
												],
												"src": "7202:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7379:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7396:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "7401:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7389:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "7417:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "7436:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7441:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "7432:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7432:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "7417:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "7351:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "7356:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "7367:11:4",
														"type": ""
													}
												],
												"src": "7283:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7503:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7513:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7542:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "7524:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7524:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7513:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7485:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7495:7:4",
														"type": ""
													}
												],
												"src": "7458:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7602:48:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7612:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "7637:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nodeType": "YulIdentifier",
																			"src": "7630:6:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7630:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "7623:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7623:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7612:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7584:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7594:7:4",
														"type": ""
													}
												],
												"src": "7560:90:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7701:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7711:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "7726:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7733:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "7722:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7722:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7711:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7683:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7693:7:4",
														"type": ""
													}
												],
												"src": "7656:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7833:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "7843:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "7854:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "7843:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "7815:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "7825:7:4",
														"type": ""
													}
												],
												"src": "7788:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7960:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7977:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7980:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7970:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7970:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7970:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7871:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8083:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8100:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "8103:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "8093:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8093:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8093:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7994:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8223:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8245:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8253:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8241:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8241:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8257:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8234:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8234:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8234:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8313:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8321:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8309:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8309:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8326:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8302:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8302:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8302:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8215:6:4",
														"type": ""
													}
												],
												"src": "8117:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8454:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8476:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8484:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8472:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8472:14:4"
																	},
																	{
																		"hexValue": "54686973204167656e74206973206e6f74207265676973746572656420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8488:34:4",
																		"type": "",
																		"value": "This Agent is not registered yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8465:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8465:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8465:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8446:6:4",
														"type": ""
													}
												],
												"src": "8348:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8642:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8664:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8672:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8660:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8660:14:4"
																	},
																	{
																		"hexValue": "5468697320746f6b656e206973206e6f7420626f756e6420796574",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8676:29:4",
																		"type": "",
																		"value": "This token is not bound yet"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8653:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8653:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8634:6:4",
														"type": ""
													}
												],
												"src": "8536:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8825:71:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8847:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8855:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8843:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8843:14:4"
																	},
																	{
																		"hexValue": "5468697320746f6b656e20697320616c726561647920626f756e64",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8859:29:4",
																		"type": "",
																		"value": "This token is already bound"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8836:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8836:53:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8836:53:4"
														}
													]
												},
												"name": "store_literal_in_memory_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8817:6:4",
														"type": ""
													}
												],
												"src": "8719:177:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9008:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9030:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9038:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9026:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9026:14:4"
																	},
																	{
																		"hexValue": "54686973204167656e7420697320616c72656164792072656769737465726564",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9042:34:4",
																		"type": "",
																		"value": "This Agent is already registered"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9019:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9019:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9019:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9000:6:4",
														"type": ""
													}
												],
												"src": "8902:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9196:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "9218:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "9226:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "9214:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9214:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "9230:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "9207:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9207:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "9207:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "9188:6:4",
														"type": ""
													}
												],
												"src": "9090:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9321:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9378:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9387:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9390:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9380:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9380:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9380:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9344:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9369:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "9351:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9351:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9341:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9341:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9334:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9334:43:4"
															},
															"nodeType": "YulIf",
															"src": "9331:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9314:5:4",
														"type": ""
													}
												],
												"src": "9278:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "9449:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "9506:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9515:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "9518:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "9508:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "9508:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "9508:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "9472:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "9497:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "9479:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "9479:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "9469:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "9469:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9462:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "9462:43:4"
															},
															"nodeType": "YulIf",
															"src": "9459:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "9442:5:4",
														"type": ""
													}
												],
												"src": "9406:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Agent is not registered yet\")\n\n    }\n\n    function store_literal_in_memory_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token is not bound yet\")\n\n    }\n\n    function store_literal_in_memory_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This token is already bound\")\n\n    }\n\n    function store_literal_in_memory_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c(memPtr) {\n\n        mstore(add(memPtr, 0), \"This Agent is already registered\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b50600436106100ea5760003560e01c80638d2ea7721161008c578063cdde293211610066578063cdde29321461021f578063e46638e61461023b578063f2fde38b1461026b578063ff3e695414610287576100ea565b80638d2ea772146101b55780638da5cb5b146101d1578063993e8b95146101ef576100ea565b80635f8dead3116100c85780635f8dead314610157578063715018a6146101735780637bcf04871461017d5780638baf29b414610199576100ea565b8063346531fa146100ef5780633ff5aa021461011f57806340db3b501461013b575b600080fd5b61010960048036038101906101049190610cf9565b6102a3565b6040516101169190610ec4565b60405180910390f35b61013960048036038101906101349190610cf9565b6102f9565b005b61015560048036038101906101509190610cf9565b610494565b005b610171600480360381019061016c9190610d79565b61062e565b005b61017b610632565b005b61019760048036038101906101929190610cf9565b6106ba565b005b6101b360048036038101906101ae9190610d26565b610742565b005b6101cf60048036038101906101ca9190610d79565b610747565b005b6101d961074b565b6040516101e69190610ea9565b60405180910390f35b61020960048036038101906102049190610cf9565b610774565b6040516102169190610ec4565b60405180910390f35b61023960048036038101906102349190610cf9565b6107ca565b005b61025560048036038101906102509190610d26565b610964565b6040516102629190610ec4565b60405180910390f35b61028560048036038101906102809190610cf9565b610971565b005b6102a1600480360381019061029c9190610cf9565b610a69565b005b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b610301610c03565b73ffffffffffffffffffffffffffffffffffffffff1661031f61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610375576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161036c90610f7f565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610402576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103f990610f3f565b60405180910390fd5b6001600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f2de35142b19ed5a07796cf30791959c592018f70b1d2d7c460eef8ffe713692b816040516104899190610ea9565b60405180910390a150565b61049c610c03565b73ffffffffffffffffffffffffffffffffffffffff166104ba61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610510576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161050790610f7f565b60405180910390fd5b600260008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1661059c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161059390610f1f565b60405180910390fd5b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f28a4ca7134a3b3f9aff286e79ad3daadb4a06d1b43d037a3a98bdc074edd9b7a816040516106239190610ea9565b60405180910390a150565b5050565b61063a610c03565b73ffffffffffffffffffffffffffffffffffffffff1661065861074b565b73ffffffffffffffffffffffffffffffffffffffff16146106ae576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016106a590610f7f565b60405180910390fd5b6106b86000610c0b565b565b6106c2610c03565b73ffffffffffffffffffffffffffffffffffffffff166106e061074b565b73ffffffffffffffffffffffffffffffffffffffff1614610736576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161072d90610f7f565b60405180910390fd5b61073f81610971565b50565b505050565b5050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6000600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169050919050565b6107d2610c03565b73ffffffffffffffffffffffffffffffffffffffff166107f061074b565b73ffffffffffffffffffffffffffffffffffffffff1614610846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161083d90610f7f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166108d2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108c990610eff565b60405180910390fd5b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507f6a659bb87bb23efbdc295f8eed8ae8c4379bfb77660ced2ef0f3d7d26b05c6a6816040516109599190610ea9565b60405180910390a150565b6000600190509392505050565b610979610c03565b73ffffffffffffffffffffffffffffffffffffffff1661099761074b565b73ffffffffffffffffffffffffffffffffffffffff16146109ed576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109e490610f7f565b60405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610a5d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a5490610edf565b60405180910390fd5b610a6681610c0b565b50565b610a71610c03565b73ffffffffffffffffffffffffffffffffffffffff16610a8f61074b565b73ffffffffffffffffffffffffffffffffffffffff1614610ae5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610adc90610f7f565b60405180910390fd5b600160008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1615610b72576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b6990610f5f565b60405180910390fd5b60018060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055507fd62c45e13ac30396aceb3ad37c89bd1ba9048032fe61679000e92eb93dbfd67d81604051610bf89190610ea9565b60405180910390a150565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600081359050610cde81611119565b92915050565b600081359050610cf381611130565b92915050565b600060208284031215610d0f57610d0e610ff8565b5b6000610d1d84828501610ccf565b91505092915050565b600080600060608486031215610d3f57610d3e610ff8565b5b6000610d4d86828701610ccf565b9350506020610d5e86828701610ccf565b9250506040610d6f86828701610ce4565b9150509250925092565b60008060408385031215610d9057610d8f610ff8565b5b6000610d9e85828601610ccf565b9250506020610daf85828601610ce4565b9150509250929050565b610dc281610fb0565b82525050565b610dd181610fc2565b82525050565b6000610de4602683610f9f565b9150610def82610ffd565b604082019050919050565b6000610e07602083610f9f565b9150610e128261104c565b602082019050919050565b6000610e2a601b83610f9f565b9150610e3582611075565b602082019050919050565b6000610e4d601b83610f9f565b9150610e588261109e565b602082019050919050565b6000610e70602083610f9f565b9150610e7b826110c7565b602082019050919050565b6000610e93602083610f9f565b9150610e9e826110f0565b602082019050919050565b6000602082019050610ebe6000830184610db9565b92915050565b6000602082019050610ed96000830184610dc8565b92915050565b60006020820190508181036000830152610ef881610dd7565b9050919050565b60006020820190508181036000830152610f1881610dfa565b9050919050565b60006020820190508181036000830152610f3881610e1d565b9050919050565b60006020820190508181036000830152610f5881610e40565b9050919050565b60006020820190508181036000830152610f7881610e63565b9050919050565b60006020820190508181036000830152610f9881610e86565b9050919050565b600082825260208201905092915050565b6000610fbb82610fce565b9050919050565b60008115159050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f54686973204167656e74206973206e6f74207265676973746572656420796574600082015250565b7f5468697320746f6b656e206973206e6f7420626f756e64207965740000000000600082015250565b7f5468697320746f6b656e20697320616c726561647920626f756e640000000000600082015250565b7f54686973204167656e7420697320616c72656164792072656769737465726564600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b61112281610fb0565b811461112d57600080fd5b50565b61113981610fee565b811461114457600080fd5b5056fea26469706673582212208ca1f6eb13d8e9892406568621f0bbe4b984c3002c7b7efe76e7227e4ef4e46164736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xEA JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8D2EA772 GT PUSH2 0x8C JUMPI DUP1 PUSH4 0xCDDE2932 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCDDE2932 EQ PUSH2 0x21F JUMPI DUP1 PUSH4 0xE46638E6 EQ PUSH2 0x23B JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x26B JUMPI DUP1 PUSH4 0xFF3E6954 EQ PUSH2 0x287 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x8D2EA772 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0x993E8B95 EQ PUSH2 0x1EF JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x5F8DEAD3 GT PUSH2 0xC8 JUMPI DUP1 PUSH4 0x5F8DEAD3 EQ PUSH2 0x157 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x173 JUMPI DUP1 PUSH4 0x7BCF0487 EQ PUSH2 0x17D JUMPI DUP1 PUSH4 0x8BAF29B4 EQ PUSH2 0x199 JUMPI PUSH2 0xEA JUMP JUMPDEST DUP1 PUSH4 0x346531FA EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x3FF5AA02 EQ PUSH2 0x11F JUMPI DUP1 PUSH4 0x40DB3B50 EQ PUSH2 0x13B JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x109 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x104 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x2A3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x116 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x139 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x134 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x2F9 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x155 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x150 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x494 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x171 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x16C SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x62E JUMP JUMPDEST STOP JUMPDEST PUSH2 0x17B PUSH2 0x632 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x197 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x192 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x6BA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1B3 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1AE SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x742 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1CF PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1CA SWAP2 SWAP1 PUSH2 0xD79 JUMP JUMPDEST PUSH2 0x747 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1D9 PUSH2 0x74B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E6 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x209 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x204 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x774 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x216 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x239 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x234 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x7CA JUMP JUMPDEST STOP JUMPDEST PUSH2 0x255 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x250 SWAP2 SWAP1 PUSH2 0xD26 JUMP JUMPDEST PUSH2 0x964 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x262 SWAP2 SWAP1 PUSH2 0xEC4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x285 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x280 SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0x971 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2A1 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x29C SWAP2 SWAP1 PUSH2 0xCF9 JUMP JUMPDEST PUSH2 0xA69 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x301 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x31F PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x375 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x36C SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x402 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x3F9 SWAP1 PUSH2 0xF3F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B DUP2 PUSH1 0x40 MLOAD PUSH2 0x489 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH2 0x49C PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x4BA PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x510 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x507 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x59C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x593 SWAP1 PUSH2 0xF1F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A DUP2 PUSH1 0x40 MLOAD PUSH2 0x623 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x63A PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x658 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x6AE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x6A5 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x6B8 PUSH1 0x0 PUSH2 0xC0B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0x6C2 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x6E0 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x736 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x72D SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x73F DUP2 PUSH2 0x971 JUMP JUMPDEST POP JUMP JUMPDEST POP POP POP JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x7F0 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x846 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x83D SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND PUSH2 0x8D2 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x8C9 SWAP1 PUSH2 0xEFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0x6A659BB87BB23EFBDC295F8EED8AE8C4379BFB77660CED2EF0F3D7D26B05C6A6 DUP2 PUSH1 0x40 MLOAD PUSH2 0x959 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x979 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x997 PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x9ED JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9E4 SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0xA5D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA54 SWAP1 PUSH2 0xEDF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0xA66 DUP2 PUSH2 0xC0B JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0xA71 PUSH2 0xC03 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0xA8F PUSH2 0x74B JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xAE5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xADC SWAP1 PUSH2 0xF7F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0xB72 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xB69 SWAP1 PUSH2 0xF5F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP1 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH32 0xD62C45E13AC30396ACEB3AD37C89BD1BA9048032FE61679000E92EB93DBFD67D DUP2 PUSH1 0x40 MLOAD PUSH2 0xBF8 SWAP2 SWAP1 PUSH2 0xEA9 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCDE DUP2 PUSH2 0x1119 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xCF3 DUP2 PUSH2 0x1130 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xD0F JUMPI PUSH2 0xD0E PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD1D DUP5 DUP3 DUP6 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xD3F JUMPI PUSH2 0xD3E PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD4D DUP7 DUP3 DUP8 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0xD5E DUP7 DUP3 DUP8 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0xD6F DUP7 DUP3 DUP8 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xD90 JUMPI PUSH2 0xD8F PUSH2 0xFF8 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0xD9E DUP6 DUP3 DUP7 ADD PUSH2 0xCCF JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0xDAF DUP6 DUP3 DUP7 ADD PUSH2 0xCE4 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0xDC2 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0xDD1 DUP2 PUSH2 0xFC2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xDE4 PUSH1 0x26 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xDEF DUP3 PUSH2 0xFFD JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE07 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE12 DUP3 PUSH2 0x104C JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE2A PUSH1 0x1B DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE35 DUP3 PUSH2 0x1075 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE4D PUSH1 0x1B DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE58 DUP3 PUSH2 0x109E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE70 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE7B DUP3 PUSH2 0x10C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xE93 PUSH1 0x20 DUP4 PUSH2 0xF9F JUMP JUMPDEST SWAP2 POP PUSH2 0xE9E DUP3 PUSH2 0x10F0 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xEBE PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDB9 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0xED9 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0xDC8 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xEF8 DUP2 PUSH2 0xDD7 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF18 DUP2 PUSH2 0xDFA JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF38 DUP2 PUSH2 0xE1D JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF58 DUP2 PUSH2 0xE40 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF78 DUP2 PUSH2 0xE63 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0xF98 DUP2 PUSH2 0xE86 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xFBB DUP3 PUSH2 0xFCE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686973204167656E74206973206E6F74207265676973746572656420796574 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E206973206E6F7420626F756E64207965740000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x5468697320746F6B656E20697320616C726561647920626F756E640000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x54686973204167656E7420697320616C72656164792072656769737465726564 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x1122 DUP2 PUSH2 0xFB0 JUMP JUMPDEST DUP2 EQ PUSH2 0x112D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0x1139 DUP2 PUSH2 0xFEE JUMP JUMPDEST DUP2 EQ PUSH2 0x1144 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP13 LOG1 0xF6 0xEB SGT 0xD8 0xE9 DUP10 0x24 MOD JUMP DUP7 0x21 CREATE 0xBB 0xE4 0xB9 DUP5 0xC3 STOP 0x2C PUSH28 0x7EFE76E7227E4EF4E46164736F6C6343000807003300000000000000 ",
							"sourceMap": "1202:2854:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1548:138;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2602:211;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2880:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3601:78;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1605:92:0;;;:::i;:::-;;3917:137:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3406:133;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3743:82;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;973:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1753:120:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2269:266;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;3161:179;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1846:189:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1941:261:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1548:138;1623:4;1647:16;:31;1664:13;1647:31;;;;;;;;;;;;;;;;;;;;;;;;;1639:40;;1548:138;;;:::o;2602:211::-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2684:12:2::1;:20;2697:6;2684:20;;;;;;;;;;;;;;;;;;;;;;;;;2683:21;2675:61;;;;;;;;;;;;:::i;:::-;;;;;;;;;2769:4;2746:12;:20;2759:6;2746:20;;;;;;;;;;;;;;;;:27;;;;;;;;;;;;;;;;;;2788:18;2799:6;2788:18;;;;;;:::i;:::-;;;;;;;;2602:211:::0;:::o;2880:215::-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2963:12:2::1;:20;2976:6;2963:20;;;;;;;;;;;;;;;;;;;;;;;;;2955:60;;;;;;;;;;;;:::i;:::-;;;;;;;;;3048:5;3025:12;:20;3038:6;3025:20;;;;;;;;;;;;;;;;:28;;;;;;;;;;;;;;;;;;3068:20;3081:6;3068:20;;;;;;:::i;:::-;;;;;;;;2880:215:::0;:::o;3601:78::-;;;:::o;1605:92:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1669:21:::1;1687:1;1669:9;:21::i;:::-;1605:92::o:0;3917:137:2:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;4020:27:2::1;4038:8;4020:17;:27::i;:::-;3917:137:::0;:::o;3406:133::-;;;;:::o;3743:82::-;;;:::o;973:85:0:-;1019:7;1045:6;;;;;;;;;;;1038:13;;973:85;:::o;1753:120:2:-;1821:4;1845:12;:20;1858:6;1845:20;;;;;;;;;;;;;;;;;;;;;;;;;1837:29;;1753:120;;;:::o;2269:266::-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2364:16:2::1;:31;2381:13;2364:31;;;;;;;;;;;;;;;;;;;;;;;;;2356:76;;;;;;;;;;;;:::i;:::-;;;;;;;;;2476:5;2442:16;:31;2459:13;2442:31;;;;;;;;;;;;;;;;:39;;;;;;;;;;;;;;;;;;2496:32;2514:13;2496:32;;;;;;:::i;:::-;;;;;;;;2269:266:::0;:::o;3161:179::-;3306:4;3329;3322:11;;3161:179;;;;;:::o;1846:189:0:-;1196:12;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1954:1:::1;1934:22;;:8;:22;;;;1926:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2009:19;2019:8;2009:9;:19::i;:::-;1846:189:::0;:::o;1941:261:2:-;1196:12:0;:10;:12::i;:::-;1185:23;;:7;:5;:7::i;:::-;:23;;;1177:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;2034:16:2::1;:31;2051:13;2034:31;;;;;;;;;;;;;;;;;;;;;;;;;2033:32;2025:77;;;;;;;;;;;;:::i;:::-;;;;;;;;;2146:4;2112:16:::0;:31:::1;2129:13;2112:31;;;;;;;;;;;;;;;;:38;;;;;;;;;;;;;;;;;;2165:30;2181:13;2165:30;;;;;;:::i;:::-;;;;;;;;1941:261:::0;:::o;586:96:1:-;639:7;665:10;658:17;;586:96;:::o;2041:169:0:-;2096:16;2115:6;;;;;;;;;;;2096:25;;2140:8;2131:6;;:17;;;;;;;;;;;;;;;;;;2194:8;2163:40;;2184:8;2163:40;;;;;;;;;;;;2086:124;2041:169;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:619::-;709:6;717;725;774:2;762:9;753:7;749:23;745:32;742:119;;;780:79;;:::i;:::-;742:119;900:1;925:53;970:7;961:6;950:9;946:22;925:53;:::i;:::-;915:63;;871:117;1027:2;1053:53;1098:7;1089:6;1078:9;1074:22;1053:53;:::i;:::-;1043:63;;998:118;1155:2;1181:53;1226:7;1217:6;1206:9;1202:22;1181:53;:::i;:::-;1171:63;;1126:118;632:619;;;;;:::o;1257:474::-;1325:6;1333;1382:2;1370:9;1361:7;1357:23;1353:32;1350:119;;;1388:79;;:::i;:::-;1350:119;1508:1;1533:53;1578:7;1569:6;1558:9;1554:22;1533:53;:::i;:::-;1523:63;;1479:117;1635:2;1661:53;1706:7;1697:6;1686:9;1682:22;1661:53;:::i;:::-;1651:63;;1606:118;1257:474;;;;;:::o;1737:118::-;1824:24;1842:5;1824:24;:::i;:::-;1819:3;1812:37;1737:118;;:::o;1861:109::-;1942:21;1957:5;1942:21;:::i;:::-;1937:3;1930:34;1861:109;;:::o;1976:366::-;2118:3;2139:67;2203:2;2198:3;2139:67;:::i;:::-;2132:74;;2215:93;2304:3;2215:93;:::i;:::-;2333:2;2328:3;2324:12;2317:19;;1976:366;;;:::o;2348:::-;2490:3;2511:67;2575:2;2570:3;2511:67;:::i;:::-;2504:74;;2587:93;2676:3;2587:93;:::i;:::-;2705:2;2700:3;2696:12;2689:19;;2348:366;;;:::o;2720:::-;2862:3;2883:67;2947:2;2942:3;2883:67;:::i;:::-;2876:74;;2959:93;3048:3;2959:93;:::i;:::-;3077:2;3072:3;3068:12;3061:19;;2720:366;;;:::o;3092:::-;3234:3;3255:67;3319:2;3314:3;3255:67;:::i;:::-;3248:74;;3331:93;3420:3;3331:93;:::i;:::-;3449:2;3444:3;3440:12;3433:19;;3092:366;;;:::o;3464:::-;3606:3;3627:67;3691:2;3686:3;3627:67;:::i;:::-;3620:74;;3703:93;3792:3;3703:93;:::i;:::-;3821:2;3816:3;3812:12;3805:19;;3464:366;;;:::o;3836:::-;3978:3;3999:67;4063:2;4058:3;3999:67;:::i;:::-;3992:74;;4075:93;4164:3;4075:93;:::i;:::-;4193:2;4188:3;4184:12;4177:19;;3836:366;;;:::o;4208:222::-;4301:4;4339:2;4328:9;4324:18;4316:26;;4352:71;4420:1;4409:9;4405:17;4396:6;4352:71;:::i;:::-;4208:222;;;;:::o;4436:210::-;4523:4;4561:2;4550:9;4546:18;4538:26;;4574:65;4636:1;4625:9;4621:17;4612:6;4574:65;:::i;:::-;4436:210;;;;:::o;4652:419::-;4818:4;4856:2;4845:9;4841:18;4833:26;;4905:9;4899:4;4895:20;4891:1;4880:9;4876:17;4869:47;4933:131;5059:4;4933:131;:::i;:::-;4925:139;;4652:419;;;:::o;5077:::-;5243:4;5281:2;5270:9;5266:18;5258:26;;5330:9;5324:4;5320:20;5316:1;5305:9;5301:17;5294:47;5358:131;5484:4;5358:131;:::i;:::-;5350:139;;5077:419;;;:::o;5502:::-;5668:4;5706:2;5695:9;5691:18;5683:26;;5755:9;5749:4;5745:20;5741:1;5730:9;5726:17;5719:47;5783:131;5909:4;5783:131;:::i;:::-;5775:139;;5502:419;;;:::o;5927:::-;6093:4;6131:2;6120:9;6116:18;6108:26;;6180:9;6174:4;6170:20;6166:1;6155:9;6151:17;6144:47;6208:131;6334:4;6208:131;:::i;:::-;6200:139;;5927:419;;;:::o;6352:::-;6518:4;6556:2;6545:9;6541:18;6533:26;;6605:9;6599:4;6595:20;6591:1;6580:9;6576:17;6569:47;6633:131;6759:4;6633:131;:::i;:::-;6625:139;;6352:419;;;:::o;6777:::-;6943:4;6981:2;6970:9;6966:18;6958:26;;7030:9;7024:4;7020:20;7016:1;7005:9;7001:17;6994:47;7058:131;7184:4;7058:131;:::i;:::-;7050:139;;6777:419;;;:::o;7283:169::-;7367:11;7401:6;7396:3;7389:19;7441:4;7436:3;7432:14;7417:29;;7283:169;;;;:::o;7458:96::-;7495:7;7524:24;7542:5;7524:24;:::i;:::-;7513:35;;7458:96;;;:::o;7560:90::-;7594:7;7637:5;7630:13;7623:21;7612:32;;7560:90;;;:::o;7656:126::-;7693:7;7733:42;7726:5;7722:54;7711:65;;7656:126;;;:::o;7788:77::-;7825:7;7854:5;7843:16;;7788:77;;;:::o;7994:117::-;8103:1;8100;8093:12;8117:225;8257:34;8253:1;8245:6;8241:14;8234:58;8326:8;8321:2;8313:6;8309:15;8302:33;8117:225;:::o;8348:182::-;8488:34;8484:1;8476:6;8472:14;8465:58;8348:182;:::o;8536:177::-;8676:29;8672:1;8664:6;8660:14;8653:53;8536:177;:::o;8719:::-;8859:29;8855:1;8847:6;8843:14;8836:53;8719:177;:::o;8902:182::-;9042:34;9038:1;9030:6;9026:14;9019:58;8902:182;:::o;9090:::-;9230:34;9226:1;9218:6;9214:14;9207:58;9090:182;:::o;9278:122::-;9351:24;9369:5;9351:24;:::i;:::-;9344:5;9341:35;9331:63;;9390:1;9387;9380:12;9331:63;9278:122;:::o;9406:::-;9479:24;9497:5;9479:24;:::i;:::-;9472:5;9469:35;9459:63;;9518:1;9515;9508:12;9459:63;9406:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "895400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addTokenAgent(address)": "infinite",
								"bindToken(address)": "infinite",
								"canTransfer(address,address,uint256)": "infinite",
								"created(address,uint256)": "651",
								"destroyed(address,uint256)": "651",
								"isTokenAgent(address)": "2907",
								"isTokenBound(address)": "2950",
								"owner()": "2567",
								"removeTokenAgent(address)": "infinite",
								"renounceOwnership()": "30419",
								"transferOwnership(address)": "30789",
								"transferOwnershipOnComplianceContract(address)": "infinite",
								"transferred(address,address,uint256)": "infinite",
								"unbindToken(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 877,
									"end": 887,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 877,
									"end": 887,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 877,
									"end": 887,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 877,
									"end": 889,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 877,
									"end": 889,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 877,
									"end": 889,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 867,
									"end": 876,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 876,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 867,
									"end": 890,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 867,
									"end": 890,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 586,
									"end": 682,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 639,
									"end": 646,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 665,
									"end": 675,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 658,
									"end": 675,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 658,
									"end": 675,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 586,
									"end": 682,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 586,
									"end": 682,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2112,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2115,
									"end": 2121,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2121,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2096,
									"end": 2121,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2140,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2137,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2131,
									"end": 2137,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2131,
									"end": 2148,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2194,
									"end": 2202,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2184,
									"end": 2192,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2163,
									"end": 2203,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2086,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2041,
									"end": 2210,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1202,
									"end": 4056,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208ca1f6eb13d8e9892406568621f0bbe4b984c3002c7b7efe76e7227e4ef4e46164736f6c63430008070033",
									".code": [
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "8D2EA772"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "CDDE2932"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "CDDE2932"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "E46638E6"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "15"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "FF3E6954"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "tag",
											"source": 2,
											"value": "18"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "8D2EA772"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "993E8B95"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "5F8DEAD3"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "5F8DEAD3"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "7BCF0487"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "8BAF29B4"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "346531FA"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "3FF5AA02"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "40DB3B50"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1202,
											"end": 4056,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "tag",
											"source": 2,
											"value": "32"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "tag",
											"source": 2,
											"value": "38"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "41"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "62"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "67"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "66"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1623,
											"end": 1627,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1663,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1664,
											"end": 1677,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1647,
											"end": 1678,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1639,
											"end": 1679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1548,
											"end": 1686,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "75"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2684,
											"end": 2696,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2697,
											"end": 2703,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2684,
											"end": 2704,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2683,
											"end": 2704,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "tag",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 2675,
											"end": 2736,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2769,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2746,
											"end": 2758,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2759,
											"end": 2765,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2766,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2746,
											"end": 2773,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "2DE35142B19ED5A07796CF30791959C592018F70B1D2D7C460EEF8FFE713692B"
										},
										{
											"begin": 2799,
											"end": 2805,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2788,
											"end": 2806,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2602,
											"end": 2813,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "86"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "85"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2963,
											"end": 2975,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2976,
											"end": 2982,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2963,
											"end": 2983,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "90"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "89"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 2955,
											"end": 3015,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3048,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3037,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3038,
											"end": 3044,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3045,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 3025,
											"end": 3053,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "28A4CA7134A3B3F9AFF286E79AD3DAADB4A06D1B43D037A3A98BDC074EDD9B7A"
										},
										{
											"begin": 3081,
											"end": 3087,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "tag",
											"source": 2,
											"value": "91"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3068,
											"end": 3088,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2880,
											"end": 3095,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3601,
											"end": 3679,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "95"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1687,
											"end": 1688,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1669,
											"end": 1678,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1669,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1605,
											"end": 1697,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "102"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "103"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "105"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "104"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4020,
											"end": 4047,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4038,
											"end": 4046,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4020,
											"end": 4037,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 4020,
											"end": 4047,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 4020,
											"end": 4047,
											"name": "tag",
											"source": 2,
											"value": "107"
										},
										{
											"begin": 4020,
											"end": 4047,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3917,
											"end": 4054,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "tag",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3406,
											"end": 3539,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3743,
											"end": 3825,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "tag",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1026,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1045,
											"end": 1051,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1051,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1038,
											"end": 1051,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 973,
											"end": 1058,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "tag",
											"source": 2,
											"value": "54"
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1821,
											"end": 1825,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1857,
											"name": "PUSH",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1858,
											"end": 1864,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 1845,
											"end": 1865,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1837,
											"end": 1866,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1753,
											"end": 1873,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "tag",
											"source": 2,
											"value": "58"
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "113"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "115"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2364,
											"end": 2380,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2381,
											"end": 2394,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2364,
											"end": 2395,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "120"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "119"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "tag",
											"source": 2,
											"value": "118"
										},
										{
											"begin": 2356,
											"end": 2432,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2476,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2458,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2459,
											"end": 2472,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2473,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2442,
											"end": 2481,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "6A659BB87BB23EFBDC295F8EED8AE8C4379BFB77660CED2EF0F3D7D26B05C6A6"
										},
										{
											"begin": 2514,
											"end": 2527,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "tag",
											"source": 2,
											"value": "121"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2496,
											"end": 2528,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2269,
											"end": 2535,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "tag",
											"source": 2,
											"value": "61"
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3306,
											"end": 3310,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3329,
											"end": 3333,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 3322,
											"end": 3333,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3322,
											"end": 3333,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP4",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3161,
											"end": 3340,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "124"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "127"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1954,
											"end": 1955,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1942,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1934,
											"end": 1956,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "131"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "130"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "tag",
											"source": 0,
											"value": "129"
										},
										{
											"begin": 1926,
											"end": 1999,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2019,
											"end": 2027,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2009,
											"end": 2018,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "tag",
											"source": 0,
											"value": "132"
										},
										{
											"begin": 2009,
											"end": 2028,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1846,
											"end": 2035,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "tag",
											"source": 2,
											"value": "68"
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1196,
											"end": 1206,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "72"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 1196,
											"end": 1208,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1185,
											"end": 1190,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "49"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "tag",
											"source": 0,
											"value": "135"
										},
										{
											"begin": 1185,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1185,
											"end": 1208,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "76"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "137"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "tag",
											"source": 0,
											"value": "136"
										},
										{
											"begin": 1177,
											"end": 1245,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2034,
											"end": 2050,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2051,
											"end": 2064,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "DIV",
											"source": 2
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2034,
											"end": 2065,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2033,
											"end": 2065,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "141"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "140"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 2025,
											"end": 2102,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2146,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2112,
											"end": 2128,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2129,
											"end": 2142,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2143,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "100"
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "EXP",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "PUSH",
											"source": 2,
											"value": "FF"
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "NOT",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "OR",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2112,
											"end": 2150,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH",
											"source": 2,
											"value": "D62C45E13AC30396ACEB3AD37C89BD1BA9048032FE61679000E92EB93DBFD67D"
										},
										{
											"begin": 2181,
											"end": 2194,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "51"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "tag",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2165,
											"end": 2195,
											"name": "LOG1",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1941,
											"end": 2202,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "72"
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 639,
											"end": 646,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 665,
											"end": 675,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 658,
											"end": 675,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 658,
											"end": 675,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 586,
											"end": 682,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 586,
											"end": 682,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2112,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2115,
											"end": 2121,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2096,
											"end": 2121,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2140,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2131,
											"end": 2137,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2131,
											"end": 2148,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2194,
											"end": 2202,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2184,
											"end": 2192,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2163,
											"end": 2203,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2086,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2041,
											"end": 2210,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "156"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "tag",
											"source": 4,
											"value": "43"
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 709,
											"end": 715,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 717,
											"end": 723,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 725,
											"end": 731,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 774,
											"end": 776,
											"name": "PUSH",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 762,
											"end": 771,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 753,
											"end": 760,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 749,
											"end": 772,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 745,
											"end": 777,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 742,
											"end": 861,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 742,
											"end": 861,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 742,
											"end": 861,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 780,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 780,
											"end": 859,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 780,
											"end": 859,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 780,
											"end": 859,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 780,
											"end": 859,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 861,
											"name": "tag",
											"source": 4,
											"value": "160"
										},
										{
											"begin": 742,
											"end": 861,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 925,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 970,
											"end": 977,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 961,
											"end": 967,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 950,
											"end": 959,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 946,
											"end": 968,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 925,
											"end": 978,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 925,
											"end": 978,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 925,
											"end": 978,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 925,
											"end": 978,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 915,
											"end": 978,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 915,
											"end": 978,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 871,
											"end": 988,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1027,
											"end": 1029,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1053,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1098,
											"end": 1105,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1089,
											"end": 1095,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1078,
											"end": 1087,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1074,
											"end": 1096,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1053,
											"end": 1106,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1053,
											"end": 1106,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1053,
											"end": 1106,
											"name": "tag",
											"source": 4,
											"value": "163"
										},
										{
											"begin": 1053,
											"end": 1106,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1043,
											"end": 1106,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1043,
											"end": 1106,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 998,
											"end": 1116,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1155,
											"end": 1157,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1181,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1226,
											"end": 1233,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1206,
											"end": 1215,
											"name": "DUP8",
											"source": 4
										},
										{
											"begin": 1202,
											"end": 1224,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1181,
											"end": 1234,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1181,
											"end": 1234,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1181,
											"end": 1234,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 1181,
											"end": 1234,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1171,
											"end": 1234,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1244,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 1251,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1325,
											"end": 1331,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1333,
											"end": 1339,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1382,
											"end": 1384,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1370,
											"end": 1379,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1368,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1357,
											"end": 1380,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1353,
											"end": 1385,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1388,
											"end": 1467,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 1388,
											"end": 1467,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1388,
											"end": 1467,
											"name": "tag",
											"source": 4,
											"value": "167"
										},
										{
											"begin": 1388,
											"end": 1467,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 1350,
											"end": 1469,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1508,
											"end": 1509,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1578,
											"end": 1585,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1569,
											"end": 1575,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1558,
											"end": 1567,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1554,
											"end": 1576,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 1533,
											"end": 1586,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1523,
											"end": 1586,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1479,
											"end": 1596,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1635,
											"end": 1637,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1706,
											"end": 1713,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1697,
											"end": 1703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1686,
											"end": 1695,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1682,
											"end": 1704,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "tag",
											"source": 4,
											"value": "169"
										},
										{
											"begin": 1661,
											"end": 1714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1651,
											"end": 1714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1606,
											"end": 1724,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1257,
											"end": 1731,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1737,
											"end": 1855,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 1737,
											"end": 1855,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1842,
											"end": 1847,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1848,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 1824,
											"end": 1848,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1824,
											"end": 1848,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 1824,
											"end": 1848,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1819,
											"end": 1822,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1812,
											"end": 1849,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1855,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1737,
											"end": 1855,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1861,
											"end": 1970,
											"name": "tag",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 1861,
											"end": 1970,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1957,
											"end": 1962,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "tag",
											"source": 4,
											"value": "176"
										},
										{
											"begin": 1942,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1937,
											"end": 1940,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1930,
											"end": 1964,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1970,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1970,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "tag",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2118,
											"end": 2121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2139,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2203,
											"end": 2205,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2198,
											"end": 2201,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2139,
											"end": 2206,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2139,
											"end": 2206,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2139,
											"end": 2206,
											"name": "tag",
											"source": 4,
											"value": "180"
										},
										{
											"begin": 2139,
											"end": 2206,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2206,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2132,
											"end": 2206,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2304,
											"end": 2307,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 2215,
											"end": 2308,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2333,
											"end": 2335,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2328,
											"end": 2331,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2324,
											"end": 2336,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2317,
											"end": 2336,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1976,
											"end": 2342,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2490,
											"end": 2493,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2511,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2575,
											"end": 2577,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2570,
											"end": 2573,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2511,
											"end": 2578,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2511,
											"end": 2578,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2511,
											"end": 2578,
											"name": "tag",
											"source": 4,
											"value": "186"
										},
										{
											"begin": 2511,
											"end": 2578,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2578,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2504,
											"end": 2578,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2676,
											"end": 2679,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2587,
											"end": 2680,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 2587,
											"end": 2680,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2587,
											"end": 2680,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 2587,
											"end": 2680,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2705,
											"end": 2707,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2700,
											"end": 2703,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2696,
											"end": 2708,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2708,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2689,
											"end": 2708,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2348,
											"end": 2714,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "tag",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2862,
											"end": 2865,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2947,
											"end": 2949,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 2942,
											"end": 2945,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2883,
											"end": 2950,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 2883,
											"end": 2950,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2883,
											"end": 2950,
											"name": "tag",
											"source": 4,
											"value": "191"
										},
										{
											"begin": 2883,
											"end": 2950,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2950,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2876,
											"end": 2950,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 3048,
											"end": 3051,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2959,
											"end": 3052,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 2959,
											"end": 3052,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2959,
											"end": 3052,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 2959,
											"end": 3052,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3079,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3072,
											"end": 3075,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3068,
											"end": 3080,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3061,
											"end": 3080,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2720,
											"end": 3086,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3234,
											"end": 3237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3255,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3319,
											"end": 3321,
											"name": "PUSH",
											"source": 4,
											"value": "1B"
										},
										{
											"begin": 3314,
											"end": 3317,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3255,
											"end": 3322,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3255,
											"end": 3322,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3255,
											"end": 3322,
											"name": "tag",
											"source": 4,
											"value": "196"
										},
										{
											"begin": 3255,
											"end": 3322,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3322,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3248,
											"end": 3322,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3420,
											"end": 3423,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3331,
											"end": 3424,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 3331,
											"end": 3424,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3331,
											"end": 3424,
											"name": "tag",
											"source": 4,
											"value": "197"
										},
										{
											"begin": 3331,
											"end": 3424,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3449,
											"end": 3451,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3444,
											"end": 3447,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3440,
											"end": 3452,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3452,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3433,
											"end": 3452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3092,
											"end": 3458,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "tag",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3606,
											"end": 3609,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3627,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3691,
											"end": 3693,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3686,
											"end": 3689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3627,
											"end": 3694,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3627,
											"end": 3694,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3627,
											"end": 3694,
											"name": "tag",
											"source": 4,
											"value": "201"
										},
										{
											"begin": 3627,
											"end": 3694,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3620,
											"end": 3694,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3620,
											"end": 3694,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3792,
											"end": 3795,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3796,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 3703,
											"end": 3796,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3703,
											"end": 3796,
											"name": "tag",
											"source": 4,
											"value": "202"
										},
										{
											"begin": 3703,
											"end": 3796,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3821,
											"end": 3823,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3816,
											"end": 3819,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3812,
											"end": 3824,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3805,
											"end": 3824,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3464,
											"end": 3830,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "tag",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3978,
											"end": 3981,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3999,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 4063,
											"end": 4065,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4058,
											"end": 4061,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3999,
											"end": 4066,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 3999,
											"end": 4066,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3999,
											"end": 4066,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 3999,
											"end": 4066,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4066,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3992,
											"end": 4066,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4164,
											"end": 4167,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "tag",
											"source": 4,
											"value": "207"
										},
										{
											"begin": 4075,
											"end": 4168,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4193,
											"end": 4195,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4188,
											"end": 4191,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4184,
											"end": 4196,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4177,
											"end": 4196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3836,
											"end": 4202,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "tag",
											"source": 4,
											"value": "51"
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4301,
											"end": 4305,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4341,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4328,
											"end": 4337,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4324,
											"end": 4342,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4342,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4316,
											"end": 4342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4420,
											"end": 4421,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4409,
											"end": 4418,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4405,
											"end": 4422,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "tag",
											"source": 4,
											"value": "210"
										},
										{
											"begin": 4352,
											"end": 4423,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4208,
											"end": 4430,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4527,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4561,
											"end": 4563,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4550,
											"end": 4559,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4546,
											"end": 4564,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4564,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4538,
											"end": 4564,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4636,
											"end": 4637,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4625,
											"end": 4634,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4621,
											"end": 4638,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4612,
											"end": 4618,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 4574,
											"end": 4639,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "174"
										},
										{
											"begin": 4574,
											"end": 4639,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4574,
											"end": 4639,
											"name": "tag",
											"source": 4,
											"value": "212"
										},
										{
											"begin": 4574,
											"end": 4639,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4436,
											"end": 4646,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "tag",
											"source": 4,
											"value": "131"
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4856,
											"end": 4858,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4845,
											"end": 4854,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4841,
											"end": 4859,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4833,
											"end": 4859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4905,
											"end": 4914,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4899,
											"end": 4903,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4895,
											"end": 4915,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4891,
											"end": 4892,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4880,
											"end": 4889,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4876,
											"end": 4893,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4869,
											"end": 4916,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 5059,
											"end": 5063,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "178"
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "tag",
											"source": 4,
											"value": "214"
										},
										{
											"begin": 4933,
											"end": 5064,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4925,
											"end": 5064,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4652,
											"end": 5071,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5243,
											"end": 5247,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5281,
											"end": 5283,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5270,
											"end": 5279,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5266,
											"end": 5284,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5284,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5258,
											"end": 5284,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5330,
											"end": 5339,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5324,
											"end": 5328,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5320,
											"end": 5340,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5316,
											"end": 5317,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5314,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5301,
											"end": 5318,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5294,
											"end": 5341,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 5484,
											"end": 5488,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5358,
											"end": 5489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 5358,
											"end": 5489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5358,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "216"
										},
										{
											"begin": 5358,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5350,
											"end": 5489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5077,
											"end": 5496,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "tag",
											"source": 4,
											"value": "90"
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5668,
											"end": 5672,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5695,
											"end": 5704,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5683,
											"end": 5709,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5755,
											"end": 5764,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5749,
											"end": 5753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5745,
											"end": 5765,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 5741,
											"end": 5742,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5730,
											"end": 5739,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 5726,
											"end": 5743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5719,
											"end": 5766,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5909,
											"end": 5913,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "189"
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "tag",
											"source": 4,
											"value": "218"
										},
										{
											"begin": 5783,
											"end": 5914,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5914,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5775,
											"end": 5914,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5502,
											"end": 5921,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "tag",
											"source": 4,
											"value": "80"
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6093,
											"end": 6097,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6131,
											"end": 6133,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6120,
											"end": 6129,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6116,
											"end": 6134,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6134,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6108,
											"end": 6134,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6180,
											"end": 6189,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6174,
											"end": 6178,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6170,
											"end": 6190,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6166,
											"end": 6167,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6151,
											"end": 6168,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6144,
											"end": 6191,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6334,
											"end": 6338,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6208,
											"end": 6339,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6208,
											"end": 6339,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6208,
											"end": 6339,
											"name": "tag",
											"source": 4,
											"value": "220"
										},
										{
											"begin": 6208,
											"end": 6339,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6200,
											"end": 6339,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6200,
											"end": 6339,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5927,
											"end": 6346,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6518,
											"end": 6522,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6545,
											"end": 6554,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6541,
											"end": 6559,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6559,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6533,
											"end": 6559,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6605,
											"end": 6614,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6599,
											"end": 6603,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6595,
											"end": 6615,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6591,
											"end": 6592,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6580,
											"end": 6589,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6576,
											"end": 6593,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6569,
											"end": 6616,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6759,
											"end": 6763,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6633,
											"end": 6764,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "199"
										},
										{
											"begin": 6633,
											"end": 6764,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6633,
											"end": 6764,
											"name": "tag",
											"source": 4,
											"value": "222"
										},
										{
											"begin": 6633,
											"end": 6764,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6764,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6625,
											"end": 6764,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6352,
											"end": 6771,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6943,
											"end": 6947,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6981,
											"end": 6983,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 6970,
											"end": 6979,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6966,
											"end": 6984,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6958,
											"end": 6984,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7030,
											"end": 7039,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7024,
											"end": 7028,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7020,
											"end": 7040,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 7016,
											"end": 7017,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7005,
											"end": 7014,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 7001,
											"end": 7018,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6994,
											"end": 7041,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7184,
											"end": 7188,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7058,
											"end": 7189,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "204"
										},
										{
											"begin": 7058,
											"end": 7189,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7058,
											"end": 7189,
											"name": "tag",
											"source": 4,
											"value": "224"
										},
										{
											"begin": 7058,
											"end": 7189,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7189,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7050,
											"end": 7189,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6777,
											"end": 7196,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7367,
											"end": 7378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7401,
											"end": 7407,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7396,
											"end": 7399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7389,
											"end": 7408,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7441,
											"end": 7445,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7436,
											"end": 7439,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7432,
											"end": 7446,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7417,
											"end": 7446,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7417,
											"end": 7446,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7283,
											"end": 7452,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "tag",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7495,
											"end": 7502,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7524,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7542,
											"end": 7547,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7524,
											"end": 7548,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7524,
											"end": 7548,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 7524,
											"end": 7548,
											"name": "tag",
											"source": 4,
											"value": "229"
										},
										{
											"begin": 7524,
											"end": 7548,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7548,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7513,
											"end": 7548,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7458,
											"end": 7554,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "tag",
											"source": 4,
											"value": "177"
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7594,
											"end": 7601,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7637,
											"end": 7642,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7630,
											"end": 7643,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7623,
											"end": 7644,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7644,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7612,
											"end": 7644,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7560,
											"end": 7650,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "tag",
											"source": 4,
											"value": "230"
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7693,
											"end": 7700,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7733,
											"end": 7775,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 7726,
											"end": 7731,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7722,
											"end": 7776,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 7711,
											"end": 7776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7711,
											"end": 7776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7656,
											"end": 7782,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "tag",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7825,
											"end": 7832,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7854,
											"end": 7859,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7843,
											"end": 7859,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7788,
											"end": 7865,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7994,
											"end": 8111,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 7994,
											"end": 8111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8103,
											"end": 8104,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8100,
											"end": 8101,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8093,
											"end": 8105,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8342,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 8117,
											"end": 8342,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8257,
											"end": 8291,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 8253,
											"end": 8254,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8251,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8241,
											"end": 8255,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8234,
											"end": 8292,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8326,
											"end": 8334,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 8321,
											"end": 8323,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 8313,
											"end": 8319,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8309,
											"end": 8324,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8302,
											"end": 8335,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8342,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8117,
											"end": 8342,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8348,
											"end": 8530,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 8348,
											"end": 8530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8488,
											"end": 8522,
											"name": "PUSH",
											"source": 4,
											"value": "54686973204167656E74206973206E6F74207265676973746572656420796574"
										},
										{
											"begin": 8484,
											"end": 8485,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8476,
											"end": 8482,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8472,
											"end": 8486,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8465,
											"end": 8523,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8348,
											"end": 8530,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8348,
											"end": 8530,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8536,
											"end": 8713,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 8536,
											"end": 8713,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8676,
											"end": 8705,
											"name": "PUSH",
											"source": 4,
											"value": "5468697320746F6B656E206973206E6F7420626F756E64207965740000000000"
										},
										{
											"begin": 8672,
											"end": 8673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8664,
											"end": 8670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8660,
											"end": 8674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8653,
											"end": 8706,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8713,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8536,
											"end": 8713,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8719,
											"end": 8896,
											"name": "tag",
											"source": 4,
											"value": "198"
										},
										{
											"begin": 8719,
											"end": 8896,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8859,
											"end": 8888,
											"name": "PUSH",
											"source": 4,
											"value": "5468697320746F6B656E20697320616C726561647920626F756E640000000000"
										},
										{
											"begin": 8855,
											"end": 8856,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8847,
											"end": 8853,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8843,
											"end": 8857,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8836,
											"end": 8889,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8719,
											"end": 8896,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8719,
											"end": 8896,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8902,
											"end": 9084,
											"name": "tag",
											"source": 4,
											"value": "203"
										},
										{
											"begin": 8902,
											"end": 9084,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9042,
											"end": 9076,
											"name": "PUSH",
											"source": 4,
											"value": "54686973204167656E7420697320616C72656164792072656769737465726564"
										},
										{
											"begin": 9038,
											"end": 9039,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9030,
											"end": 9036,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9026,
											"end": 9040,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9019,
											"end": 9077,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 8902,
											"end": 9084,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8902,
											"end": 9084,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9090,
											"end": 9272,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 9090,
											"end": 9272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9230,
											"end": 9264,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 9226,
											"end": 9227,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9218,
											"end": 9224,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 9214,
											"end": 9228,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 9207,
											"end": 9265,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 9090,
											"end": 9272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9090,
											"end": 9272,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9278,
											"end": 9400,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 9278,
											"end": 9400,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9369,
											"end": 9374,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9351,
											"end": 9375,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "173"
										},
										{
											"begin": 9351,
											"end": 9375,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9351,
											"end": 9375,
											"name": "tag",
											"source": 4,
											"value": "245"
										},
										{
											"begin": 9351,
											"end": 9375,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9344,
											"end": 9349,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9341,
											"end": 9376,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9390,
											"end": 9391,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9387,
											"end": 9388,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9380,
											"end": 9392,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "tag",
											"source": 4,
											"value": "246"
										},
										{
											"begin": 9331,
											"end": 9394,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9400,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9278,
											"end": 9400,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 9406,
											"end": 9528,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 9406,
											"end": 9528,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9479,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 9497,
											"end": 9502,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9479,
											"end": 9503,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "233"
										},
										{
											"begin": 9479,
											"end": 9503,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 9479,
											"end": 9503,
											"name": "tag",
											"source": 4,
											"value": "248"
										},
										{
											"begin": 9479,
											"end": 9503,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9472,
											"end": 9477,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 9469,
											"end": 9504,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 9459,
											"end": 9522,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9459,
											"end": 9522,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 9518,
											"end": 9519,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 9515,
											"end": 9516,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 9508,
											"end": 9520,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 9459,
											"end": 9522,
											"name": "tag",
											"source": 4,
											"value": "249"
										},
										{
											"begin": 9459,
											"end": 9522,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9528,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 9406,
											"end": 9528,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addTokenAgent(address)": "ff3e6954",
							"bindToken(address)": "3ff5aa02",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"isTokenAgent(address)": "346531fa",
							"isTokenBound(address)": "993e8b95",
							"owner()": "8da5cb5b",
							"removeTokenAgent(address)": "cdde2932",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferOwnershipOnComplianceContract(address)": "7bcf0487",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"addTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"isTokenAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"removeTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnComplianceContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenAgent(address)\":{\"details\":\"See {ICompliance-addTokenAgent}.\"},\"bindToken(address)\":{\"details\":\"See {ICompliance-isTokenAgent}.\"},\"canTransfer(address,address,uint256)\":{\"details\":\"See {ICompliance-canTransfer}.\"},\"created(address,uint256)\":{\"details\":\"See {ICompliance-created}.\"},\"destroyed(address,uint256)\":{\"details\":\"See {ICompliance-destroyed}.\"},\"isTokenAgent(address)\":{\"details\":\"See {ICompliance-isTokenAgent}.\"},\"isTokenBound(address)\":{\"details\":\"See {ICompliance-isTokenBound}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeTokenAgent(address)\":{\"details\":\"See {ICompliance-isTokenAgent}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipOnComplianceContract(address)\":{\"details\":\"See {ICompliance-transferOwnershipOnComplianceContract}.\"},\"transferred(address,address,uint256)\":{\"details\":\"See {ICompliance-transferred}.\"},\"unbindToken(address)\":{\"details\":\"See {ICompliance-isTokenAgent}.\"}},\"stateVariables\":{\"_tokenAgentsList\":{\"details\":\"Mapping between agents and their statuses\"},\"_tokensBound\":{\"details\":\"Mapping of tokens linked to the compliance contract\"}},\"version\":1},\"userdoc\":{\"events\":{\"TokenAgentAdded(address)\":{\"notice\":\"this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add\"},\"TokenAgentRemoved(address)\":{\"notice\":\"this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/DefaultCompliance.sol\":\"DefaultCompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0x6bb804a310218875e89d12c053e94a13a4607cdf7cc2052f3e52bd32a0dc50a1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2ebbbe6d0011175bd9e7268b83de3f9c2f9d8d4cbfbaef12aff977d7d727163\",\"dweb:/ipfs/Qmd5c7Vxtis9wzkDNhxwc6A2QT5H9xn9kfjhx7qx44vpro\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0x95098bd1d9c8dec4d80d3dedb88a0d949fa0d740ee99f2aa466bc308216ca6d5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7fec968dcd68e13961521fa3c7dd87baecad91a2653b19240e81f21cc4f3ba85\",\"dweb:/ipfs/QmaXtsYt4Mphm8XHNUfk2me1cF3ssS2SqDBNFpYAzMjomC\"]},\"contracts/compliance/DefaultCompliance.sol\":{\"keccak256\":\"0xe8c76d868128706ffc86a87997679e3b6782d15a06f68839e42aa10d549974bd\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://5cf35c5aa040b93c7df8c0709d7b8d8441bb19f99d71fb9cf1228bfdc1056e27\",\"dweb:/ipfs/QmTcspRyapBn5gkaRcjgVc7GVugXmRPTFaEEeyz3AEK67D\"]},\"contracts/compliance/ICompliance.sol\":{\"keccak256\":\"0x4049905b34eab118c0c3f644450299a5ed8022bbbdb26036e7c2854dae8ae1ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8144953d88f543b2f537514f1136b8adf705837ba6d420b95569f6895153edb\",\"dweb:/ipfs/QmRqM7A6XrofFR67k8RtNNEkriAbKsQHDgUYaKZTMr9Nm5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/compliance/DefaultCompliance.sol:DefaultCompliance",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 137,
								"contract": "contracts/compliance/DefaultCompliance.sol:DefaultCompliance",
								"label": "_tokenAgentsList",
								"offset": 0,
								"slot": "1",
								"type": "t_mapping(t_address,t_bool)"
							},
							{
								"astId": 142,
								"contract": "contracts/compliance/DefaultCompliance.sol:DefaultCompliance",
								"label": "_tokensBound",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_bool)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"events": {
							"TokenAgentAdded(address)": {
								"notice": "this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add"
							},
							"TokenAgentRemoved(address)": {
								"notice": "this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove"
							},
							"TokenBound(address)": {
								"notice": "this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"
							},
							"TokenUnbound(address)": {
								"notice": "this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/compliance/ICompliance.sol": {
				"ICompliance": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "TokenAgentAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "TokenAgentRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenBound",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "TokenUnbound",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "addTokenAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "bindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "canTransfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "created",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "destroyed",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "isTokenAgent",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "isTokenBound",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_agentAddress",
									"type": "address"
								}
							],
							"name": "removeTokenAgent",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnershipOnComplianceContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "transferred",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_token",
									"type": "address"
								}
							],
							"name": "unbindToken",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addTokenAgent(address)": {
								"details": "adds an agent to the list of token agents",
								"params": {
									"_agentAddress": "address of the agent to be added  Emits a TokenAgentAdded event"
								}
							},
							"bindToken(address)": {
								"details": "binds a token to the compliance contract",
								"params": {
									"_token": "address of the token to bind  Emits a TokenBound event"
								}
							},
							"canTransfer(address,address,uint256)": {
								"details": "checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...",
								"params": {
									"_amount": "The amount of tokens involved in the transfer",
									"_from": "The address of the sender",
									"_to": "The address of the receiver"
								}
							},
							"created(address,uint256)": {
								"details": "function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
								"params": {
									"_amount": "The amount of tokens involved in the transfer",
									"_to": "The address of the receiver"
								}
							},
							"destroyed(address,uint256)": {
								"details": "function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
								"params": {
									"_amount": "The amount of tokens involved in the transfer",
									"_from": "The address of the receiver"
								}
							},
							"isTokenAgent(address)": {
								"details": "Returns true if the Address is in the list of token agents",
								"params": {
									"_agentAddress": "address of this agent"
								}
							},
							"isTokenBound(address)": {
								"details": "Returns true if the address given corresponds to a token that is bound with the Compliance contract",
								"params": {
									"_token": "address of the token"
								}
							},
							"removeTokenAgent(address)": {
								"details": "remove Agent from the list of token agents",
								"params": {
									"_agentAddress": "address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event"
								}
							},
							"transferOwnershipOnComplianceContract(address)": {
								"details": "function used to transfer the ownership of the compliance contract  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract",
								"params": {
									"newOwner": "The address of the new owner of the compliance contract  This function can only be called by the owner of the compliance contract  emits an `OwnershipTransferred` event"
								}
							},
							"transferred(address,address,uint256)": {
								"details": "function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract",
								"params": {
									"_amount": "The amount of tokens involved in the transfer",
									"_from": "The address of the sender",
									"_to": "The address of the receiver"
								}
							},
							"unbindToken(address)": {
								"details": "unbinds a token from the compliance contract",
								"params": {
									"_token": "address of the token to unbind  Emits a TokenUnbound event"
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addTokenAgent(address)": "ff3e6954",
							"bindToken(address)": "3ff5aa02",
							"canTransfer(address,address,uint256)": "e46638e6",
							"created(address,uint256)": "5f8dead3",
							"destroyed(address,uint256)": "8d2ea772",
							"isTokenAgent(address)": "346531fa",
							"isTokenBound(address)": "993e8b95",
							"removeTokenAgent(address)": "cdde2932",
							"transferOwnershipOnComplianceContract(address)": "7bcf0487",
							"transferred(address,address,uint256)": "8baf29b4",
							"unbindToken(address)": "40db3b50"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"TokenAgentRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenBound\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"TokenUnbound\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"addTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"bindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"canTransfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"created\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"destroyed\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"isTokenAgent\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"isTokenBound\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agentAddress\",\"type\":\"address\"}],\"name\":\"removeTokenAgent\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnComplianceContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferred\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"unbindToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addTokenAgent(address)\":{\"details\":\"adds an agent to the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be added  Emits a TokenAgentAdded event\"}},\"bindToken(address)\":{\"details\":\"binds a token to the compliance contract\",\"params\":{\"_token\":\"address of the token to bind  Emits a TokenBound event\"}},\"canTransfer(address,address,uint256)\":{\"details\":\"checks that the transfer is compliant.  default compliance always returns true  READ ONLY FUNCTION, this function cannot be used to increment  counters, emit events, ...\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"created(address,uint256)\":{\"details\":\"function called whenever tokens are created  on a wallet  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_to\":\"The address of the receiver\"}},\"destroyed(address,uint256)\":{\"details\":\"function called whenever tokens are destroyed  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the receiver\"}},\"isTokenAgent(address)\":{\"details\":\"Returns true if the Address is in the list of token agents\",\"params\":{\"_agentAddress\":\"address of this agent\"}},\"isTokenBound(address)\":{\"details\":\"Returns true if the address given corresponds to a token that is bound with the Compliance contract\",\"params\":{\"_token\":\"address of the token\"}},\"removeTokenAgent(address)\":{\"details\":\"remove Agent from the list of token agents\",\"params\":{\"_agentAddress\":\"address of the agent to be removed (must be added first)  Emits a TokenAgentRemoved event\"}},\"transferOwnershipOnComplianceContract(address)\":{\"details\":\"function used to transfer the ownership of the compliance contract  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\",\"params\":{\"newOwner\":\"The address of the new owner of the compliance contract  This function can only be called by the owner of the compliance contract  emits an `OwnershipTransferred` event\"}},\"transferred(address,address,uint256)\":{\"details\":\"function called whenever tokens are transferred  from one wallet to another  this function can update state variables in the compliance contract  these state variables being used by `canTransfer` to decide if a transfer  is compliant or not depending on the values stored in these state variables and on  the parameters of the compliance smart contract\",\"params\":{\"_amount\":\"The amount of tokens involved in the transfer\",\"_from\":\"The address of the sender\",\"_to\":\"The address of the receiver\"}},\"unbindToken(address)\":{\"details\":\"unbinds a token from the compliance contract\",\"params\":{\"_token\":\"address of the token to unbind  Emits a TokenUnbound event\"}}},\"version\":1},\"userdoc\":{\"events\":{\"TokenAgentAdded(address)\":{\"notice\":\"this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add\"},\"TokenAgentRemoved(address)\":{\"notice\":\"this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove\"},\"TokenBound(address)\":{\"notice\":\"this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind\"},\"TokenUnbound(address)\":{\"notice\":\"this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/compliance/ICompliance.sol\":\"ICompliance\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/compliance/ICompliance.sol\":{\"keccak256\":\"0x4049905b34eab118c0c3f644450299a5ed8022bbbdb26036e7c2854dae8ae1ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8144953d88f543b2f537514f1136b8adf705837ba6d420b95569f6895153edb\",\"dweb:/ipfs/QmRqM7A6XrofFR67k8RtNNEkriAbKsQHDgUYaKZTMr9Nm5\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"TokenAgentAdded(address)": {
								"notice": "this event is emitted when the Agent has been added on the allowedList of this Compliance.  the event is emitted by the Compliance constructor and by the addTokenAgent function  `_agentAddress` is the address of the Agent to add"
							},
							"TokenAgentRemoved(address)": {
								"notice": "this event is emitted when the Agent has been removed from the agent list of this Compliance.  the event is emitted by the Compliance constructor and by the removeTokenAgent function  `_agentAddress` is the address of the Agent to remove"
							},
							"TokenBound(address)": {
								"notice": "this event is emitted when a token has been bound to the compliance contract  the event is emitted by the bindToken function  `_token` is the address of the token to bind"
							},
							"TokenUnbound(address)": {
								"notice": "this event is emitted when a token has been unbound from the compliance contract  the event is emitted by the unbindToken function  `_token` is the address of the token to unbind"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> contracts/compliance/DefaultCompliance.sol:92:5:\n   |\n92 |     function canTransfer(\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 3340,
					"file": "contracts/compliance/DefaultCompliance.sol",
					"start": 3161
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							124
						],
						"Ownable": [
							103
						]
					},
					"id": 104,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 104,
							"sourceUnit": 125,
							"src": "58:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 124,
										"src": "614:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "614:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "90:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 103,
							"linearizedBaseContracts": [
								103,
								124
							],
							"name": "Ownable",
							"nameLocation": "603:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "644:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 103,
									"src": "628:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "628:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "663:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "700:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "684:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "684:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "731:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "715:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "715:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "683:57:0"
									},
									"src": "657:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "857:40:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 114,
																"src": "877:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "877:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "867:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "867:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "867:23:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "747:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "854:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "857:0:0"
									},
									"scope": 103,
									"src": "843:54:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 31,
										"nodeType": "Block",
										"src": "1028:30:0",
										"statements": [
											{
												"expression": {
													"id": 29,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1045:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 28,
												"id": 30,
												"nodeType": "Return",
												"src": "1038:13:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "903:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 32,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "982:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "987:2:0"
									},
									"returnParameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 32,
												"src": "1019:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1019:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1018:9:0"
									},
									"scope": 103,
									"src": "973:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "1167:96:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 36,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 32,
																	"src": "1185:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 37,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1185:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 38,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 114,
																	"src": "1196:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 39,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1196:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1185:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 41,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1210:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 35,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1177:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 42,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1177:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 43,
												"nodeType": "ExpressionStatement",
												"src": "1177:68:0"
											},
											{
												"id": 44,
												"nodeType": "PlaceholderStatement",
												"src": "1255:1:0"
											}
										]
									},
									"documentation": {
										"id": 33,
										"nodeType": "StructuredDocumentation",
										"src": "1064:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 46,
									"name": "onlyOwner",
									"nameLocation": "1155:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 34,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1164:2:0"
									},
									"src": "1146:117:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "1659:38:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 55,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1687:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 54,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1679:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 53,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1679:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1679:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 52,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "1669:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1669:21:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "1669:21:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "1269:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 50,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 49,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1649:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1649:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1614:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 48,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1631:2:0"
									},
									"returnParameters": {
										"id": 51,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1659:0:0"
									},
									"scope": 103,
									"src": "1605:92:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 82,
										"nodeType": "Block",
										"src": "1916:119:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 74,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 69,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 63,
																"src": "1934:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 72,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1954:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 71,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "1946:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 70,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "1946:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 73,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1946:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1934:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1958:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 68,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1926:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 76,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1926:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 77,
												"nodeType": "ExpressionStatement",
												"src": "1926:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 79,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 63,
															"src": "2019:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 78,
														"name": "_setOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 102,
														"src": "2009:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 80,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2009:19:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 81,
												"nodeType": "ExpressionStatement",
												"src": "2009:19:0"
											}
										]
									},
									"documentation": {
										"id": 61,
										"nodeType": "StructuredDocumentation",
										"src": "1703:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 83,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "1906:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1906:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "1855:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 63,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "1881:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 83,
												"src": "1873:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 62,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1873:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1872:18:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1916:0:0"
									},
									"scope": 103,
									"src": "1846:189:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 101,
										"nodeType": "Block",
										"src": "2086:124:0",
										"statements": [
											{
												"assignments": [
													89
												],
												"declarations": [
													{
														"constant": false,
														"id": 89,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2104:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 101,
														"src": "2096:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 88,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2096:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 91,
												"initialValue": {
													"id": 90,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2115:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2096:25:0"
											},
											{
												"expression": {
													"id": 94,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 92,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2131:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 93,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 85,
														"src": "2140:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2131:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 95,
												"nodeType": "ExpressionStatement",
												"src": "2131:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 97,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 89,
															"src": "2184:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 98,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 85,
															"src": "2194:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 96,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2163:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 99,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2163:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 100,
												"nodeType": "EmitStatement",
												"src": "2158:45:0"
											}
										]
									},
									"id": 102,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setOwner",
									"nameLocation": "2050:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 86,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 85,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2068:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 102,
												"src": "2060:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 84,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2060:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2059:18:0"
									},
									"returnParameters": {
										"id": 87,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2086:0:0"
									},
									"scope": 103,
									"src": "2041:169:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 104,
							"src": "585:1627:0",
							"usedErrors": []
						}
					],
					"src": "33:2180:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							124
						]
					},
					"id": 125,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 105,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "33:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 124,
							"linearizedBaseContracts": [
								124
							],
							"name": "Context",
							"nameLocation": "572:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 113,
										"nodeType": "Block",
										"src": "648:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 110,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "665:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 111,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "665:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 109,
												"id": 112,
												"nodeType": "Return",
												"src": "658:17:1"
											}
										]
									},
									"id": 114,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "595:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "605:2:1"
									},
									"returnParameters": {
										"id": 109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 114,
												"src": "639:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "639:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "638:9:1"
									},
									"scope": 124,
									"src": "586:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "755:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 119,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "772:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "772:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 118,
												"id": 121,
												"nodeType": "Return",
												"src": "765:15:1"
											}
										]
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "697:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "705:2:1"
									},
									"returnParameters": {
										"id": 118,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 117,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "739:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 116,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "739:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "738:16:1"
									},
									"scope": 124,
									"src": "688:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 125,
							"src": "554:235:1",
							"usedErrors": []
						}
					],
					"src": "33:757:1"
				},
				"id": 1
			},
			"contracts/compliance/DefaultCompliance.sol": {
				"ast": {
					"absolutePath": "contracts/compliance/DefaultCompliance.sol",
					"exportedSymbols": {
						"Context": [
							124
						],
						"DefaultCompliance": [
							345
						],
						"ICompliance": [
							452
						],
						"Ownable": [
							103
						]
					},
					"id": 346,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 126,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1094:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 346,
							"sourceUnit": 104,
							"src": "1119:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/compliance/ICompliance.sol",
							"file": "./ICompliance.sol",
							"id": 128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 346,
							"sourceUnit": 453,
							"src": "1173:27:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 129,
										"name": "ICompliance",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 452,
										"src": "1232:11:2"
									},
									"id": 130,
									"nodeType": "InheritanceSpecifier",
									"src": "1232:11:2"
								},
								{
									"baseName": {
										"id": 131,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 103,
										"src": "1245:7:2"
									},
									"id": 132,
									"nodeType": "InheritanceSpecifier",
									"src": "1245:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 345,
							"linearizedBaseContracts": [
								345,
								103,
								124,
								452
							],
							"name": "DefaultCompliance",
							"nameLocation": "1211:17:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 133,
										"nodeType": "StructuredDocumentation",
										"src": "1259:50:2",
										"text": "@dev Mapping between agents and their statuses"
									},
									"id": 137,
									"mutability": "mutable",
									"name": "_tokenAgentsList",
									"nameLocation": "1347:16:2",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "1314:49:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 136,
										"keyType": {
											"id": 134,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1322:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1314:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 135,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1333:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"documentation": {
										"id": 138,
										"nodeType": "StructuredDocumentation",
										"src": "1370:60:2",
										"text": "@dev Mapping of tokens linked to the compliance contract"
									},
									"id": 142,
									"mutability": "mutable",
									"name": "_tokensBound",
									"nameLocation": "1468:12:2",
									"nodeType": "VariableDeclaration",
									"scope": 345,
									"src": "1435:45:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
										"typeString": "mapping(address => bool)"
									},
									"typeName": {
										"id": 141,
										"keyType": {
											"id": 139,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1443:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1435:24:2",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
											"typeString": "mapping(address => bool)"
										},
										"valueType": {
											"id": 140,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "1454:4:2",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										375
									],
									"body": {
										"id": 156,
										"nodeType": "Block",
										"src": "1629:57:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 151,
																"name": "_tokenAgentsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "1647:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 153,
															"indexExpression": {
																"id": 152,
																"name": "_agentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 145,
																"src": "1664:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1647:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 154,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1646:33:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 150,
												"id": 155,
												"nodeType": "Return",
												"src": "1639:40:2"
											}
										]
									},
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1487:56:2",
										"text": "  @dev See {ICompliance-isTokenAgent}."
									},
									"functionSelector": "346531fa",
									"id": 157,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenAgent",
									"nameLocation": "1557:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 147,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1605:8:2"
									},
									"parameters": {
										"id": 146,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 145,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "1578:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1570:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 144,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1570:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1569:23:2"
									},
									"returnParameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 157,
												"src": "1623:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 148,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1623:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:6:2"
									},
									"scope": 345,
									"src": "1548:138:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										383
									],
									"body": {
										"id": 171,
										"nodeType": "Block",
										"src": "1827:46:2",
										"statements": [
											{
												"expression": {
													"components": [
														{
															"baseExpression": {
																"id": 166,
																"name": "_tokensBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "1845:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 168,
															"indexExpression": {
																"id": 167,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "1858:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "1845:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"id": 169,
													"isConstant": false,
													"isInlineArray": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "TupleExpression",
													"src": "1844:22:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 165,
												"id": 170,
												"nodeType": "Return",
												"src": "1837:29:2"
											}
										]
									},
									"documentation": {
										"id": 158,
										"nodeType": "StructuredDocumentation",
										"src": "1692:56:2",
										"text": "  @dev See {ICompliance-isTokenBound}."
									},
									"functionSelector": "993e8b95",
									"id": 172,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenBound",
									"nameLocation": "1762:12:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 162,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1803:8:2"
									},
									"parameters": {
										"id": 161,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 160,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "1783:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1775:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1775:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1774:16:2"
									},
									"returnParameters": {
										"id": 165,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 164,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 172,
												"src": "1821:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 163,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1821:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1820:6:2"
									},
									"scope": 345,
									"src": "1753:120:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										389
									],
									"body": {
										"id": 199,
										"nodeType": "Block",
										"src": "2015:187:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2033:32:2",
															"subExpression": {
																"baseExpression": {
																	"id": 182,
																	"name": "_tokenAgentsList",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 137,
																	"src": "2034:16:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 184,
																"indexExpression": {
																	"id": 183,
																	"name": "_agentAddress",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 175,
																	"src": "2051:13:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2034:31:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204167656e7420697320616c72656164792072656769737465726564",
															"id": 186,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2067:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c",
																"typeString": "literal_string \"This Agent is already registered\""
															},
															"value": "This Agent is already registered"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_94e04ceb3646f4f8dc1e8519090d5e6cbdbc2153be960a40dcab924db6e7024c",
																"typeString": "literal_string \"This Agent is already registered\""
															}
														],
														"id": 181,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2025:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2025:77:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "2025:77:2"
											},
											{
												"expression": {
													"id": 193,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 189,
															"name": "_tokenAgentsList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2112:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 191,
														"indexExpression": {
															"id": 190,
															"name": "_agentAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2129:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2112:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 192,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2146:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2112:38:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 194,
												"nodeType": "ExpressionStatement",
												"src": "2112:38:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 196,
															"name": "_agentAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 175,
															"src": "2181:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 195,
														"name": "TokenAgentAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 352,
														"src": "2165:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 197,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2165:30:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 198,
												"nodeType": "EmitStatement",
												"src": "2160:35:2"
											}
										]
									},
									"documentation": {
										"id": 173,
										"nodeType": "StructuredDocumentation",
										"src": "1879:57:2",
										"text": "  @dev See {ICompliance-addTokenAgent}."
									},
									"functionSelector": "ff3e6954",
									"id": 200,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 179,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2005:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2005:9:2"
										}
									],
									"name": "addTokenAgent",
									"nameLocation": "1950:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 177,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1996:8:2"
									},
									"parameters": {
										"id": 176,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 175,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "1972:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 200,
												"src": "1964:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 174,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1963:23:2"
									},
									"returnParameters": {
										"id": 180,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2015:0:2"
									},
									"scope": 345,
									"src": "1941:261:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										395
									],
									"body": {
										"id": 226,
										"nodeType": "Block",
										"src": "2346:189:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 210,
																"name": "_tokenAgentsList",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 137,
																"src": "2364:16:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 212,
															"indexExpression": {
																"id": 211,
																"name": "_agentAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 203,
																"src": "2381:13:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2364:31:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "54686973204167656e74206973206e6f74207265676973746572656420796574",
															"id": 213,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2397:34:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c",
																"typeString": "literal_string \"This Agent is not registered yet\""
															},
															"value": "This Agent is not registered yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_38bfff34683fb8fd7d13833d348fcfd97f4e4308582363f470fc6498e3ad489c",
																"typeString": "literal_string \"This Agent is not registered yet\""
															}
														],
														"id": 209,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2356:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 214,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2356:76:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 215,
												"nodeType": "ExpressionStatement",
												"src": "2356:76:2"
											},
											{
												"expression": {
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 216,
															"name": "_tokenAgentsList",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 137,
															"src": "2442:16:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 218,
														"indexExpression": {
															"id": 217,
															"name": "_agentAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2459:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2442:31:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2476:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2442:39:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 221,
												"nodeType": "ExpressionStatement",
												"src": "2442:39:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 223,
															"name": "_agentAddress",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 203,
															"src": "2514:13:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 222,
														"name": "TokenAgentRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 357,
														"src": "2496:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2496:32:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 225,
												"nodeType": "EmitStatement",
												"src": "2491:37:2"
											}
										]
									},
									"documentation": {
										"id": 201,
										"nodeType": "StructuredDocumentation",
										"src": "2208:56:2",
										"text": "  @dev See {ICompliance-isTokenAgent}."
									},
									"functionSelector": "cdde2932",
									"id": 227,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 207,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 206,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2336:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2336:9:2"
										}
									],
									"name": "removeTokenAgent",
									"nameLocation": "2278:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 205,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2327:8:2"
									},
									"parameters": {
										"id": 204,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 203,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "2303:13:2",
												"nodeType": "VariableDeclaration",
												"scope": 227,
												"src": "2295:21:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 202,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2295:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2294:23:2"
									},
									"returnParameters": {
										"id": 208,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2346:0:2"
									},
									"scope": 345,
									"src": "2269:266:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										401
									],
									"body": {
										"id": 254,
										"nodeType": "Block",
										"src": "2665:148:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 240,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2683:21:2",
															"subExpression": {
																"baseExpression": {
																	"id": 237,
																	"name": "_tokensBound",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 142,
																	"src": "2684:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 239,
																"indexExpression": {
																	"id": 238,
																	"name": "_token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 230,
																	"src": "2697:6:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "2684:20:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e20697320616c726561647920626f756e64",
															"id": 241,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2706:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c",
																"typeString": "literal_string \"This token is already bound\""
															},
															"value": "This token is already bound"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_8d624724abe04cec2c9dea2aa97d440b8d5ae1d5bee60672fd7f8561ed33045c",
																"typeString": "literal_string \"This token is already bound\""
															}
														],
														"id": 236,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2675:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 242,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2675:61:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 243,
												"nodeType": "ExpressionStatement",
												"src": "2675:61:2"
											},
											{
												"expression": {
													"id": 248,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 244,
															"name": "_tokensBound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "2746:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 246,
														"indexExpression": {
															"id": 245,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2759:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2746:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 247,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2769:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2746:27:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 249,
												"nodeType": "ExpressionStatement",
												"src": "2746:27:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 251,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 230,
															"src": "2799:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 250,
														"name": "TokenBound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 362,
														"src": "2788:10:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 252,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2788:18:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 253,
												"nodeType": "EmitStatement",
												"src": "2783:23:2"
											}
										]
									},
									"documentation": {
										"id": 228,
										"nodeType": "StructuredDocumentation",
										"src": "2541:56:2",
										"text": "  @dev See {ICompliance-isTokenAgent}."
									},
									"functionSelector": "3ff5aa02",
									"id": 255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 233,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2655:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2655:9:2"
										}
									],
									"name": "bindToken",
									"nameLocation": "2611:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 232,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2646:8:2"
									},
									"parameters": {
										"id": 231,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 230,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2629:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 255,
												"src": "2621:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 229,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2621:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2620:16:2"
									},
									"returnParameters": {
										"id": 235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2665:0:2"
									},
									"scope": 345,
									"src": "2602:211:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										407
									],
									"body": {
										"id": 281,
										"nodeType": "Block",
										"src": "2945:150:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"id": 265,
																"name": "_tokensBound",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 142,
																"src": "2963:12:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 267,
															"indexExpression": {
																"id": 266,
																"name": "_token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 258,
																"src": "2976:6:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "2963:20:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5468697320746f6b656e206973206e6f7420626f756e6420796574",
															"id": 268,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2985:29:2",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243",
																"typeString": "literal_string \"This token is not bound yet\""
															},
															"value": "This token is not bound yet"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3a32dea6d728f3e51c5acf0744a2444ea4633c5416095bb4680eff562369b243",
																"typeString": "literal_string \"This token is not bound yet\""
															}
														],
														"id": 264,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2955:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 269,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2955:60:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 270,
												"nodeType": "ExpressionStatement",
												"src": "2955:60:2"
											},
											{
												"expression": {
													"id": 275,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 271,
															"name": "_tokensBound",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 142,
															"src": "3025:12:2",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 273,
														"indexExpression": {
															"id": 272,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "3038:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3025:20:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 274,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3048:5:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3025:28:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 276,
												"nodeType": "ExpressionStatement",
												"src": "3025:28:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 278,
															"name": "_token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 258,
															"src": "3081:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 277,
														"name": "TokenUnbound",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 367,
														"src": "3068:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 279,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3068:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 280,
												"nodeType": "EmitStatement",
												"src": "3063:25:2"
											}
										]
									},
									"documentation": {
										"id": 256,
										"nodeType": "StructuredDocumentation",
										"src": "2819:56:2",
										"text": "  @dev See {ICompliance-isTokenAgent}."
									},
									"functionSelector": "40db3b50",
									"id": 282,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 262,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 261,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "2935:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2935:9:2"
										}
									],
									"name": "unbindToken",
									"nameLocation": "2889:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 260,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2926:8:2"
									},
									"parameters": {
										"id": 259,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 258,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2909:6:2",
												"nodeType": "VariableDeclaration",
												"scope": 282,
												"src": "2901:14:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 257,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2901:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2900:16:2"
									},
									"returnParameters": {
										"id": 263,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2945:0:2"
									},
									"scope": 345,
									"src": "2880:215:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										419
									],
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "3312:28:2",
										"statements": [
											{
												"expression": {
													"hexValue": "74727565",
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "bool",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "3329:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"value": "true"
												},
												"functionReturnParameters": 294,
												"id": 296,
												"nodeType": "Return",
												"src": "3322:11:2"
											}
										]
									},
									"documentation": {
										"id": 283,
										"nodeType": "StructuredDocumentation",
										"src": "3101:55:2",
										"text": "  @dev See {ICompliance-canTransfer}."
									},
									"functionSelector": "e46638e6",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "3170:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 291,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3288:8:2"
									},
									"parameters": {
										"id": 290,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 285,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3191:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 284,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3191:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3220:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 286,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 289,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3247:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 288,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3247:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3181:92:2"
									},
									"returnParameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "3306:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 292,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3306:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3305:6:2"
									},
									"scope": 345,
									"src": "3161:179:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										429
									],
									"body": {
										"id": 309,
										"nodeType": "Block",
										"src": "3537:2:2",
										"statements": []
									},
									"documentation": {
										"id": 299,
										"nodeType": "StructuredDocumentation",
										"src": "3346:55:2",
										"text": "  @dev See {ICompliance-transferred}."
									},
									"functionSelector": "8baf29b4",
									"id": 310,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "transferred",
									"nameLocation": "3415:11:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 307,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3528:8:2"
									},
									"parameters": {
										"id": 306,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3436:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3436:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 303,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3465:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 302,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3465:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 305,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 310,
												"src": "3492:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 304,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3492:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3426:92:2"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3537:0:2"
									},
									"scope": 345,
									"src": "3406:133:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										437
									],
									"body": {
										"id": 319,
										"nodeType": "Block",
										"src": "3677:2:2",
										"statements": []
									},
									"documentation": {
										"id": 311,
										"nodeType": "StructuredDocumentation",
										"src": "3545:51:2",
										"text": "  @dev See {ICompliance-created}."
									},
									"functionSelector": "5f8dead3",
									"id": 320,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "created",
									"nameLocation": "3610:7:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 317,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3668:8:2"
									},
									"parameters": {
										"id": 316,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 313,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3618:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 312,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3618:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 315,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 320,
												"src": "3637:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 314,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3637:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3617:41:2"
									},
									"returnParameters": {
										"id": 318,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3677:0:2"
									},
									"scope": 345,
									"src": "3601:78:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										445
									],
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "3823:2:2",
										"statements": []
									},
									"documentation": {
										"id": 321,
										"nodeType": "StructuredDocumentation",
										"src": "3685:53:2",
										"text": "  @dev See {ICompliance-destroyed}."
									},
									"functionSelector": "8d2ea772",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "destroyed",
									"nameLocation": "3752:9:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 327,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3814:8:2"
									},
									"parameters": {
										"id": 326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3762:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 322,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3762:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 325,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "3783:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3783:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3761:43:2"
									},
									"returnParameters": {
										"id": 328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3823:0:2"
									},
									"scope": 345,
									"src": "3743:82:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										451
									],
									"body": {
										"id": 343,
										"nodeType": "Block",
										"src": "4010:44:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 340,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 333,
															"src": "4038:8:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 339,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 83,
														"src": "4020:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4020:27:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 342,
												"nodeType": "ExpressionStatement",
												"src": "4020:27:2"
											}
										]
									},
									"documentation": {
										"id": 331,
										"nodeType": "StructuredDocumentation",
										"src": "3831:81:2",
										"text": "  @dev See {ICompliance-transferOwnershipOnComplianceContract}."
									},
									"functionSelector": "7bcf0487",
									"id": 344,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 337,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 336,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 46,
												"src": "4000:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4000:9:2"
										}
									],
									"name": "transferOwnershipOnComplianceContract",
									"nameLocation": "3926:37:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 335,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3991:8:2"
									},
									"parameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "3972:8:2",
												"nodeType": "VariableDeclaration",
												"scope": 344,
												"src": "3964:16:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3964:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3963:18:2"
									},
									"returnParameters": {
										"id": 338,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4010:0:2"
									},
									"scope": 345,
									"src": "3917:137:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 346,
							"src": "1202:2854:2",
							"usedErrors": []
						}
					],
					"src": "1094:2963:2"
				},
				"id": 2
			},
			"contracts/compliance/ICompliance.sol": {
				"ast": {
					"absolutePath": "contracts/compliance/ICompliance.sol",
					"exportedSymbols": {
						"ICompliance": [
							452
						]
					},
					"id": 453,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 347,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1094:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 452,
							"linearizedBaseContracts": [
								452
							],
							"name": "ICompliance",
							"nameLocation": "1129:11:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 348,
										"nodeType": "StructuredDocumentation",
										"src": "1147:262:3",
										"text": "  this event is emitted when the Agent has been added on the allowedList of this Compliance.\n  the event is emitted by the Compliance constructor and by the addTokenAgent function\n  `_agentAddress` is the address of the Agent to add"
									},
									"id": 352,
									"name": "TokenAgentAdded",
									"nameLocation": "1420:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 351,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 350,
												"indexed": false,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "1444:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 352,
												"src": "1436:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 349,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1435:23:3"
									},
									"src": "1414:45:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 353,
										"nodeType": "StructuredDocumentation",
										"src": "1465:271:3",
										"text": "  this event is emitted when the Agent has been removed from the agent list of this Compliance.\n  the event is emitted by the Compliance constructor and by the removeTokenAgent function\n  `_agentAddress` is the address of the Agent to remove"
									},
									"id": 357,
									"name": "TokenAgentRemoved",
									"nameLocation": "1747:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 356,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 355,
												"indexed": false,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "1773:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 357,
												"src": "1765:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 354,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1765:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1764:23:3"
									},
									"src": "1741:47:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 358,
										"nodeType": "StructuredDocumentation",
										"src": "1794:204:3",
										"text": "  this event is emitted when a token has been bound to the compliance contract\n  the event is emitted by the bindToken function\n  `_token` is the address of the token to bind"
									},
									"id": 362,
									"name": "TokenBound",
									"nameLocation": "2009:10:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 360,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2028:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 362,
												"src": "2020:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2020:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2019:16:3"
									},
									"src": "2003:33:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 363,
										"nodeType": "StructuredDocumentation",
										"src": "2042:212:3",
										"text": "  this event is emitted when a token has been unbound from the compliance contract\n  the event is emitted by the unbindToken function\n  `_token` is the address of the token to unbind"
									},
									"id": 367,
									"name": "TokenUnbound",
									"nameLocation": "2265:12:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 366,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 365,
												"indexed": false,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2286:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 367,
												"src": "2278:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 364,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2278:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2277:16:3"
									},
									"src": "2259:35:3"
								},
								{
									"documentation": {
										"id": 368,
										"nodeType": "StructuredDocumentation",
										"src": "2300:134:3",
										"text": "  @dev Returns true if the Address is in the list of token agents\n  @param _agentAddress address of this agent"
									},
									"functionSelector": "346531fa",
									"id": 375,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenAgent",
									"nameLocation": "2448:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 371,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 370,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "2469:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2461:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 369,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:23:3"
									},
									"returnParameters": {
										"id": 374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 373,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 375,
												"src": "2507:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 372,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2507:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2506:6:3"
									},
									"scope": 452,
									"src": "2439:74:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 376,
										"nodeType": "StructuredDocumentation",
										"src": "2519:167:3",
										"text": "  @dev Returns true if the address given corresponds to a token that is bound with the Compliance contract\n  @param _token address of the token"
									},
									"functionSelector": "993e8b95",
									"id": 383,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isTokenBound",
									"nameLocation": "2700:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 378,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "2721:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2713:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2713:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2712:16:3"
									},
									"returnParameters": {
										"id": 382,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 381,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 383,
												"src": "2752:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 380,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2752:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2751:6:3"
									},
									"scope": 452,
									"src": "2691:67:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 384,
										"nodeType": "StructuredDocumentation",
										"src": "2764:166:3",
										"text": "  @dev adds an agent to the list of token agents\n  @param _agentAddress address of the agent to be added\n  Emits a TokenAgentAdded event"
									},
									"functionSelector": "ff3e6954",
									"id": 389,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addTokenAgent",
									"nameLocation": "2944:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 387,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 386,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "2966:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 389,
												"src": "2958:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 385,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2958:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2957:23:3"
									},
									"returnParameters": {
										"id": 388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2989:0:3"
									},
									"scope": 452,
									"src": "2935:55:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 390,
										"nodeType": "StructuredDocumentation",
										"src": "2996:193:3",
										"text": "  @dev remove Agent from the list of token agents\n  @param _agentAddress address of the agent to be removed (must be added first)\n  Emits a TokenAgentRemoved event"
									},
									"functionSelector": "cdde2932",
									"id": 395,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeTokenAgent",
									"nameLocation": "3203:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 392,
												"mutability": "mutable",
												"name": "_agentAddress",
												"nameLocation": "3228:13:3",
												"nodeType": "VariableDeclaration",
												"scope": 395,
												"src": "3220:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3220:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3219:23:3"
									},
									"returnParameters": {
										"id": 394,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3251:0:3"
									},
									"scope": 452,
									"src": "3194:58:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 396,
										"nodeType": "StructuredDocumentation",
										"src": "3258:149:3",
										"text": "  @dev binds a token to the compliance contract\n  @param _token address of the token to bind\n  Emits a TokenBound event"
									},
									"functionSelector": "3ff5aa02",
									"id": 401,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "bindToken",
									"nameLocation": "3421:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 399,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 398,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3439:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 401,
												"src": "3431:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 397,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3431:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3430:16:3"
									},
									"returnParameters": {
										"id": 400,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3455:0:3"
									},
									"scope": 452,
									"src": "3412:44:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 402,
										"nodeType": "StructuredDocumentation",
										"src": "3462:157:3",
										"text": "  @dev unbinds a token from the compliance contract\n  @param _token address of the token to unbind\n  Emits a TokenUnbound event"
									},
									"functionSelector": "40db3b50",
									"id": 407,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "unbindToken",
									"nameLocation": "3633:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 405,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 404,
												"mutability": "mutable",
												"name": "_token",
												"nameLocation": "3653:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 407,
												"src": "3645:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 403,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3644:16:3"
									},
									"returnParameters": {
										"id": 406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3669:0:3"
									},
									"scope": 452,
									"src": "3624:46:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 408,
										"nodeType": "StructuredDocumentation",
										"src": "3676:378:3",
										"text": "  @dev checks that the transfer is compliant.\n  default compliance always returns true\n  READ ONLY FUNCTION, this function cannot be used to increment\n  counters, emit events, ...\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
									},
									"functionSelector": "e46638e6",
									"id": 419,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "canTransfer",
									"nameLocation": "4068:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 415,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 410,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4097:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4089:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 409,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4089:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 412,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4120:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4112:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 411,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4112:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 414,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4141:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4133:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 413,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4133:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4079:75:3"
									},
									"returnParameters": {
										"id": 418,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 417,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 419,
												"src": "4178:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 416,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4178:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4177:6:3"
									},
									"scope": 452,
									"src": "4059:125:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 420,
										"nodeType": "StructuredDocumentation",
										"src": "4190:575:3",
										"text": "  @dev function called whenever tokens are transferred\n  from one wallet to another\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _from The address of the sender\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
									},
									"functionSelector": "8baf29b4",
									"id": 429,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferred",
									"nameLocation": "4779:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 427,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 422,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "4808:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4800:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 421,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4800:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 424,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "4831:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4823:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 423,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4823:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 426,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4852:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 429,
												"src": "4844:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 425,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4844:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4790:75:3"
									},
									"returnParameters": {
										"id": 428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4874:0:3"
									},
									"scope": 452,
									"src": "4770:105:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 430,
										"nodeType": "StructuredDocumentation",
										"src": "4881:509:3",
										"text": "  @dev function called whenever tokens are created\n  on a wallet\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _to The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
									},
									"functionSelector": "5f8dead3",
									"id": 437,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "created",
									"nameLocation": "5404:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 435,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 432,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "5420:3:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "5412:11:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 431,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5412:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 434,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5433:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 437,
												"src": "5425:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 433,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5425:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5411:30:3"
									},
									"returnParameters": {
										"id": 436,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5450:0:3"
									},
									"scope": 452,
									"src": "5395:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 438,
										"nodeType": "StructuredDocumentation",
										"src": "5457:493:3",
										"text": "  @dev function called whenever tokens are destroyed\n  this function can update state variables in the compliance contract\n  these state variables being used by `canTransfer` to decide if a transfer\n  is compliant or not depending on the values stored in these state variables and on\n  the parameters of the compliance smart contract\n  @param _from The address of the receiver\n  @param _amount The amount of tokens involved in the transfer"
									},
									"functionSelector": "8d2ea772",
									"id": 445,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "destroyed",
									"nameLocation": "5964:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 443,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 440,
												"mutability": "mutable",
												"name": "_from",
												"nameLocation": "5982:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "5974:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 439,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5974:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 442,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "5997:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 445,
												"src": "5989:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 441,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5989:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5973:32:3"
									},
									"returnParameters": {
										"id": 444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6014:0:3"
									},
									"scope": 452,
									"src": "5955:60:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 446,
										"nodeType": "StructuredDocumentation",
										"src": "6021:397:3",
										"text": "  @dev function used to transfer the ownership of the compliance contract\n  to a new owner, giving him access to the `OnlyOwner` functions implemented on the contract\n  @param newOwner The address of the new owner of the compliance contract\n  This function can only be called by the owner of the compliance contract\n  emits an `OwnershipTransferred` event"
									},
									"functionSelector": "7bcf0487",
									"id": 451,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnershipOnComplianceContract",
									"nameLocation": "6432:37:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 449,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 448,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "6478:8:3",
												"nodeType": "VariableDeclaration",
												"scope": 451,
												"src": "6470:16:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 447,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6470:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6469:18:3"
									},
									"returnParameters": {
										"id": 450,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6496:0:3"
									},
									"scope": 452,
									"src": "6423:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 453,
							"src": "1119:5380:3",
							"usedErrors": []
						}
					],
					"src": "1094:5406:3"
				},
				"id": 3
			}
		}
	}
}