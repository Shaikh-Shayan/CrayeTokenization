{
	"id": "9514f2fec9b3c51c89a79c434099266a",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\n *\n *     Copyright (C) 2021, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity ^0.8.0;\n\nimport '@openzeppelin/contracts/access/Ownable.sol';\n\nimport '../registry/IClaimTopicsRegistry.sol';\n\ncontract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable {\n    /// @dev All required Claim Topics\n    uint256[] private claimTopics;\n\n    /**\n     *  @dev See {IClaimTopicsRegistry-addClaimTopic}.\n     */\n    function addClaimTopic(uint256 _claimTopic) external override onlyOwner {\n        uint256 length = claimTopics.length;\n        for (uint256 i = 0; i < length; i++) {\n            require(claimTopics[i] != _claimTopic, 'claimTopic already exists');\n        }\n        claimTopics.push(_claimTopic);\n        emit ClaimTopicAdded(_claimTopic);\n    }\n\n    /**\n     *  @dev See {IClaimTopicsRegistry-removeClaimTopic}.\n     */\n    function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {\n        uint256 length = claimTopics.length;\n        for (uint256 i = 0; i < length; i++) {\n            if (claimTopics[i] == _claimTopic) {\n                claimTopics[i] = claimTopics[length - 1];\n                claimTopics.pop();\n                emit ClaimTopicRemoved(_claimTopic);\n                break;\n            }\n        }\n    }\n\n    /**\n     *  @dev See {IClaimTopicsRegistry-getClaimTopics}.\n     */\n    function getClaimTopics() external view override returns (uint256[] memory) {\n        return claimTopics;\n    }\n\n    /**\n     *  @dev See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.\n     */\n    function transferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external override onlyOwner {\n        transferOwnership(_newOwner);\n    }\n}\n"
			},
			"contracts/registry/IClaimTopicsRegistry.sol": {
				"content": "// SPDX-License-Identifier: GPL-3.0\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\n *\n *     Copyright (C) 2021, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity ^0.8.0;\n\ninterface IClaimTopicsRegistry {\n    /**\n     *  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n     *  the event is emitted by the 'addClaimTopic' function\n     *  `claimTopic` is the required claim added to the Claim Topics Registry\n     */\n    event ClaimTopicAdded(uint256 indexed claimTopic);\n\n    /**\n     *  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n     *  the event is emitted by the 'removeClaimTopic' function\n     *  `claimTopic` is the required claim removed from the Claim Topics Registry\n     */\n    event ClaimTopicRemoved(uint256 indexed claimTopic);\n\n    /**\n     * @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n     * Only owner can call.\n     * emits `ClaimTopicAdded` event\n     * @param _claimTopic The claim topic index\n     */\n    function addClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n     *  Only owner can call.\n     *  emits `ClaimTopicRemoved` event\n     *  @param _claimTopic The claim topic index\n     */\n    function removeClaimTopic(uint256 _claimTopic) external;\n\n    /**\n     *  @dev Get the trusted claim topics for the security token\n     *  @return Array of trusted claim topics\n     */\n    function getClaimTopics() external view returns (uint256[] memory);\n\n    /**\n     *  @dev Transfers the Ownership of ClaimTopics to a new Owner.\n     *  Only owner can call.\n     *  @param _newOwner The new owner of this contract.\n     */\n    function transferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external;\n}\n"
			},
			"@openzeppelin/contracts/access/Ownable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby removing any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"Ownable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
						"kind": "dev",
						"methods": {
							"constructor": {
								"details": "Initializes the contract setting the deployer as the initial owner."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"owner()": "8da5cb5b",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "@openzeppelin/contracts/access/Ownable.sol:Ownable",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"Context": {
					"abi": [],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"ClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "previousOwner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "OwnershipTransferred",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "owner",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "renounceOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnership",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnershipOnClaimTopicsRegistryContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "See {IClaimTopicsRegistry-addClaimTopic}."
							},
							"getClaimTopics()": {
								"details": "See {IClaimTopicsRegistry-getClaimTopics}."
							},
							"owner()": {
								"details": "Returns the address of the current owner."
							},
							"removeClaimTopic(uint256)": {
								"details": "See {IClaimTopicsRegistry-removeClaimTopic}."
							},
							"renounceOwnership()": {
								"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
							},
							"transferOwnership(address)": {
								"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
							},
							"transferOwnershipOnClaimTopicsRegistryContract(address)": {
								"details": "See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}."
							}
						},
						"stateVariables": {
							"claimTopics": {
								"details": "All required Claim Topics"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"contracts/registry/ClaimTopicsRegistry.sol\":1220:2723  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  tag_4\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  tag_5\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:965  _msgSender */\n  shl(0x20, tag_6)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":955:967  _msgSender() */\n  0x20\n  shr\n  jump\t// in\ntag_5:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:954  _transferOwnership */\n  shl(0x20, tag_7)\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":936:968  _transferOwnership(_msgSender()) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"contracts/registry/ClaimTopicsRegistry.sol\":1220:2723  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable {... */\n  jump(tag_8)\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\ntag_6:\n    /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n  0x00\n    /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n  caller\n    /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n  swap1\n  jump\t// out\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\ntag_7:\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n  0x00\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n  dup1\n  0x00\n  swap1\n  sload\n  swap1\n  0x0100\n  exp\n  swap1\n  div\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n  swap1\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n  0x00\n  dup1\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xffffffffffffffffffffffffffffffffffffffff\n  mul\n  not\n  and\n  swap1\n  dup4\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n  dup2\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n  0xffffffffffffffffffffffffffffffffffffffff\n  and\n  0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n  mload(0x40)\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log3\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n  pop\n    /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n  pop\n  jump\t// out\n    /* \"contracts/registry/ClaimTopicsRegistry.sol\":1220:2723  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable {... */\ntag_8:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1220:2723  contract ClaimTopicsRegistry is IClaimTopicsRegistry, Ownable {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xc7b22551\n      gt\n      tag_10\n      jumpi\n      dup1\n      0xc7b22551\n      eq\n      tag_6\n      jumpi\n      dup1\n      0xd5144472\n      eq\n      tag_7\n      jumpi\n      dup1\n      0xdf09d604\n      eq\n      tag_8\n      jumpi\n      dup1\n      0xf2fde38b\n      eq\n      tag_9\n      jumpi\n      jump(tag_2)\n    tag_10:\n      dup1\n      0x08297846\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x715018a6\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x8da5cb5b\n      eq\n      tag_5\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1858:2274  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_3:\n      tag_11\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      tag_14\n      jump\t// in\n    tag_11:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_4:\n      tag_15\n      tag_16\n      jump\t// in\n    tag_15:\n      stop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_5:\n      tag_17\n      tag_18\n      jump\t// in\n    tag_17:\n      mload(0x40)\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1434:1778  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_6:\n      tag_21\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_22\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_22:\n      tag_23\n      jump\t// in\n    tag_21:\n      stop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2573:2721  function transferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external override onlyOwner {... */\n    tag_7:\n      tag_24\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_25\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_25:\n      tag_27\n      jump\t// in\n    tag_24:\n      stop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2352:2463  function getClaimTopics() external view override returns (uint256[] memory) {... */\n    tag_8:\n      tag_28\n      tag_29\n      jump\t// in\n    tag_28:\n      mload(0x40)\n      tag_30\n      swap2\n      swap1\n      tag_31\n      jump\t// in\n    tag_30:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_9:\n      tag_32\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_33\n      swap2\n      swap1\n      tag_26\n      jump\t// in\n    tag_33:\n      tag_34\n      jump\t// in\n    tag_32:\n      stop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1858:2274  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_14:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_36\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_36:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1943:1957  uint256 length */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1960:1971  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1960:1978  claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1943:1978  uint256 length = claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1993:2002  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1988:2268  for (uint256 i = 0; i < length; i++) {... */\n    tag_39:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2012:2018  length */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2008:2009  i */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2008:2018  i < length */\n      lt\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1988:2268  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_40\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2061:2072  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2043:2054  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2055:2056  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2043:2057  claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_42\n      jumpi\n      tag_43\n      tag_44\n      jump\t// in\n    tag_43:\n    tag_42:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2043:2072  claimTopics[i] == _claimTopic */\n      eq\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2039:2258  if (claimTopics[i] == _claimTopic) {... */\n      iszero\n      tag_46\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2109:2120  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2130:2131  1 */\n      dup1\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2121:2127  length */\n      dup4\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2121:2131  length - 1 */\n      tag_47\n      swap2\n      swap1\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2109:2132  claimTopics[length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_49\n      jumpi\n      tag_50\n      tag_44\n      jump\t// in\n    tag_50:\n    tag_49:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2092:2103  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2104:2105  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2092:2106  claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_52\n      jumpi\n      tag_53\n      tag_44\n      jump\t// in\n    tag_53:\n    tag_52:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2092:2132  claimTopics[i] = claimTopics[length - 1] */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2150:2161  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2150:2167  claimTopics.pop() */\n      dup1\n      sload\n      dup1\n      tag_55\n      jumpi\n      tag_56\n      tag_57\n      jump\t// in\n    tag_56:\n    tag_55:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2208:2219  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2190:2220  ClaimTopicRemoved(_claimTopic) */\n      0x0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec5\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2238:2243  break */\n      jump(tag_40)\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2039:2258  if (claimTopics[i] == _claimTopic) {... */\n    tag_46:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2020:2023  i++ */\n      dup1\n      dup1\n      tag_59\n      swap1\n      tag_60\n      jump\t// in\n    tag_59:\n      swap2\n      pop\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1988:2268  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_39)\n    tag_40:\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1933:2274  {... */\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1858:2274  function removeClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n    tag_16:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_62\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_62:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      tag_64\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1922:1923  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1913  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1895:1925  _transferOwnership(address(0)) */\n      jump\t// in\n    tag_64:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1831:1932  function renounceOwnership() public virtual onlyOwner {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n    tag_18:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1247:1254  address */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1273:1279  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1266:1279  return _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1201:1286  function owner() public view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1434:1778  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n    tag_23:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_68\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_68:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1516:1530  uint256 length */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1533:1544  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1533:1551  claimTopics.length */\n      dup1\n      sload\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1516:1551  uint256 length = claimTopics.length */\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1566:1575  uint256 i */\n      0x00\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1561:1690  for (uint256 i = 0; i < length; i++) {... */\n    tag_70:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1585:1591  length */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1581:1582  i */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1581:1591  i < length */\n      lt\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1561:1690  for (uint256 i = 0; i < length; i++) {... */\n      iszero\n      tag_71\n      jumpi\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1638:1649  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1620:1631  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1632:1633  i */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1620:1634  claimTopics[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_73\n      jumpi\n      tag_74\n      tag_44\n      jump\t// in\n    tag_74:\n    tag_73:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1620:1649  claimTopics[i] != _claimTopic */\n      eq\n      iszero\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1612:1679  require(claimTopics[i] != _claimTopic, 'claimTopic already exists') */\n      tag_76\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_77\n      swap1\n      tag_78\n      jump\t// in\n    tag_77:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_76:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1593:1596  i++ */\n      dup1\n      dup1\n      tag_79\n      swap1\n      tag_60\n      jump\t// in\n    tag_79:\n      swap2\n      pop\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1561:1690  for (uint256 i = 0; i < length; i++) {... */\n      jump(tag_70)\n    tag_71:\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1699:1710  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1716:1727  _claimTopic */\n      dup3\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1699:1728  claimTopics.push(_claimTopic) */\n      swap1\n      dup1\n      0x01\n      dup2\n      sload\n      add\n      dup1\n      dup3\n      sstore\n      dup1\n      swap2\n      pop\n      pop\n      0x01\n      swap1\n      sub\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      swap2\n      swap1\n      swap2\n      swap1\n      swap2\n      pop\n      sstore\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1759:1770  _claimTopic */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1743:1771  ClaimTopicAdded(_claimTopic) */\n      0x01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d6\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1506:1778  {... */\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":1434:1778  function addClaimTopic(uint256 _claimTopic) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2573:2721  function transferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external override onlyOwner {... */\n    tag_27:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_82\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_82:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2686:2714  transferOwnership(_newOwner) */\n      tag_84\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2704:2713  _newOwner */\n      dup2\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2686:2703  transferOwnership */\n      tag_34\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2686:2714  transferOwnership(_newOwner) */\n      jump\t// in\n    tag_84:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2573:2721  function transferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external override onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2352:2463  function getClaimTopics() external view override returns (uint256[] memory) {... */\n    tag_29:\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2410:2426  uint256[] memory */\n      0x60\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2445:2456  claimTopics */\n      0x01\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2438:2456  return claimTopics */\n      dup1\n      sload\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_87:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_87\n      jumpi\n    tag_86:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      pop\n        /* \"contracts/registry/ClaimTopicsRegistry.sol\":2352:2463  function getClaimTopics() external view override returns (uint256[] memory) {... */\n      swap1\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n    tag_34:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      tag_89\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1105  _checkOwner */\n      tag_37\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1094:1107  _checkOwner() */\n      jump\t// in\n    tag_89:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2189:2190  0 */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2177  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2169:2191  newOwner != address(0) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2161:2234  require(newOwner != address(0), \"Ownable: new owner is the zero address\") */\n      tag_91\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_92\n      swap1\n      tag_93\n      jump\t// in\n    tag_92:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_91:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      tag_94\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2263:2271  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2262  _transferOwnership */\n      tag_65\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2244:2272  _transferOwnership(newOwner) */\n      jump\t// in\n    tag_94:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2081:2279  function transferOwnership(address newOwner) public virtual onlyOwner {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n    tag_37:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      tag_96\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1443  _msgSender */\n      tag_97\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1433:1445  _msgSender() */\n      jump\t// in\n    tag_96:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      tag_98\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1427  owner */\n      tag_18\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1429  owner() */\n      jump\t// in\n    tag_98:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1422:1445  owner() == _msgSender() */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      eq\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1414:1482  require(owner() == _msgSender(), \"Ownable: caller is not the owner\") */\n      tag_99\n      jumpi\n      mload(0x40)\n      0x08c379a000000000000000000000000000000000000000000000000000000000\n      dup2\n      mstore\n      0x04\n      add\n      tag_100\n      swap1\n      tag_101\n      jump\t// in\n    tag_100:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_99:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":1359:1489  function _checkOwner() internal view virtual {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n    tag_65:\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2522  address oldOwner */\n      0x00\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2525:2531  _owner */\n      dup1\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2506:2531  address oldOwner = _owner */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2550:2558  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2547  _owner */\n      0x00\n      dup1\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2541:2558  _owner = newOwner */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      0xffffffffffffffffffffffffffffffffffffffff\n      mul\n      not\n      and\n      swap1\n      dup4\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2604:2612  newOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2594:2602  oldOwner */\n      dup2\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2573:2613  OwnershipTransferred(oldOwner, newOwner) */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2496:2620  {... */\n      pop\n        /* \"@openzeppelin/contracts/access/Ownable.sol\":2433:2620  function _transferOwnership(address newOwner) internal virtual {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n    tag_97:\n        /* \"@openzeppelin/contracts/utils/Context.sol\":693:700  address */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Context.sol\":719:729  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts/utils/Context.sol\":712:729  return msg.sender */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts/utils/Context.sol\":640:736  function _msgSender() internal view virtual returns (address) {... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_105:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_107\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_108\n      jump\t// in\n    tag_107:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:291   */\n    tag_109:\n        /* \"#utility.yul\":198:203   */\n      0x00\n        /* \"#utility.yul\":236:242   */\n      dup2\n        /* \"#utility.yul\":223:243   */\n      calldataload\n        /* \"#utility.yul\":214:243   */\n      swap1\n      pop\n        /* \"#utility.yul\":252:285   */\n      tag_111\n        /* \"#utility.yul\":279:284   */\n      dup2\n        /* \"#utility.yul\":252:285   */\n      tag_112\n      jump\t// in\n    tag_111:\n        /* \"#utility.yul\":152:291   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":297:626   */\n    tag_26:\n        /* \"#utility.yul\":356:362   */\n      0x00\n        /* \"#utility.yul\":405:407   */\n      0x20\n        /* \"#utility.yul\":393:402   */\n      dup3\n        /* \"#utility.yul\":384:391   */\n      dup5\n        /* \"#utility.yul\":380:403   */\n      sub\n        /* \"#utility.yul\":376:408   */\n      slt\n        /* \"#utility.yul\":373:492   */\n      iszero\n      tag_114\n      jumpi\n        /* \"#utility.yul\":411:490   */\n      tag_115\n      tag_116\n      jump\t// in\n    tag_115:\n        /* \"#utility.yul\":373:492   */\n    tag_114:\n        /* \"#utility.yul\":531:532   */\n      0x00\n        /* \"#utility.yul\":556:609   */\n      tag_117\n        /* \"#utility.yul\":601:608   */\n      dup5\n        /* \"#utility.yul\":592:598   */\n      dup3\n        /* \"#utility.yul\":581:590   */\n      dup6\n        /* \"#utility.yul\":577:599   */\n      add\n        /* \"#utility.yul\":556:609   */\n      tag_105\n      jump\t// in\n    tag_117:\n        /* \"#utility.yul\":546:609   */\n      swap2\n      pop\n        /* \"#utility.yul\":502:619   */\n      pop\n        /* \"#utility.yul\":297:626   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":632:961   */\n    tag_13:\n        /* \"#utility.yul\":691:697   */\n      0x00\n        /* \"#utility.yul\":740:742   */\n      0x20\n        /* \"#utility.yul\":728:737   */\n      dup3\n        /* \"#utility.yul\":719:726   */\n      dup5\n        /* \"#utility.yul\":715:738   */\n      sub\n        /* \"#utility.yul\":711:743   */\n      slt\n        /* \"#utility.yul\":708:827   */\n      iszero\n      tag_119\n      jumpi\n        /* \"#utility.yul\":746:825   */\n      tag_120\n      tag_116\n      jump\t// in\n    tag_120:\n        /* \"#utility.yul\":708:827   */\n    tag_119:\n        /* \"#utility.yul\":866:867   */\n      0x00\n        /* \"#utility.yul\":891:944   */\n      tag_121\n        /* \"#utility.yul\":936:943   */\n      dup5\n        /* \"#utility.yul\":927:933   */\n      dup3\n        /* \"#utility.yul\":916:925   */\n      dup6\n        /* \"#utility.yul\":912:934   */\n      add\n        /* \"#utility.yul\":891:944   */\n      tag_109\n      jump\t// in\n    tag_121:\n        /* \"#utility.yul\":881:944   */\n      swap2\n      pop\n        /* \"#utility.yul\":837:954   */\n      pop\n        /* \"#utility.yul\":632:961   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":967:1146   */\n    tag_122:\n        /* \"#utility.yul\":1036:1046   */\n      0x00\n        /* \"#utility.yul\":1057:1103   */\n      tag_124\n        /* \"#utility.yul\":1099:1102   */\n      dup4\n        /* \"#utility.yul\":1091:1097   */\n      dup4\n        /* \"#utility.yul\":1057:1103   */\n      tag_125\n      jump\t// in\n    tag_124:\n        /* \"#utility.yul\":1135:1139   */\n      0x20\n        /* \"#utility.yul\":1130:1133   */\n      dup4\n        /* \"#utility.yul\":1126:1140   */\n      add\n        /* \"#utility.yul\":1112:1140   */\n      swap1\n      pop\n        /* \"#utility.yul\":967:1146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1152:1270   */\n    tag_126:\n        /* \"#utility.yul\":1239:1263   */\n      tag_128\n        /* \"#utility.yul\":1257:1262   */\n      dup2\n        /* \"#utility.yul\":1239:1263   */\n      tag_129\n      jump\t// in\n    tag_128:\n        /* \"#utility.yul\":1234:1237   */\n      dup3\n        /* \"#utility.yul\":1227:1264   */\n      mstore\n        /* \"#utility.yul\":1152:1270   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1306:2038   */\n    tag_130:\n        /* \"#utility.yul\":1425:1428   */\n      0x00\n        /* \"#utility.yul\":1454:1508   */\n      tag_132\n        /* \"#utility.yul\":1502:1507   */\n      dup3\n        /* \"#utility.yul\":1454:1508   */\n      tag_133\n      jump\t// in\n    tag_132:\n        /* \"#utility.yul\":1524:1610   */\n      tag_134\n        /* \"#utility.yul\":1603:1609   */\n      dup2\n        /* \"#utility.yul\":1598:1601   */\n      dup6\n        /* \"#utility.yul\":1524:1610   */\n      tag_135\n      jump\t// in\n    tag_134:\n        /* \"#utility.yul\":1517:1610   */\n      swap4\n      pop\n        /* \"#utility.yul\":1634:1690   */\n      tag_136\n        /* \"#utility.yul\":1684:1689   */\n      dup4\n        /* \"#utility.yul\":1634:1690   */\n      tag_137\n      jump\t// in\n    tag_136:\n        /* \"#utility.yul\":1713:1720   */\n      dup1\n        /* \"#utility.yul\":1744:1745   */\n      0x00\n        /* \"#utility.yul\":1729:2013   */\n    tag_138:\n        /* \"#utility.yul\":1754:1760   */\n      dup4\n        /* \"#utility.yul\":1751:1752   */\n      dup2\n        /* \"#utility.yul\":1748:1761   */\n      lt\n        /* \"#utility.yul\":1729:2013   */\n      iszero\n      tag_140\n      jumpi\n        /* \"#utility.yul\":1830:1836   */\n      dup2\n        /* \"#utility.yul\":1824:1837   */\n      mload\n        /* \"#utility.yul\":1857:1920   */\n      tag_141\n        /* \"#utility.yul\":1916:1919   */\n      dup9\n        /* \"#utility.yul\":1901:1914   */\n      dup3\n        /* \"#utility.yul\":1857:1920   */\n      tag_122\n      jump\t// in\n    tag_141:\n        /* \"#utility.yul\":1850:1920   */\n      swap8\n      pop\n        /* \"#utility.yul\":1943:2003   */\n      tag_142\n        /* \"#utility.yul\":1996:2002   */\n      dup4\n        /* \"#utility.yul\":1943:2003   */\n      tag_143\n      jump\t// in\n    tag_142:\n        /* \"#utility.yul\":1933:2003   */\n      swap3\n      pop\n        /* \"#utility.yul\":1789:2013   */\n      pop\n        /* \"#utility.yul\":1776:1777   */\n      0x01\n        /* \"#utility.yul\":1773:1774   */\n      dup2\n        /* \"#utility.yul\":1769:1778   */\n      add\n        /* \"#utility.yul\":1764:1778   */\n      swap1\n      pop\n        /* \"#utility.yul\":1729:2013   */\n      jump(tag_138)\n    tag_140:\n        /* \"#utility.yul\":1733:1747   */\n      pop\n        /* \"#utility.yul\":2029:2032   */\n      dup6\n        /* \"#utility.yul\":2022:2032   */\n      swap4\n      pop\n        /* \"#utility.yul\":1430:2038   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":1306:2038   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2044:2410   */\n    tag_144:\n        /* \"#utility.yul\":2186:2189   */\n      0x00\n        /* \"#utility.yul\":2207:2274   */\n      tag_146\n        /* \"#utility.yul\":2271:2273   */\n      0x26\n        /* \"#utility.yul\":2266:2269   */\n      dup4\n        /* \"#utility.yul\":2207:2274   */\n      tag_147\n      jump\t// in\n    tag_146:\n        /* \"#utility.yul\":2200:2274   */\n      swap2\n      pop\n        /* \"#utility.yul\":2283:2376   */\n      tag_148\n        /* \"#utility.yul\":2372:2375   */\n      dup3\n        /* \"#utility.yul\":2283:2376   */\n      tag_149\n      jump\t// in\n    tag_148:\n        /* \"#utility.yul\":2401:2403   */\n      0x40\n        /* \"#utility.yul\":2396:2399   */\n      dup3\n        /* \"#utility.yul\":2392:2404   */\n      add\n        /* \"#utility.yul\":2385:2404   */\n      swap1\n      pop\n        /* \"#utility.yul\":2044:2410   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2416:2782   */\n    tag_150:\n        /* \"#utility.yul\":2558:2561   */\n      0x00\n        /* \"#utility.yul\":2579:2646   */\n      tag_152\n        /* \"#utility.yul\":2643:2645   */\n      0x19\n        /* \"#utility.yul\":2638:2641   */\n      dup4\n        /* \"#utility.yul\":2579:2646   */\n      tag_147\n      jump\t// in\n    tag_152:\n        /* \"#utility.yul\":2572:2646   */\n      swap2\n      pop\n        /* \"#utility.yul\":2655:2748   */\n      tag_153\n        /* \"#utility.yul\":2744:2747   */\n      dup3\n        /* \"#utility.yul\":2655:2748   */\n      tag_154\n      jump\t// in\n    tag_153:\n        /* \"#utility.yul\":2773:2775   */\n      0x20\n        /* \"#utility.yul\":2768:2771   */\n      dup3\n        /* \"#utility.yul\":2764:2776   */\n      add\n        /* \"#utility.yul\":2757:2776   */\n      swap1\n      pop\n        /* \"#utility.yul\":2416:2782   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2788:3154   */\n    tag_155:\n        /* \"#utility.yul\":2930:2933   */\n      0x00\n        /* \"#utility.yul\":2951:3018   */\n      tag_157\n        /* \"#utility.yul\":3015:3017   */\n      0x20\n        /* \"#utility.yul\":3010:3013   */\n      dup4\n        /* \"#utility.yul\":2951:3018   */\n      tag_147\n      jump\t// in\n    tag_157:\n        /* \"#utility.yul\":2944:3018   */\n      swap2\n      pop\n        /* \"#utility.yul\":3027:3120   */\n      tag_158\n        /* \"#utility.yul\":3116:3119   */\n      dup3\n        /* \"#utility.yul\":3027:3120   */\n      tag_159\n      jump\t// in\n    tag_158:\n        /* \"#utility.yul\":3145:3147   */\n      0x20\n        /* \"#utility.yul\":3140:3143   */\n      dup3\n        /* \"#utility.yul\":3136:3148   */\n      add\n        /* \"#utility.yul\":3129:3148   */\n      swap1\n      pop\n        /* \"#utility.yul\":2788:3154   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3160:3268   */\n    tag_125:\n        /* \"#utility.yul\":3237:3261   */\n      tag_161\n        /* \"#utility.yul\":3255:3260   */\n      dup2\n        /* \"#utility.yul\":3237:3261   */\n      tag_162\n      jump\t// in\n    tag_161:\n        /* \"#utility.yul\":3232:3235   */\n      dup3\n        /* \"#utility.yul\":3225:3262   */\n      mstore\n        /* \"#utility.yul\":3160:3268   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3274:3496   */\n    tag_20:\n        /* \"#utility.yul\":3367:3371   */\n      0x00\n        /* \"#utility.yul\":3405:3407   */\n      0x20\n        /* \"#utility.yul\":3394:3403   */\n      dup3\n        /* \"#utility.yul\":3390:3408   */\n      add\n        /* \"#utility.yul\":3382:3408   */\n      swap1\n      pop\n        /* \"#utility.yul\":3418:3489   */\n      tag_164\n        /* \"#utility.yul\":3486:3487   */\n      0x00\n        /* \"#utility.yul\":3475:3484   */\n      dup4\n        /* \"#utility.yul\":3471:3488   */\n      add\n        /* \"#utility.yul\":3462:3468   */\n      dup5\n        /* \"#utility.yul\":3418:3489   */\n      tag_126\n      jump\t// in\n    tag_164:\n        /* \"#utility.yul\":3274:3496   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3502:3875   */\n    tag_31:\n        /* \"#utility.yul\":3645:3649   */\n      0x00\n        /* \"#utility.yul\":3683:3685   */\n      0x20\n        /* \"#utility.yul\":3672:3681   */\n      dup3\n        /* \"#utility.yul\":3668:3686   */\n      add\n        /* \"#utility.yul\":3660:3686   */\n      swap1\n      pop\n        /* \"#utility.yul\":3732:3741   */\n      dup2\n        /* \"#utility.yul\":3726:3730   */\n      dup2\n        /* \"#utility.yul\":3722:3742   */\n      sub\n        /* \"#utility.yul\":3718:3719   */\n      0x00\n        /* \"#utility.yul\":3707:3716   */\n      dup4\n        /* \"#utility.yul\":3703:3720   */\n      add\n        /* \"#utility.yul\":3696:3743   */\n      mstore\n        /* \"#utility.yul\":3760:3868   */\n      tag_166\n        /* \"#utility.yul\":3863:3867   */\n      dup2\n        /* \"#utility.yul\":3854:3860   */\n      dup5\n        /* \"#utility.yul\":3760:3868   */\n      tag_130\n      jump\t// in\n    tag_166:\n        /* \"#utility.yul\":3752:3868   */\n      swap1\n      pop\n        /* \"#utility.yul\":3502:3875   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3881:4300   */\n    tag_93:\n        /* \"#utility.yul\":4047:4051   */\n      0x00\n        /* \"#utility.yul\":4085:4087   */\n      0x20\n        /* \"#utility.yul\":4074:4083   */\n      dup3\n        /* \"#utility.yul\":4070:4088   */\n      add\n        /* \"#utility.yul\":4062:4088   */\n      swap1\n      pop\n        /* \"#utility.yul\":4134:4143   */\n      dup2\n        /* \"#utility.yul\":4128:4132   */\n      dup2\n        /* \"#utility.yul\":4124:4144   */\n      sub\n        /* \"#utility.yul\":4120:4121   */\n      0x00\n        /* \"#utility.yul\":4109:4118   */\n      dup4\n        /* \"#utility.yul\":4105:4122   */\n      add\n        /* \"#utility.yul\":4098:4145   */\n      mstore\n        /* \"#utility.yul\":4162:4293   */\n      tag_168\n        /* \"#utility.yul\":4288:4292   */\n      dup2\n        /* \"#utility.yul\":4162:4293   */\n      tag_144\n      jump\t// in\n    tag_168:\n        /* \"#utility.yul\":4154:4293   */\n      swap1\n      pop\n        /* \"#utility.yul\":3881:4300   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4306:4725   */\n    tag_78:\n        /* \"#utility.yul\":4472:4476   */\n      0x00\n        /* \"#utility.yul\":4510:4512   */\n      0x20\n        /* \"#utility.yul\":4499:4508   */\n      dup3\n        /* \"#utility.yul\":4495:4513   */\n      add\n        /* \"#utility.yul\":4487:4513   */\n      swap1\n      pop\n        /* \"#utility.yul\":4559:4568   */\n      dup2\n        /* \"#utility.yul\":4553:4557   */\n      dup2\n        /* \"#utility.yul\":4549:4569   */\n      sub\n        /* \"#utility.yul\":4545:4546   */\n      0x00\n        /* \"#utility.yul\":4534:4543   */\n      dup4\n        /* \"#utility.yul\":4530:4547   */\n      add\n        /* \"#utility.yul\":4523:4570   */\n      mstore\n        /* \"#utility.yul\":4587:4718   */\n      tag_170\n        /* \"#utility.yul\":4713:4717   */\n      dup2\n        /* \"#utility.yul\":4587:4718   */\n      tag_150\n      jump\t// in\n    tag_170:\n        /* \"#utility.yul\":4579:4718   */\n      swap1\n      pop\n        /* \"#utility.yul\":4306:4725   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4731:5150   */\n    tag_101:\n        /* \"#utility.yul\":4897:4901   */\n      0x00\n        /* \"#utility.yul\":4935:4937   */\n      0x20\n        /* \"#utility.yul\":4924:4933   */\n      dup3\n        /* \"#utility.yul\":4920:4938   */\n      add\n        /* \"#utility.yul\":4912:4938   */\n      swap1\n      pop\n        /* \"#utility.yul\":4984:4993   */\n      dup2\n        /* \"#utility.yul\":4978:4982   */\n      dup2\n        /* \"#utility.yul\":4974:4994   */\n      sub\n        /* \"#utility.yul\":4970:4971   */\n      0x00\n        /* \"#utility.yul\":4959:4968   */\n      dup4\n        /* \"#utility.yul\":4955:4972   */\n      add\n        /* \"#utility.yul\":4948:4995   */\n      mstore\n        /* \"#utility.yul\":5012:5143   */\n      tag_172\n        /* \"#utility.yul\":5138:5142   */\n      dup2\n        /* \"#utility.yul\":5012:5143   */\n      tag_155\n      jump\t// in\n    tag_172:\n        /* \"#utility.yul\":5004:5143   */\n      swap1\n      pop\n        /* \"#utility.yul\":4731:5150   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5237:5369   */\n    tag_137:\n        /* \"#utility.yul\":5304:5308   */\n      0x00\n        /* \"#utility.yul\":5327:5330   */\n      dup2\n        /* \"#utility.yul\":5319:5330   */\n      swap1\n      pop\n        /* \"#utility.yul\":5357:5361   */\n      0x20\n        /* \"#utility.yul\":5352:5355   */\n      dup3\n        /* \"#utility.yul\":5348:5362   */\n      add\n        /* \"#utility.yul\":5340:5362   */\n      swap1\n      pop\n        /* \"#utility.yul\":5237:5369   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5375:5489   */\n    tag_133:\n        /* \"#utility.yul\":5442:5448   */\n      0x00\n        /* \"#utility.yul\":5476:5481   */\n      dup2\n        /* \"#utility.yul\":5470:5482   */\n      mload\n        /* \"#utility.yul\":5460:5482   */\n      swap1\n      pop\n        /* \"#utility.yul\":5375:5489   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5495:5608   */\n    tag_143:\n        /* \"#utility.yul\":5565:5569   */\n      0x00\n        /* \"#utility.yul\":5597:5601   */\n      0x20\n        /* \"#utility.yul\":5592:5595   */\n      dup3\n        /* \"#utility.yul\":5588:5602   */\n      add\n        /* \"#utility.yul\":5580:5602   */\n      swap1\n      pop\n        /* \"#utility.yul\":5495:5608   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5614:5798   */\n    tag_135:\n        /* \"#utility.yul\":5713:5724   */\n      0x00\n        /* \"#utility.yul\":5747:5753   */\n      dup3\n        /* \"#utility.yul\":5742:5745   */\n      dup3\n        /* \"#utility.yul\":5735:5754   */\n      mstore\n        /* \"#utility.yul\":5787:5791   */\n      0x20\n        /* \"#utility.yul\":5782:5785   */\n      dup3\n        /* \"#utility.yul\":5778:5792   */\n      add\n        /* \"#utility.yul\":5763:5792   */\n      swap1\n      pop\n        /* \"#utility.yul\":5614:5798   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5804:5973   */\n    tag_147:\n        /* \"#utility.yul\":5888:5899   */\n      0x00\n        /* \"#utility.yul\":5922:5928   */\n      dup3\n        /* \"#utility.yul\":5917:5920   */\n      dup3\n        /* \"#utility.yul\":5910:5929   */\n      mstore\n        /* \"#utility.yul\":5962:5966   */\n      0x20\n        /* \"#utility.yul\":5957:5960   */\n      dup3\n        /* \"#utility.yul\":5953:5967   */\n      add\n        /* \"#utility.yul\":5938:5967   */\n      swap1\n      pop\n        /* \"#utility.yul\":5804:5973   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5979:6170   */\n    tag_48:\n        /* \"#utility.yul\":6019:6023   */\n      0x00\n        /* \"#utility.yul\":6039:6059   */\n      tag_181\n        /* \"#utility.yul\":6057:6058   */\n      dup3\n        /* \"#utility.yul\":6039:6059   */\n      tag_162\n      jump\t// in\n    tag_181:\n        /* \"#utility.yul\":6034:6059   */\n      swap2\n      pop\n        /* \"#utility.yul\":6073:6093   */\n      tag_182\n        /* \"#utility.yul\":6091:6092   */\n      dup4\n        /* \"#utility.yul\":6073:6093   */\n      tag_162\n      jump\t// in\n    tag_182:\n        /* \"#utility.yul\":6068:6093   */\n      swap3\n      pop\n        /* \"#utility.yul\":6112:6113   */\n      dup3\n        /* \"#utility.yul\":6109:6110   */\n      dup3\n        /* \"#utility.yul\":6106:6114   */\n      lt\n        /* \"#utility.yul\":6103:6137   */\n      iszero\n      tag_183\n      jumpi\n        /* \"#utility.yul\":6117:6135   */\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n        /* \"#utility.yul\":6103:6137   */\n    tag_183:\n        /* \"#utility.yul\":6162:6163   */\n      dup3\n        /* \"#utility.yul\":6159:6160   */\n      dup3\n        /* \"#utility.yul\":6155:6164   */\n      sub\n        /* \"#utility.yul\":6147:6164   */\n      swap1\n      pop\n        /* \"#utility.yul\":5979:6170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6176:6272   */\n    tag_129:\n        /* \"#utility.yul\":6213:6220   */\n      0x00\n        /* \"#utility.yul\":6242:6266   */\n      tag_187\n        /* \"#utility.yul\":6260:6265   */\n      dup3\n        /* \"#utility.yul\":6242:6266   */\n      tag_188\n      jump\t// in\n    tag_187:\n        /* \"#utility.yul\":6231:6266   */\n      swap1\n      pop\n        /* \"#utility.yul\":6176:6272   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6278:6404   */\n    tag_188:\n        /* \"#utility.yul\":6315:6322   */\n      0x00\n        /* \"#utility.yul\":6355:6397   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6348:6353   */\n      dup3\n        /* \"#utility.yul\":6344:6398   */\n      and\n        /* \"#utility.yul\":6333:6398   */\n      swap1\n      pop\n        /* \"#utility.yul\":6278:6404   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6410:6487   */\n    tag_162:\n        /* \"#utility.yul\":6447:6454   */\n      0x00\n        /* \"#utility.yul\":6476:6481   */\n      dup2\n        /* \"#utility.yul\":6465:6481   */\n      swap1\n      pop\n        /* \"#utility.yul\":6410:6487   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6493:6726   */\n    tag_60:\n        /* \"#utility.yul\":6532:6535   */\n      0x00\n        /* \"#utility.yul\":6555:6579   */\n      tag_192\n        /* \"#utility.yul\":6573:6578   */\n      dup3\n        /* \"#utility.yul\":6555:6579   */\n      tag_162\n      jump\t// in\n    tag_192:\n        /* \"#utility.yul\":6546:6579   */\n      swap2\n      pop\n        /* \"#utility.yul\":6601:6667   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":6594:6599   */\n      dup3\n        /* \"#utility.yul\":6591:6668   */\n      eq\n        /* \"#utility.yul\":6588:6691   */\n      iszero\n      tag_193\n      jumpi\n        /* \"#utility.yul\":6671:6689   */\n      tag_194\n      tag_185\n      jump\t// in\n    tag_194:\n        /* \"#utility.yul\":6588:6691   */\n    tag_193:\n        /* \"#utility.yul\":6718:6719   */\n      0x01\n        /* \"#utility.yul\":6711:6716   */\n      dup3\n        /* \"#utility.yul\":6707:6720   */\n      add\n        /* \"#utility.yul\":6700:6720   */\n      swap1\n      pop\n        /* \"#utility.yul\":6493:6726   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6732:6912   */\n    tag_185:\n        /* \"#utility.yul\":6780:6857   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6777:6778   */\n      0x00\n        /* \"#utility.yul\":6770:6858   */\n      mstore\n        /* \"#utility.yul\":6877:6881   */\n      0x11\n        /* \"#utility.yul\":6874:6875   */\n      0x04\n        /* \"#utility.yul\":6867:6882   */\n      mstore\n        /* \"#utility.yul\":6901:6905   */\n      0x24\n        /* \"#utility.yul\":6898:6899   */\n      0x00\n        /* \"#utility.yul\":6891:6906   */\n      revert\n        /* \"#utility.yul\":6918:7098   */\n    tag_57:\n        /* \"#utility.yul\":6966:7043   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":6963:6964   */\n      0x00\n        /* \"#utility.yul\":6956:7044   */\n      mstore\n        /* \"#utility.yul\":7063:7067   */\n      0x31\n        /* \"#utility.yul\":7060:7061   */\n      0x04\n        /* \"#utility.yul\":7053:7068   */\n      mstore\n        /* \"#utility.yul\":7087:7091   */\n      0x24\n        /* \"#utility.yul\":7084:7085   */\n      0x00\n        /* \"#utility.yul\":7077:7092   */\n      revert\n        /* \"#utility.yul\":7104:7284   */\n    tag_44:\n        /* \"#utility.yul\":7152:7229   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7149:7150   */\n      0x00\n        /* \"#utility.yul\":7142:7230   */\n      mstore\n        /* \"#utility.yul\":7249:7253   */\n      0x32\n        /* \"#utility.yul\":7246:7247   */\n      0x04\n        /* \"#utility.yul\":7239:7254   */\n      mstore\n        /* \"#utility.yul\":7273:7277   */\n      0x24\n        /* \"#utility.yul\":7270:7271   */\n      0x00\n        /* \"#utility.yul\":7263:7278   */\n      revert\n        /* \"#utility.yul\":7413:7530   */\n    tag_116:\n        /* \"#utility.yul\":7522:7523   */\n      0x00\n        /* \"#utility.yul\":7519:7520   */\n      dup1\n        /* \"#utility.yul\":7512:7524   */\n      revert\n        /* \"#utility.yul\":7536:7761   */\n    tag_149:\n        /* \"#utility.yul\":7676:7710   */\n      0x4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061\n        /* \"#utility.yul\":7672:7673   */\n      0x00\n        /* \"#utility.yul\":7664:7670   */\n      dup3\n        /* \"#utility.yul\":7660:7674   */\n      add\n        /* \"#utility.yul\":7653:7711   */\n      mstore\n        /* \"#utility.yul\":7745:7753   */\n      0x6464726573730000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":7740:7742   */\n      0x20\n        /* \"#utility.yul\":7732:7738   */\n      dup3\n        /* \"#utility.yul\":7728:7743   */\n      add\n        /* \"#utility.yul\":7721:7754   */\n      mstore\n        /* \"#utility.yul\":7536:7761   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7767:7942   */\n    tag_154:\n        /* \"#utility.yul\":7907:7934   */\n      0x636c61696d546f70696320616c72656164792065786973747300000000000000\n        /* \"#utility.yul\":7903:7904   */\n      0x00\n        /* \"#utility.yul\":7895:7901   */\n      dup3\n        /* \"#utility.yul\":7891:7905   */\n      add\n        /* \"#utility.yul\":7884:7935   */\n      mstore\n        /* \"#utility.yul\":7767:7942   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7948:8130   */\n    tag_159:\n        /* \"#utility.yul\":8088:8122   */\n      0x4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572\n        /* \"#utility.yul\":8084:8085   */\n      0x00\n        /* \"#utility.yul\":8076:8082   */\n      dup3\n        /* \"#utility.yul\":8072:8086   */\n      add\n        /* \"#utility.yul\":8065:8123   */\n      mstore\n        /* \"#utility.yul\":7948:8130   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8136:8258   */\n    tag_108:\n        /* \"#utility.yul\":8209:8233   */\n      tag_205\n        /* \"#utility.yul\":8227:8232   */\n      dup2\n        /* \"#utility.yul\":8209:8233   */\n      tag_129\n      jump\t// in\n    tag_205:\n        /* \"#utility.yul\":8202:8207   */\n      dup2\n        /* \"#utility.yul\":8199:8234   */\n      eq\n        /* \"#utility.yul\":8189:8252   */\n      tag_206\n      jumpi\n        /* \"#utility.yul\":8248:8249   */\n      0x00\n        /* \"#utility.yul\":8245:8246   */\n      dup1\n        /* \"#utility.yul\":8238:8250   */\n      revert\n        /* \"#utility.yul\":8189:8252   */\n    tag_206:\n        /* \"#utility.yul\":8136:8258   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":8264:8386   */\n    tag_112:\n        /* \"#utility.yul\":8337:8361   */\n      tag_208\n        /* \"#utility.yul\":8355:8360   */\n      dup2\n        /* \"#utility.yul\":8337:8361   */\n      tag_162\n      jump\t// in\n    tag_208:\n        /* \"#utility.yul\":8330:8335   */\n      dup2\n        /* \"#utility.yul\":8327:8362   */\n      eq\n        /* \"#utility.yul\":8317:8380   */\n      tag_209\n      jumpi\n        /* \"#utility.yul\":8376:8377   */\n      0x00\n        /* \"#utility.yul\":8373:8374   */\n      dup1\n        /* \"#utility.yul\":8366:8378   */\n      revert\n        /* \"#utility.yul\":8317:8380   */\n    tag_209:\n        /* \"#utility.yul\":8264:8386   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ce47770912132af57539a4645144038495cec354ca6796b6e131e0dcea7b348064736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_23": {
									"entryPoint": null,
									"id": 23,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 50,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 58,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [],
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b5061002d61002261003260201b60201c565b61003a60201b60201c565b6100fe565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610a548061010d6000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c7b225511161005b578063c7b22551146100c6578063d5144472146100e2578063df09d604146100fe578063f2fde38b1461011c5761007d565b80630829784614610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c600480360381019061009791906105f3565b610138565b005b6100a6610239565b005b6100b061024d565b6040516100bd919061071d565b60405180910390f35b6100e060048036038101906100db91906105f3565b610276565b005b6100fc60048036038101906100f791906105c6565b610362565b005b610106610376565b6040516101139190610738565b60405180910390f35b610136600480360381019061013191906105c6565b6103ce565b005b610140610452565b6000600180549050905060005b8181101561023457826001828154811061016a5761016961091b565b5b9060005260206000200154141561022157600180836101899190610804565b8154811061019a5761019961091b565b5b9060005260206000200154600182815481106101b9576101b861091b565b5b906000526020600020018190555060018054806101d9576101d86108ec565b5b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2610234565b808061022c90610874565b91505061014d565b505050565b610241610452565b61024b60006104d0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027e610452565b6000600180549050905060005b818110156103075782600182815481106102a8576102a761091b565b5b906000526020600020015414156102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb9061077a565b60405180910390fd5b80806102ff90610874565b91505061028b565b506001829080600181540180825580915050600190039060005260206000200160009091909190915055817f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a25050565b61036a610452565b610373816103ce565b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103c457602002820191906000526020600020905b8154815260200190600101908083116103b0575b5050505050905090565b6103d6610452565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d9061075a565b60405180910390fd5b61044f816104d0565b50565b61045a610594565b73ffffffffffffffffffffffffffffffffffffffff1661047861024d565b73ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c59061079a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506105ab816109f0565b92915050565b6000813590506105c081610a07565b92915050565b6000602082840312156105dc576105db61094a565b5b60006105ea8482850161059c565b91505092915050565b6000602082840312156106095761060861094a565b5b6000610617848285016105b1565b91505092915050565b600061062c838361070e565b60208301905092915050565b61064181610838565b82525050565b6000610652826107ca565b61065c81856107e2565b9350610667836107ba565b8060005b8381101561069857815161067f8882610620565b975061068a836107d5565b92505060018101905061066b565b5085935050505092915050565b60006106b26026836107f3565b91506106bd8261094f565b604082019050919050565b60006106d56019836107f3565b91506106e08261099e565b602082019050919050565b60006106f86020836107f3565b9150610703826109c7565b602082019050919050565b6107178161086a565b82525050565b60006020820190506107326000830184610638565b92915050565b600060208201905081810360008301526107528184610647565b905092915050565b60006020820190508181036000830152610773816106a5565b9050919050565b60006020820190508181036000830152610793816106c8565b9050919050565b600060208201905081810360008301526107b3816106eb565b9050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061080f8261086a565b915061081a8361086a565b92508282101561082d5761082c6108bd565b5b828203905092915050565b60006108438261084a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061087f8261086a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108b2576108b16108bd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f636c61696d546f70696320616c72656164792065786973747300000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109f981610838565b8114610a0457600080fd5b50565b610a108161086a565b8114610a1b57600080fd5b5056fea2646970667358221220ce47770912132af57539a4645144038495cec354ca6796b6e131e0dcea7b348064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D PUSH2 0x22 PUSH2 0x32 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3A PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0xFE JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0xA54 DUP1 PUSH2 0x10D PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7B22551 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xD5144472 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8297846 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x234 JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x221 JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x1D9 JUMPI PUSH2 0x1D8 PUSH2 0x8EC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x234 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x22C SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x241 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x0 PUSH2 0x4D0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x2FF SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28B JUMP JUMPDEST POP PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x36A PUSH2 0x452 JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x3CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3B0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x4D0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x478 PUSH2 0x24D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5AB DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DB PUSH2 0x94A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP5 DUP3 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0x94A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP3 DUP6 ADD PUSH2 0x5B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP4 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x65C DUP2 DUP6 PUSH2 0x7E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x667 DUP4 PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x698 JUMPI DUP2 MLOAD PUSH2 0x67F DUP9 DUP3 PUSH2 0x620 JUMP JUMPDEST SWAP8 POP PUSH2 0x68A DUP4 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x66B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH1 0x26 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BD DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D5 PUSH1 0x19 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E0 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH1 0x20 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x703 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x86A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x752 DUP2 DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x773 DUP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x793 DUP2 PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B3 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP2 POP PUSH2 0x81A DUP4 PUSH2 0x86A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x82D JUMPI PUSH2 0x82C PUSH2 0x8BD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x843 DUP3 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0x8BD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x636C61696D546F70696320616C72656164792065786973747300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA10 DUP2 PUSH2 0x86A JUMP JUMPDEST DUP2 EQ PUSH2 0xA1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SELFBALANCE PUSH24 0x912132AF57539A4645144038495CEC354CA6796B6E131E0 0xDC 0xEA PUSH28 0x348064736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "1220:1503:2:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;1220:1503:2;;640:96:1;693:7;719:10;712:17;;640:96;:::o;2433:187:0:-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;1220:1503:2:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_checkOwner_54": {
									"entryPoint": 1106,
									"id": 54,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_msgSender_124": {
									"entryPoint": 1428,
									"id": 124,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_transferOwnership_111": {
									"entryPoint": 1232,
									"id": 111,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@addClaimTopic_192": {
									"entryPoint": 630,
									"id": 192,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@getClaimTopics_257": {
									"entryPoint": 886,
									"id": 257,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@owner_40": {
									"entryPoint": 589,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeClaimTopic_246": {
									"entryPoint": 312,
									"id": 246,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@renounceOwnership_68": {
									"entryPoint": 569,
									"id": 68,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@transferOwnershipOnClaimTopicsRegistryContract_271": {
									"entryPoint": 866,
									"id": 271,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@transferOwnership_91": {
									"entryPoint": 974,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 1436,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 1457,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 1478,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 1523,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encodeUpdatedPos_t_uint256_to_t_uint256": {
									"entryPoint": 1568,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 1592,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 1607,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1701,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1736,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 1771,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256": {
									"entryPoint": 1806,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 1821,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed": {
									"entryPoint": 1848,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1882,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1914,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 1946,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1978,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_length_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 1994,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr": {
									"entryPoint": 2005,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack": {
									"entryPoint": 2018,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 2035,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 2052,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 2104,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 2122,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 2154,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 2164,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 2237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 2284,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 2331,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 2378,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe": {
									"entryPoint": 2383,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7": {
									"entryPoint": 2462,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe": {
									"entryPoint": 2503,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 2544,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 2567,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:8389:4",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:4",
														"type": ""
													}
												],
												"src": "7:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "204:87:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "214:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "236:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "223:12:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "223:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "214:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "279:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "252:26:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "252:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "252:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "182:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "190:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "198:5:4",
														"type": ""
													}
												],
												"src": "152:139:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "363:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "409:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "411:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "411:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "411:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "384:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "393:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "380:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "380:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "376:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "376:32:4"
															},
															"nodeType": "YulIf",
															"src": "373:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "502:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "517:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "531:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "521:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "546:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "581:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "592:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "577:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "577:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "601:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "556:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "556:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "546:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "333:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "344:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "356:6:4",
														"type": ""
													}
												],
												"src": "297:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "698:263:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "744:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "746:77:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "746:79:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "746:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "719:7:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "728:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "715:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "715:23:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "740:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "711:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "711:32:4"
															},
															"nodeType": "YulIf",
															"src": "708:119:4"
														},
														{
															"nodeType": "YulBlock",
															"src": "837:117:4",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "852:15:4",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "866:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "856:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "881:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "916:9:4"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "927:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "912:3:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "912:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "936:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "891:20:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "891:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "881:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "668:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "679:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "691:6:4",
														"type": ""
													}
												],
												"src": "632:329:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1047:99:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "1091:6:4"
																	},
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1099:3:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1057:33:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1057:46:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1057:46:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1112:28:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1130:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1135:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1126:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1126:14:4"
															},
															"variableNames": [
																{
																	"name": "updatedPos",
																	"nodeType": "YulIdentifier",
																	"src": "1112:10:4"
																}
															]
														}
													]
												},
												"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "1020:6:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1028:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updatedPos",
														"nodeType": "YulTypedName",
														"src": "1036:10:4",
														"type": ""
													}
												],
												"src": "967:179:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1217:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1234:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "1257:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nodeType": "YulIdentifier",
																			"src": "1239:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1239:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1227:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1227:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1227:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1205:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1212:3:4",
														"type": ""
													}
												],
												"src": "1152:118:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1430:608:4",
													"statements": [
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1440:68:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1502:5:4"
																	}
																],
																"functionName": {
																	"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1454:47:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1454:54:4"
															},
															"variables": [
																{
																	"name": "length",
																	"nodeType": "YulTypedName",
																	"src": "1444:6:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1517:93:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "1598:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1603:6:4"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "1524:73:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1524:86:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "1517:3:4"
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1619:71:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "1684:5:4"
																	}
																],
																"functionName": {
																	"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
																	"nodeType": "YulIdentifier",
																	"src": "1634:49:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1634:56:4"
															},
															"variables": [
																{
																	"name": "baseRef",
																	"nodeType": "YulTypedName",
																	"src": "1623:7:4",
																	"type": ""
																}
															]
														},
														{
															"nodeType": "YulVariableDeclaration",
															"src": "1699:21:4",
															"value": {
																"name": "baseRef",
																"nodeType": "YulIdentifier",
																"src": "1713:7:4"
															},
															"variables": [
																{
																	"name": "srcPtr",
																	"nodeType": "YulTypedName",
																	"src": "1703:6:4",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1789:224:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1803:34:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1830:6:4"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nodeType": "YulIdentifier",
																				"src": "1824:5:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1824:13:4"
																		},
																		"variables": [
																			{
																				"name": "elementValue0",
																				"nodeType": "YulTypedName",
																				"src": "1807:13:4",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1850:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "elementValue0",
																					"nodeType": "YulIdentifier",
																					"src": "1901:13:4"
																				},
																				{
																					"name": "pos",
																					"nodeType": "YulIdentifier",
																					"src": "1916:3:4"
																				}
																			],
																			"functionName": {
																				"name": "abi_encodeUpdatedPos_t_uint256_to_t_uint256",
																				"nodeType": "YulIdentifier",
																				"src": "1857:43:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1857:63:4"
																		},
																		"variableNames": [
																			{
																				"name": "pos",
																				"nodeType": "YulIdentifier",
																				"src": "1850:3:4"
																			}
																		]
																	},
																	{
																		"nodeType": "YulAssignment",
																		"src": "1933:70:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "srcPtr",
																					"nodeType": "YulIdentifier",
																					"src": "1996:6:4"
																				}
																			],
																			"functionName": {
																				"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
																				"nodeType": "YulIdentifier",
																				"src": "1943:52:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1943:60:4"
																		},
																		"variableNames": [
																			{
																				"name": "srcPtr",
																				"nodeType": "YulIdentifier",
																				"src": "1933:6:4"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "i",
																		"nodeType": "YulIdentifier",
																		"src": "1751:1:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "1754:6:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "1748:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "1748:13:4"
															},
															"nodeType": "YulForLoop",
															"post": {
																"nodeType": "YulBlock",
																"src": "1762:18:4",
																"statements": [
																	{
																		"nodeType": "YulAssignment",
																		"src": "1764:14:4",
																		"value": {
																			"arguments": [
																				{
																					"name": "i",
																					"nodeType": "YulIdentifier",
																					"src": "1773:1:4"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "1776:1:4",
																					"type": "",
																					"value": "1"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nodeType": "YulIdentifier",
																				"src": "1769:3:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1769:9:4"
																		},
																		"variableNames": [
																			{
																				"name": "i",
																				"nodeType": "YulIdentifier",
																				"src": "1764:1:4"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nodeType": "YulBlock",
																"src": "1733:14:4",
																"statements": [
																	{
																		"nodeType": "YulVariableDeclaration",
																		"src": "1735:10:4",
																		"value": {
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "1744:1:4",
																			"type": "",
																			"value": "0"
																		},
																		"variables": [
																			{
																				"name": "i",
																				"nodeType": "YulTypedName",
																				"src": "1739:1:4",
																				"type": ""
																			}
																		]
																	}
																]
															},
															"src": "1729:284:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2022:10:4",
															"value": {
																"name": "pos",
																"nodeType": "YulIdentifier",
																"src": "2029:3:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2022:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1409:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "1416:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "1425:3:4",
														"type": ""
													}
												],
												"src": "1306:732:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2200:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2266:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2271:2:4",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2207:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2207:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2200:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2372:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																	"nodeType": "YulIdentifier",
																	"src": "2283:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2283:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2283:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2385:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2396:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2401:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2392:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2392:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2178:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2186:3:4",
														"type": ""
													}
												],
												"src": "2044:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2562:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2572:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2638:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2643:2:4",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2579:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2579:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2572:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2744:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																	"nodeType": "YulIdentifier",
																	"src": "2655:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2655:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2655:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "2757:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "2768:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2773:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2764:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2764:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "2757:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2550:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2558:3:4",
														"type": ""
													}
												],
												"src": "2416:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2934:220:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "2944:74:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3010:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3015:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "2951:58:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "2951:67:4"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nodeType": "YulIdentifier",
																	"src": "2944:3:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3116:3:4"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																	"nodeType": "YulIdentifier",
																	"src": "3027:88:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3027:93:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3027:93:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3129:19:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3140:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3145:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3136:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3136:12:4"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nodeType": "YulIdentifier",
																	"src": "3129:3:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "2922:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "2930:3:4",
														"type": ""
													}
												],
												"src": "2788:366:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3215:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "3232:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "3255:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "3237:17:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3237:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3225:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3225:37:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3225:37:4"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "3203:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "3210:3:4",
														"type": ""
													}
												],
												"src": "3160:108:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3372:124:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3382:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3394:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3405:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3390:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3390:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3382:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3462:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3475:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3486:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3471:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3471:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3418:43:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3418:71:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3418:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3344:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3356:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3367:4:4",
														"type": ""
													}
												],
												"src": "3274:222:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "3650:225:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "3660:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3672:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "3683:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3668:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3668:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3660:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3707:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "3718:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "3703:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3703:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "3726:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "3732:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "3722:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "3722:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "3696:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3696:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "3696:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "3752:116:4",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "3854:6:4"
																	},
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "3863:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "3760:93:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "3760:108:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "3752:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "3622:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "3634:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "3645:4:4",
														"type": ""
													}
												],
												"src": "3502:373:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4052:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4062:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4074:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4085:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4070:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4070:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4062:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4109:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4120:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4105:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4105:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4128:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4134:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4124:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4124:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4098:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4098:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4098:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4154:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4288:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4162:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4162:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4154:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4032:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4047:4:4",
														"type": ""
													}
												],
												"src": "3881:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4477:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4487:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4499:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4510:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4495:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4495:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4487:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4534:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4545:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4530:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4530:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4553:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4559:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4549:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4549:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4523:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4523:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4523:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "4579:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "4713:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "4587:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4587:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4579:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4457:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4472:4:4",
														"type": ""
													}
												],
												"src": "4306:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "4902:248:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "4912:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "4924:9:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "4935:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "4920:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4920:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "4912:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4959:9:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "4970:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "4955:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4955:17:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nodeType": "YulIdentifier",
																				"src": "4978:4:4"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "4984:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "4974:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "4974:20:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "4948:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "4948:47:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "4948:47:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5004:139:4",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nodeType": "YulIdentifier",
																		"src": "5138:4:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack",
																	"nodeType": "YulIdentifier",
																	"src": "5012:124:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5012:131:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "5004:4:4"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "4882:9:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "4897:4:4",
														"type": ""
													}
												],
												"src": "4731:419:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5196:35:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5206:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5222:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5216:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5216:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "5206:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "5189:6:4",
														"type": ""
													}
												],
												"src": "5156:75:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5309:60:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5319:11:4",
															"value": {
																"name": "ptr",
																"nodeType": "YulIdentifier",
																"src": "5327:3:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5319:4:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "5340:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5352:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5357:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5348:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5348:14:4"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nodeType": "YulIdentifier",
																	"src": "5340:4:4"
																}
															]
														}
													]
												},
												"name": "array_dataslot_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5296:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nodeType": "YulTypedName",
														"src": "5304:4:4",
														"type": ""
													}
												],
												"src": "5237:132:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5449:40:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5460:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "5476:5:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "5470:5:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5470:12:4"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nodeType": "YulIdentifier",
																	"src": "5460:6:4"
																}
															]
														}
													]
												},
												"name": "array_length_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "5432:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5442:6:4",
														"type": ""
													}
												],
												"src": "5375:114:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5570:38:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "5580:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "ptr",
																		"nodeType": "YulIdentifier",
																		"src": "5592:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5597:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5588:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5588:14:4"
															},
															"variableNames": [
																{
																	"name": "next",
																	"nodeType": "YulIdentifier",
																	"src": "5580:4:4"
																}
															]
														}
													]
												},
												"name": "array_nextElement_t_array$_t_uint256_$dyn_memory_ptr",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nodeType": "YulTypedName",
														"src": "5557:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "next",
														"nodeType": "YulTypedName",
														"src": "5565:4:4",
														"type": ""
													}
												],
												"src": "5495:113:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5725:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5742:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5747:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5735:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5735:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5735:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5763:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5782:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5787:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5778:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5778:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5763:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5697:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5702:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5713:11:4",
														"type": ""
													}
												],
												"src": "5614:184:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "5900:73:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5917:3:4"
																	},
																	{
																		"name": "length",
																		"nodeType": "YulIdentifier",
																		"src": "5922:6:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "5910:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5910:19:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "5910:19:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "5938:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "5957:3:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "5962:4:4",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5953:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "5953:14:4"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nodeType": "YulIdentifier",
																	"src": "5938:11:4"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "5872:3:4",
														"type": ""
													},
													{
														"name": "length",
														"nodeType": "YulTypedName",
														"src": "5877:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nodeType": "YulTypedName",
														"src": "5888:11:4",
														"type": ""
													}
												],
												"src": "5804:169:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6024:146:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6034:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6057:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6039:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6039:20:4"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "6034:1:4"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "6068:25:4",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6091:1:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6073:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6073:20:4"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "6068:1:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6115:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6117:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6117:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6117:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6109:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6112:1:4"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "6106:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6106:8:4"
															},
															"nodeType": "YulIf",
															"src": "6103:34:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6147:17:4",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "6159:1:4"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "6162:1:4"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nodeType": "YulIdentifier",
																	"src": "6155:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6155:9:4"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nodeType": "YulIdentifier",
																	"src": "6147:4:4"
																}
															]
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "6010:1:4",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "6013:1:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nodeType": "YulTypedName",
														"src": "6019:4:4",
														"type": ""
													}
												],
												"src": "5979:191:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6221:51:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6231:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6260:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "6242:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6242:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6231:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6203:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6213:7:4",
														"type": ""
													}
												],
												"src": "6176:96:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6323:81:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6333:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6348:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6355:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nodeType": "YulIdentifier",
																	"src": "6344:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6344:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6333:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6305:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6315:7:4",
														"type": ""
													}
												],
												"src": "6278:126:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6455:32:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6465:16:4",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "6476:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "6465:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6437:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "6447:7:4",
														"type": ""
													}
												],
												"src": "6410:77:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6536:190:4",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "6546:33:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6573:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "6555:17:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6555:24:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "6546:5:4"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "6669:22:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "6671:16:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "6671:18:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "6671:18:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6594:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6601:66:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nodeType": "YulIdentifier",
																	"src": "6591:2:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6591:77:4"
															},
															"nodeType": "YulIf",
															"src": "6588:103:4"
														},
														{
															"nodeType": "YulAssignment",
															"src": "6700:20:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "6711:5:4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6718:1:4",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6707:13:4"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nodeType": "YulIdentifier",
																	"src": "6700:3:4"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "6522:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nodeType": "YulTypedName",
														"src": "6532:3:4",
														"type": ""
													}
												],
												"src": "6493:233:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6760:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6777:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6780:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6770:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6770:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6770:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6874:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6877:4:4",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6867:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6867:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6867:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6898:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6901:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "6891:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6891:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6891:15:4"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "6732:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "6946:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6963:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "6966:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "6956:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "6956:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "6956:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7060:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7063:4:4",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7053:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7053:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7053:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7084:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7087:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7077:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7077:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7077:15:4"
														}
													]
												},
												"name": "panic_error_0x31",
												"nodeType": "YulFunctionDefinition",
												"src": "6918:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7132:152:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7149:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7152:77:4",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7142:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7142:88:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7142:88:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7246:1:4",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7249:4:4",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7239:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7239:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7239:15:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7270:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7273:4:4",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7263:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7263:15:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7263:15:4"
														}
													]
												},
												"name": "panic_error_0x32",
												"nodeType": "YulFunctionDefinition",
												"src": "7104:180:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7379:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7396:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7399:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7389:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7389:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7389:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "7290:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7502:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7519:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7522:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "7512:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7512:12:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7512:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "7413:117:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7642:119:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7664:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7672:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7660:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7660:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7676:34:4",
																		"type": "",
																		"value": "Ownable: new owner is the zero a"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7653:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7653:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7653:58:4"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7732:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7740:2:4",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7728:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7728:15:4"
																	},
																	{
																		"hexValue": "646472657373",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7745:8:4",
																		"type": "",
																		"value": "ddress"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7721:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7721:33:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7721:33:4"
														}
													]
												},
												"name": "store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7634:6:4",
														"type": ""
													}
												],
												"src": "7536:225:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "7873:69:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "7895:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "7903:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "7891:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7891:14:4"
																	},
																	{
																		"hexValue": "636c61696d546f70696320616c726561647920657869737473",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "7907:27:4",
																		"type": "",
																		"value": "claimTopic already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "7884:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "7884:51:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "7884:51:4"
														}
													]
												},
												"name": "store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "7865:6:4",
														"type": ""
													}
												],
												"src": "7767:175:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8054:76:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nodeType": "YulIdentifier",
																				"src": "8076:6:4"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "8084:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "8072:3:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8072:14:4"
																	},
																	{
																		"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
																		"kind": "string",
																		"nodeType": "YulLiteral",
																		"src": "8088:34:4",
																		"type": "",
																		"value": "Ownable: caller is not the owner"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "8065:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8065:58:4"
															},
															"nodeType": "YulExpressionStatement",
															"src": "8065:58:4"
														}
													]
												},
												"name": "store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "8046:6:4",
														"type": ""
													}
												],
												"src": "7948:182:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8179:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8236:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8245:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8248:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8238:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8238:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8238:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8202:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8227:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nodeType": "YulIdentifier",
																					"src": "8209:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8209:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8199:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8199:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8192:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8192:43:4"
															},
															"nodeType": "YulIf",
															"src": "8189:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8172:5:4",
														"type": ""
													}
												],
												"src": "8136:122:4"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "8307:79:4",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "8364:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8373:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "8376:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "8366:6:4"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "8366:12:4"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "8366:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "8330:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "8355:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "8337:17:4"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "8337:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "8327:2:4"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "8327:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "8320:6:4"
																},
																"nodeType": "YulFunctionCall",
																"src": "8320:43:4"
															},
															"nodeType": "YulIf",
															"src": "8317:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "8300:5:4",
														"type": ""
													}
												],
												"src": "8264:122:4"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 25)\n        store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_tuple_t_array$_t_uint256_$dyn_memory_ptr__to_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        if lt(x, y) { panic_error_0x11() }\n\n        diff := sub(x, y)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function increment_t_uint256(value) -> ret {\n        value := cleanup_t_uint256(value)\n        if eq(value, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x31() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function store_literal_in_memory_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7(memPtr) {\n\n        mstore(add(memPtr, 0), \"claimTopic already exists\")\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561001057600080fd5b506004361061007d5760003560e01c8063c7b225511161005b578063c7b22551146100c6578063d5144472146100e2578063df09d604146100fe578063f2fde38b1461011c5761007d565b80630829784614610082578063715018a61461009e5780638da5cb5b146100a8575b600080fd5b61009c600480360381019061009791906105f3565b610138565b005b6100a6610239565b005b6100b061024d565b6040516100bd919061071d565b60405180910390f35b6100e060048036038101906100db91906105f3565b610276565b005b6100fc60048036038101906100f791906105c6565b610362565b005b610106610376565b6040516101139190610738565b60405180910390f35b610136600480360381019061013191906105c6565b6103ce565b005b610140610452565b6000600180549050905060005b8181101561023457826001828154811061016a5761016961091b565b5b9060005260206000200154141561022157600180836101899190610804565b8154811061019a5761019961091b565b5b9060005260206000200154600182815481106101b9576101b861091b565b5b906000526020600020018190555060018054806101d9576101d86108ec565b5b60019003818190600052602060002001600090559055827f0b1381093c776453c1bbe54fd68be1b235c65db61d099cb50d194b2991e0eec560405160405180910390a2610234565b808061022c90610874565b91505061014d565b505050565b610241610452565b61024b60006104d0565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61027e610452565b6000600180549050905060005b818110156103075782600182815481106102a8576102a761091b565b5b906000526020600020015414156102f4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102eb9061077a565b60405180910390fd5b80806102ff90610874565b91505061028b565b506001829080600181540180825580915050600190039060005260206000200160009091909190915055817f01c928b7f7ade2949e92366aa9454dbef3a416b731cf6ec786ba9595bbd814d660405160405180910390a25050565b61036a610452565b610373816103ce565b50565b606060018054806020026020016040519081016040528092919081815260200182805480156103c457602002820191906000526020600020905b8154815260200190600101908083116103b0575b5050505050905090565b6103d6610452565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610446576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161043d9061075a565b60405180910390fd5b61044f816104d0565b50565b61045a610594565b73ffffffffffffffffffffffffffffffffffffffff1661047861024d565b73ffffffffffffffffffffffffffffffffffffffff16146104ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c59061079a565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6000813590506105ab816109f0565b92915050565b6000813590506105c081610a07565b92915050565b6000602082840312156105dc576105db61094a565b5b60006105ea8482850161059c565b91505092915050565b6000602082840312156106095761060861094a565b5b6000610617848285016105b1565b91505092915050565b600061062c838361070e565b60208301905092915050565b61064181610838565b82525050565b6000610652826107ca565b61065c81856107e2565b9350610667836107ba565b8060005b8381101561069857815161067f8882610620565b975061068a836107d5565b92505060018101905061066b565b5085935050505092915050565b60006106b26026836107f3565b91506106bd8261094f565b604082019050919050565b60006106d56019836107f3565b91506106e08261099e565b602082019050919050565b60006106f86020836107f3565b9150610703826109c7565b602082019050919050565b6107178161086a565b82525050565b60006020820190506107326000830184610638565b92915050565b600060208201905081810360008301526107528184610647565b905092915050565b60006020820190508181036000830152610773816106a5565b9050919050565b60006020820190508181036000830152610793816106c8565b9050919050565b600060208201905081810360008301526107b3816106eb565b9050919050565b6000819050602082019050919050565b600081519050919050565b6000602082019050919050565b600082825260208201905092915050565b600082825260208201905092915050565b600061080f8261086a565b915061081a8361086a565b92508282101561082d5761082c6108bd565b5b828203905092915050565b60006108438261084a565b9050919050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061087f8261086a565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156108b2576108b16108bd565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600080fd5b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b7f636c61696d546f70696320616c72656164792065786973747300000000000000600082015250565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6109f981610838565b8114610a0457600080fd5b50565b610a108161086a565b8114610a1b57600080fd5b5056fea2646970667358221220ce47770912132af57539a4645144038495cec354ca6796b6e131e0dcea7b348064736f6c63430008070033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x7D JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xC7B22551 GT PUSH2 0x5B JUMPI DUP1 PUSH4 0xC7B22551 EQ PUSH2 0xC6 JUMPI DUP1 PUSH4 0xD5144472 EQ PUSH2 0xE2 JUMPI DUP1 PUSH4 0xDF09D604 EQ PUSH2 0xFE JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x11C JUMPI PUSH2 0x7D JUMP JUMPDEST DUP1 PUSH4 0x8297846 EQ PUSH2 0x82 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x9E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0xA8 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x9C PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x138 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xA6 PUSH2 0x239 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xB0 PUSH2 0x24D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xBD SWAP2 SWAP1 PUSH2 0x71D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xE0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xDB SWAP2 SWAP1 PUSH2 0x5F3 JUMP JUMPDEST PUSH2 0x276 JUMP JUMPDEST STOP JUMPDEST PUSH2 0xFC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xF7 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x362 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x106 PUSH2 0x376 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x113 SWAP2 SWAP1 PUSH2 0x738 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x131 SWAP2 SWAP1 PUSH2 0x5C6 JUMP JUMPDEST PUSH2 0x3CE JUMP JUMPDEST STOP JUMPDEST PUSH2 0x140 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x234 JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x16A JUMPI PUSH2 0x169 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x221 JUMPI PUSH1 0x1 DUP1 DUP4 PUSH2 0x189 SWAP2 SWAP1 PUSH2 0x804 JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x19A JUMPI PUSH2 0x199 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1B9 JUMPI PUSH2 0x1B8 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD DUP2 SWAP1 SSTORE POP PUSH1 0x1 DUP1 SLOAD DUP1 PUSH2 0x1D9 JUMPI PUSH2 0x1D8 PUSH2 0x8EC JUMP JUMPDEST JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SSTORE SWAP1 SSTORE DUP3 PUSH32 0xB1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 PUSH2 0x234 JUMP JUMPDEST DUP1 DUP1 PUSH2 0x22C SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x14D JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH2 0x241 PUSH2 0x452 JUMP JUMPDEST PUSH2 0x24B PUSH1 0x0 PUSH2 0x4D0 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x27E PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x307 JUMPI DUP3 PUSH1 0x1 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2A8 JUMPI PUSH2 0x2A7 PUSH2 0x91B JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD SLOAD EQ ISZERO PUSH2 0x2F4 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2EB SWAP1 PUSH2 0x77A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 DUP1 PUSH2 0x2FF SWAP1 PUSH2 0x874 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x28B JUMP JUMPDEST POP PUSH1 0x1 DUP3 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE DUP2 PUSH32 0x1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH2 0x36A PUSH2 0x452 JUMP JUMPDEST PUSH2 0x373 DUP2 PUSH2 0x3CE JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x1 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x3B0 JUMPI JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH2 0x3D6 PUSH2 0x452 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ ISZERO PUSH2 0x446 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x43D SWAP1 PUSH2 0x75A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x44F DUP2 PUSH2 0x4D0 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x45A PUSH2 0x594 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x478 PUSH2 0x24D JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x4CE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C5 SWAP1 PUSH2 0x79A JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5AB DUP2 PUSH2 0x9F0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x5C0 DUP2 PUSH2 0xA07 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x5DC JUMPI PUSH2 0x5DB PUSH2 0x94A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x5EA DUP5 DUP3 DUP6 ADD PUSH2 0x59C JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x609 JUMPI PUSH2 0x608 PUSH2 0x94A JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x617 DUP5 DUP3 DUP6 ADD PUSH2 0x5B1 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x62C DUP4 DUP4 PUSH2 0x70E JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x641 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x652 DUP3 PUSH2 0x7CA JUMP JUMPDEST PUSH2 0x65C DUP2 DUP6 PUSH2 0x7E2 JUMP JUMPDEST SWAP4 POP PUSH2 0x667 DUP4 PUSH2 0x7BA JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x698 JUMPI DUP2 MLOAD PUSH2 0x67F DUP9 DUP3 PUSH2 0x620 JUMP JUMPDEST SWAP8 POP PUSH2 0x68A DUP4 PUSH2 0x7D5 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x66B JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6B2 PUSH1 0x26 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6BD DUP3 PUSH2 0x94F JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6D5 PUSH1 0x19 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x6E0 DUP3 PUSH2 0x99E JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x6F8 PUSH1 0x20 DUP4 PUSH2 0x7F3 JUMP JUMPDEST SWAP2 POP PUSH2 0x703 DUP3 PUSH2 0x9C7 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x717 DUP2 PUSH2 0x86A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x732 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x638 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x752 DUP2 DUP5 PUSH2 0x647 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x773 DUP2 PUSH2 0x6A5 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x793 DUP2 PUSH2 0x6C8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x7B3 DUP2 PUSH2 0x6EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x80F DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP2 POP PUSH2 0x81A DUP4 PUSH2 0x86A JUMP JUMPDEST SWAP3 POP DUP3 DUP3 LT ISZERO PUSH2 0x82D JUMPI PUSH2 0x82C PUSH2 0x8BD JUMP JUMPDEST JUMPDEST DUP3 DUP3 SUB SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x843 DUP3 PUSH2 0x84A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x87F DUP3 PUSH2 0x86A JUMP JUMPDEST SWAP2 POP PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 EQ ISZERO PUSH2 0x8B2 JUMPI PUSH2 0x8B1 PUSH2 0x8BD JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x636C61696D546F70696320616C72656164792065786973747300000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH2 0x9F9 DUP2 PUSH2 0x838 JUMP JUMPDEST DUP2 EQ PUSH2 0xA04 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH2 0xA10 DUP2 PUSH2 0x86A JUMP JUMPDEST DUP2 EQ PUSH2 0xA1B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCE SELFBALANCE PUSH24 0x912132AF57539A4645144038495CEC354CA6796B6E131E0 0xDC 0xEA PUSH28 0x348064736F6C63430008070033000000000000000000000000000000 ",
							"sourceMap": "1220:1503:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1858:416;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1831:101:0;;;:::i;:::-;;1201:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1434:344:2;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2573:148;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;2352:111;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2081:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1858:416:2;1094:13:0;:11;:13::i;:::-;1943:14:2::1;1960:11;:18;;;;1943:35;;1993:9;1988:280;2012:6;2008:1;:10;1988:280;;;2061:11;2043;2055:1;2043:14;;;;;;;;:::i;:::-;;;;;;;;;;:29;2039:219;;;2109:11;2130:1:::0;2121:6:::1;:10;;;;:::i;:::-;2109:23;;;;;;;;:::i;:::-;;;;;;;;;;2092:11;2104:1;2092:14;;;;;;;;:::i;:::-;;;;;;;;;:40;;;;2150:11;:17;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2208:11;2190:30;;;;;;;;;;2238:5;;2039:219;2020:3;;;;;:::i;:::-;;;;1988:280;;;;1933:341;1858:416:::0;:::o;1831:101:0:-;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;1201:85::-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;1434:344:2:-;1094:13:0;:11;:13::i;:::-;1516:14:2::1;1533:11;:18;;;;1516:35;;1566:9;1561:129;1585:6;1581:1;:10;1561:129;;;1638:11;1620;1632:1;1620:14;;;;;;;;:::i;:::-;;;;;;;;;;:29;;1612:67;;;;;;;;;;;;:::i;:::-;;;;;;;;;1593:3;;;;;:::i;:::-;;;;1561:129;;;;1699:11;1716;1699:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1759:11;1743:28;;;;;;;;;;1506:272;1434:344:::0;:::o;2573:148::-;1094:13:0;:11;:13::i;:::-;2686:28:2::1;2704:9;2686:17;:28::i;:::-;2573:148:::0;:::o;2352:111::-;2410:16;2445:11;2438:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2352:111;:::o;2081:198:0:-;1094:13;:11;:13::i;:::-;2189:1:::1;2169:22;;:8;:22;;;;2161:73;;;;;;;;;;;;:::i;:::-;;;;;;;;;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;1359:130::-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2433:187::-;2506:16;2525:6;;;;;;;;;;;2506:25;;2550:8;2541:6;;:17;;;;;;;;;;;;;;;;;;2604:8;2573:40;;2594:8;2573:40;;;;;;;;;;;;2496:124;2433:187;:::o;640:96:1:-;693:7;719:10;712:17;;640:96;:::o;7:139:4:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:::-;198:5;236:6;223:20;214:29;;252:33;279:5;252:33;:::i;:::-;152:139;;;;:::o;297:329::-;356:6;405:2;393:9;384:7;380:23;376:32;373:119;;;411:79;;:::i;:::-;373:119;531:1;556:53;601:7;592:6;581:9;577:22;556:53;:::i;:::-;546:63;;502:117;297:329;;;;:::o;632:::-;691:6;740:2;728:9;719:7;715:23;711:32;708:119;;;746:79;;:::i;:::-;708:119;866:1;891:53;936:7;927:6;916:9;912:22;891:53;:::i;:::-;881:63;;837:117;632:329;;;;:::o;967:179::-;1036:10;1057:46;1099:3;1091:6;1057:46;:::i;:::-;1135:4;1130:3;1126:14;1112:28;;967:179;;;;:::o;1152:118::-;1239:24;1257:5;1239:24;:::i;:::-;1234:3;1227:37;1152:118;;:::o;1306:732::-;1425:3;1454:54;1502:5;1454:54;:::i;:::-;1524:86;1603:6;1598:3;1524:86;:::i;:::-;1517:93;;1634:56;1684:5;1634:56;:::i;:::-;1713:7;1744:1;1729:284;1754:6;1751:1;1748:13;1729:284;;;1830:6;1824:13;1857:63;1916:3;1901:13;1857:63;:::i;:::-;1850:70;;1943:60;1996:6;1943:60;:::i;:::-;1933:70;;1789:224;1776:1;1773;1769:9;1764:14;;1729:284;;;1733:14;2029:3;2022:10;;1430:608;;;1306:732;;;;:::o;2044:366::-;2186:3;2207:67;2271:2;2266:3;2207:67;:::i;:::-;2200:74;;2283:93;2372:3;2283:93;:::i;:::-;2401:2;2396:3;2392:12;2385:19;;2044:366;;;:::o;2416:::-;2558:3;2579:67;2643:2;2638:3;2579:67;:::i;:::-;2572:74;;2655:93;2744:3;2655:93;:::i;:::-;2773:2;2768:3;2764:12;2757:19;;2416:366;;;:::o;2788:::-;2930:3;2951:67;3015:2;3010:3;2951:67;:::i;:::-;2944:74;;3027:93;3116:3;3027:93;:::i;:::-;3145:2;3140:3;3136:12;3129:19;;2788:366;;;:::o;3160:108::-;3237:24;3255:5;3237:24;:::i;:::-;3232:3;3225:37;3160:108;;:::o;3274:222::-;3367:4;3405:2;3394:9;3390:18;3382:26;;3418:71;3486:1;3475:9;3471:17;3462:6;3418:71;:::i;:::-;3274:222;;;;:::o;3502:373::-;3645:4;3683:2;3672:9;3668:18;3660:26;;3732:9;3726:4;3722:20;3718:1;3707:9;3703:17;3696:47;3760:108;3863:4;3854:6;3760:108;:::i;:::-;3752:116;;3502:373;;;;:::o;3881:419::-;4047:4;4085:2;4074:9;4070:18;4062:26;;4134:9;4128:4;4124:20;4120:1;4109:9;4105:17;4098:47;4162:131;4288:4;4162:131;:::i;:::-;4154:139;;3881:419;;;:::o;4306:::-;4472:4;4510:2;4499:9;4495:18;4487:26;;4559:9;4553:4;4549:20;4545:1;4534:9;4530:17;4523:47;4587:131;4713:4;4587:131;:::i;:::-;4579:139;;4306:419;;;:::o;4731:::-;4897:4;4935:2;4924:9;4920:18;4912:26;;4984:9;4978:4;4974:20;4970:1;4959:9;4955:17;4948:47;5012:131;5138:4;5012:131;:::i;:::-;5004:139;;4731:419;;;:::o;5237:132::-;5304:4;5327:3;5319:11;;5357:4;5352:3;5348:14;5340:22;;5237:132;;;:::o;5375:114::-;5442:6;5476:5;5470:12;5460:22;;5375:114;;;:::o;5495:113::-;5565:4;5597;5592:3;5588:14;5580:22;;5495:113;;;:::o;5614:184::-;5713:11;5747:6;5742:3;5735:19;5787:4;5782:3;5778:14;5763:29;;5614:184;;;;:::o;5804:169::-;5888:11;5922:6;5917:3;5910:19;5962:4;5957:3;5953:14;5938:29;;5804:169;;;;:::o;5979:191::-;6019:4;6039:20;6057:1;6039:20;:::i;:::-;6034:25;;6073:20;6091:1;6073:20;:::i;:::-;6068:25;;6112:1;6109;6106:8;6103:34;;;6117:18;;:::i;:::-;6103:34;6162:1;6159;6155:9;6147:17;;5979:191;;;;:::o;6176:96::-;6213:7;6242:24;6260:5;6242:24;:::i;:::-;6231:35;;6176:96;;;:::o;6278:126::-;6315:7;6355:42;6348:5;6344:54;6333:65;;6278:126;;;:::o;6410:77::-;6447:7;6476:5;6465:16;;6410:77;;;:::o;6493:233::-;6532:3;6555:24;6573:5;6555:24;:::i;:::-;6546:33;;6601:66;6594:5;6591:77;6588:103;;;6671:18;;:::i;:::-;6588:103;6718:1;6711:5;6707:13;6700:20;;6493:233;;;:::o;6732:180::-;6780:77;6777:1;6770:88;6877:4;6874:1;6867:15;6901:4;6898:1;6891:15;6918:180;6966:77;6963:1;6956:88;7063:4;7060:1;7053:15;7087:4;7084:1;7077:15;7104:180;7152:77;7149:1;7142:88;7249:4;7246:1;7239:15;7273:4;7270:1;7263:15;7413:117;7522:1;7519;7512:12;7536:225;7676:34;7672:1;7664:6;7660:14;7653:58;7745:8;7740:2;7732:6;7728:15;7721:33;7536:225;:::o;7767:175::-;7907:27;7903:1;7895:6;7891:14;7884:51;7767:175;:::o;7948:182::-;8088:34;8084:1;8076:6;8072:14;8065:58;7948:182;:::o;8136:122::-;8209:24;8227:5;8209:24;:::i;:::-;8202:5;8199:35;8189:63;;8248:1;8245;8238:12;8189:63;8136:122;:::o;8264:::-;8337:24;8355:5;8337:24;:::i;:::-;8330:5;8327:35;8317:63;;8376:1;8373;8366:12;8317:63;8264:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "528800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"addClaimTopic(uint256)": "infinite",
								"getClaimTopics()": "infinite",
								"owner()": "2567",
								"removeClaimTopic(uint256)": "infinite",
								"renounceOwnership()": "30421",
								"transferOwnership(address)": "30813",
								"transferOwnershipOnClaimTopicsRegistryContract(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH",
									"source": 2,
									"value": "40"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "CALLVALUE",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "ISZERO",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 965,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 955,
									"end": 967,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 954,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMP",
									"source": 0,
									"value": "[in]"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 936,
									"end": 968,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 640,
									"end": 736,
									"name": "tag",
									"source": 1,
									"value": "6"
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 693,
									"end": 700,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 719,
									"end": 729,
									"name": "CALLER",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 712,
									"end": 729,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 640,
									"end": 736,
									"name": "JUMP",
									"source": 1,
									"value": "[out]"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2522,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "DIV",
									"source": 0
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2525,
									"end": 2531,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2506,
									"end": 2531,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2550,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 2541,
									"end": 2547,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 2541,
									"end": 2558,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2604,
									"end": 2612,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2594,
									"end": 2602,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 2573,
									"end": 2613,
									"name": "LOG3",
									"source": 0
								},
								{
									"begin": 2496,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 2433,
									"end": 2620,
									"name": "JUMP",
									"source": 0,
									"value": "[out]"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "tag",
									"source": 2,
									"value": "8"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 1220,
									"end": 2723,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ce47770912132af57539a4645144038495cec354ca6796b6e131e0dcea7b348064736f6c63430008070033",
									".code": [
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "C7B22551"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "C7B22551"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "D5144472"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "DF09D604"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "F2FDE38B"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "8297846"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "715018A6"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "8DA5CB5B"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1220,
											"end": 2723,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "26"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "25"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "24"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "STOP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "28"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "33"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "32"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "36"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1943,
											"end": 1957,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 1971,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1960,
											"end": 1978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1978,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1943,
											"end": 1978,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1993,
											"end": 2002,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "tag",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2012,
											"end": 2018,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2009,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2008,
											"end": 2018,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2061,
											"end": 2072,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2054,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2055,
											"end": 2056,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "43"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2057,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2043,
											"end": 2072,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2258,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2258,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2039,
											"end": 2258,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2120,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2127,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "tag",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 2121,
											"end": 2131,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "tag",
											"source": 2,
											"value": "50"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "tag",
											"source": 2,
											"value": "49"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2109,
											"end": 2132,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2103,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2104,
											"end": 2105,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "tag",
											"source": 2,
											"value": "53"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "tag",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2106,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2132,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2132,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2132,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2092,
											"end": 2132,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2161,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "57"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "56"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "tag",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2150,
											"end": 2167,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 2208,
											"end": 2219,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "B1381093C776453C1BBE54FD68BE1B235C65DB61D099CB50D194B2991E0EEC5"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2190,
											"end": 2220,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2039,
											"end": 2258,
											"name": "tag",
											"source": 2,
											"value": "46"
										},
										{
											"begin": 2039,
											"end": 2258,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "tag",
											"source": 2,
											"value": "59"
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2020,
											"end": 2023,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "39"
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1988,
											"end": 2268,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1933,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1858,
											"end": 2274,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1922,
											"end": 1923,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1895,
											"end": 1913,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "tag",
											"source": 0,
											"value": "64"
										},
										{
											"begin": 1895,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1831,
											"end": 1932,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1247,
											"end": 1254,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1273,
											"end": 1279,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1266,
											"end": 1279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1201,
											"end": 1286,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1516,
											"end": 1530,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1533,
											"end": 1544,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1533,
											"end": 1551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1551,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1516,
											"end": 1551,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1566,
											"end": 1575,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1585,
											"end": 1591,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1582,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1581,
											"end": 1591,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1638,
											"end": 1649,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1631,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1632,
											"end": 1633,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "tag",
											"source": 2,
											"value": "74"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "tag",
											"source": 2,
											"value": "73"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1634,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 1620,
											"end": 1649,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "78"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "tag",
											"source": 2,
											"value": "77"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "tag",
											"source": 2,
											"value": "76"
										},
										{
											"begin": 1612,
											"end": 1679,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1593,
											"end": 1596,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "70"
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "tag",
											"source": 2,
											"value": "71"
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1561,
											"end": 1690,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1710,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1716,
											"end": 1727,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1699,
											"end": 1728,
											"name": "SSTORE",
											"source": 2
										},
										{
											"begin": 1759,
											"end": 1770,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "1C928B7F7ADE2949E92366AA9454DBEF3A416B731CF6EC786BA9595BBD814D6"
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1743,
											"end": 1771,
											"name": "LOG2",
											"source": 2
										},
										{
											"begin": 1506,
											"end": 1778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1434,
											"end": 1778,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "tag",
											"source": 2,
											"value": "27"
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2704,
											"end": 2713,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2686,
											"end": 2703,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "34"
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "JUMP",
											"source": 2,
											"value": "[in]"
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 2686,
											"end": 2714,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2573,
											"end": 2721,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "tag",
											"source": 2,
											"value": "29"
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2410,
											"end": 2426,
											"name": "PUSH",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 2445,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MUL",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "KECCAK256",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SLOAD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2438,
											"end": 2456,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 2352,
											"end": 2463,
											"name": "JUMP",
											"source": 2,
											"value": "[out]"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "tag",
											"source": 0,
											"value": "34"
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1105,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "tag",
											"source": 0,
											"value": "89"
										},
										{
											"begin": 1094,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2189,
											"end": 2190,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2177,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 2169,
											"end": 2191,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "tag",
											"source": 0,
											"value": "91"
										},
										{
											"begin": 2161,
											"end": 2234,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2263,
											"end": 2271,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2244,
											"end": 2262,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "tag",
											"source": 0,
											"value": "94"
										},
										{
											"begin": 2244,
											"end": 2272,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2081,
											"end": 2279,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "tag",
											"source": 0,
											"value": "37"
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1433,
											"end": 1443,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "97"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "tag",
											"source": 0,
											"value": "96"
										},
										{
											"begin": 1433,
											"end": 1445,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1422,
											"end": 1427,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "tag",
											"source": 0,
											"value": "98"
										},
										{
											"begin": 1422,
											"end": 1429,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1422,
											"end": 1445,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "8C379A000000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "101"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "tag",
											"source": 0,
											"value": "99"
										},
										{
											"begin": 1414,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1359,
											"end": 1489,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "tag",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2522,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2525,
											"end": 2531,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2506,
											"end": 2531,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2550,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2541,
											"end": 2547,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "MUL",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 2541,
											"end": 2558,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2604,
											"end": 2612,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2594,
											"end": 2602,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 2573,
											"end": 2613,
											"name": "LOG3",
											"source": 0
										},
										{
											"begin": 2496,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 2433,
											"end": 2620,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "tag",
											"source": 1,
											"value": "97"
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 693,
											"end": 700,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 719,
											"end": 729,
											"name": "CALLER",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 712,
											"end": 729,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 640,
											"end": 736,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 4,
											"value": "107"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "tag",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 198,
											"end": 203,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 236,
											"end": 242,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 223,
											"end": 243,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 214,
											"end": 243,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 279,
											"end": 284,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 252,
											"end": 285,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "tag",
											"source": 4,
											"value": "111"
										},
										{
											"begin": 252,
											"end": 285,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 152,
											"end": 291,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 356,
											"end": 362,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 405,
											"end": 407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 393,
											"end": 402,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 384,
											"end": 391,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 380,
											"end": 403,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 376,
											"end": 408,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "tag",
											"source": 4,
											"value": "115"
										},
										{
											"begin": 411,
											"end": 490,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 373,
											"end": 492,
											"name": "tag",
											"source": 4,
											"value": "114"
										},
										{
											"begin": 373,
											"end": 492,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 531,
											"end": 532,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 601,
											"end": 608,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 592,
											"end": 598,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 581,
											"end": 590,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 577,
											"end": 599,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 556,
											"end": 609,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "105"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "tag",
											"source": 4,
											"value": "117"
										},
										{
											"begin": 556,
											"end": 609,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 546,
											"end": 609,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 502,
											"end": 619,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 297,
											"end": 626,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 691,
											"end": 697,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 740,
											"end": 742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 728,
											"end": 737,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 719,
											"end": 726,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 715,
											"end": 738,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 711,
											"end": 743,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "tag",
											"source": 4,
											"value": "120"
										},
										{
											"begin": 746,
											"end": 825,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 708,
											"end": 827,
											"name": "tag",
											"source": 4,
											"value": "119"
										},
										{
											"begin": 708,
											"end": 827,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 866,
											"end": 867,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 936,
											"end": 943,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 927,
											"end": 933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 916,
											"end": 925,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 912,
											"end": 934,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 891,
											"end": 944,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "109"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "tag",
											"source": 4,
											"value": "121"
										},
										{
											"begin": 891,
											"end": 944,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 881,
											"end": 944,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 837,
											"end": 954,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 632,
											"end": 961,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "tag",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1036,
											"end": 1046,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1057,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1099,
											"end": 1102,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1091,
											"end": 1097,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1057,
											"end": 1103,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 1057,
											"end": 1103,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1057,
											"end": 1103,
											"name": "tag",
											"source": 4,
											"value": "124"
										},
										{
											"begin": 1057,
											"end": 1103,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1135,
											"end": 1139,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1130,
											"end": 1133,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1126,
											"end": 1140,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1112,
											"end": 1140,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 967,
											"end": 1146,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1152,
											"end": 1270,
											"name": "tag",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 1152,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1257,
											"end": 1262,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1263,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 1239,
											"end": 1263,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1239,
											"end": 1263,
											"name": "tag",
											"source": 4,
											"value": "128"
										},
										{
											"begin": 1239,
											"end": 1263,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1234,
											"end": 1237,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1227,
											"end": 1264,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1152,
											"end": 1270,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "tag",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1425,
											"end": 1428,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1454,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1502,
											"end": 1507,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1454,
											"end": 1508,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 1454,
											"end": 1508,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1454,
											"end": 1508,
											"name": "tag",
											"source": 4,
											"value": "132"
										},
										{
											"begin": 1454,
											"end": 1508,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1603,
											"end": 1609,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1598,
											"end": 1601,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1524,
											"end": 1610,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 1524,
											"end": 1610,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1524,
											"end": 1610,
											"name": "tag",
											"source": 4,
											"value": "134"
										},
										{
											"begin": 1524,
											"end": 1610,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1610,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 1517,
											"end": 1610,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1684,
											"end": 1689,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1634,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 1634,
											"end": 1690,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1634,
											"end": 1690,
											"name": "tag",
											"source": 4,
											"value": "136"
										},
										{
											"begin": 1634,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1713,
											"end": 1720,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1744,
											"end": 1745,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1754,
											"end": 1760,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1751,
											"end": 1752,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1748,
											"end": 1761,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1830,
											"end": 1836,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1824,
											"end": 1837,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1916,
											"end": 1919,
											"name": "DUP9",
											"source": 4
										},
										{
											"begin": 1901,
											"end": 1914,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1857,
											"end": 1920,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "122"
										},
										{
											"begin": 1857,
											"end": 1920,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1857,
											"end": 1920,
											"name": "tag",
											"source": 4,
											"value": "141"
										},
										{
											"begin": 1857,
											"end": 1920,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1920,
											"name": "SWAP8",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1920,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1996,
											"end": 2002,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2003,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 1943,
											"end": 2003,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 1943,
											"end": 2003,
											"name": "tag",
											"source": 4,
											"value": "142"
										},
										{
											"begin": 1943,
											"end": 2003,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1933,
											"end": 2003,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1789,
											"end": 2013,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1776,
											"end": 1777,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 1773,
											"end": 1774,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1769,
											"end": 1778,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1778,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1764,
											"end": 1778,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "138"
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "tag",
											"source": 4,
											"value": "140"
										},
										{
											"begin": 1729,
											"end": 2013,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1733,
											"end": 1747,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2032,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "SWAP4",
											"source": 4
										},
										{
											"begin": 2022,
											"end": 2032,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1430,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1306,
											"end": 2038,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "tag",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2189,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2207,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2271,
											"end": 2273,
											"name": "PUSH",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2266,
											"end": 2269,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2207,
											"end": 2274,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2207,
											"end": 2274,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2207,
											"end": 2274,
											"name": "tag",
											"source": 4,
											"value": "146"
										},
										{
											"begin": 2207,
											"end": 2274,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2274,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2200,
											"end": 2274,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2372,
											"end": 2375,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2283,
											"end": 2376,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 2283,
											"end": 2376,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2283,
											"end": 2376,
											"name": "tag",
											"source": 4,
											"value": "148"
										},
										{
											"begin": 2283,
											"end": 2376,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2401,
											"end": 2403,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2396,
											"end": 2399,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2392,
											"end": 2404,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2385,
											"end": 2404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2044,
											"end": 2410,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "tag",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2558,
											"end": 2561,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2643,
											"end": 2645,
											"name": "PUSH",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 2638,
											"end": 2641,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "tag",
											"source": 4,
											"value": "152"
										},
										{
											"begin": 2579,
											"end": 2646,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2646,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2572,
											"end": 2646,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2744,
											"end": 2747,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "tag",
											"source": 4,
											"value": "153"
										},
										{
											"begin": 2655,
											"end": 2748,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2773,
											"end": 2775,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2768,
											"end": 2771,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2764,
											"end": 2776,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2776,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2757,
											"end": 2776,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2416,
											"end": 2782,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "tag",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2930,
											"end": 2933,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2951,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 3015,
											"end": 3017,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3010,
											"end": 3013,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2951,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 2951,
											"end": 3018,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 2951,
											"end": 3018,
											"name": "tag",
											"source": 4,
											"value": "157"
										},
										{
											"begin": 2951,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3018,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2944,
											"end": 3018,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3116,
											"end": 3119,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3027,
											"end": 3120,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 3027,
											"end": 3120,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3027,
											"end": 3120,
											"name": "tag",
											"source": 4,
											"value": "158"
										},
										{
											"begin": 3027,
											"end": 3120,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3145,
											"end": 3147,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3140,
											"end": 3143,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3136,
											"end": 3148,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3148,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3129,
											"end": 3148,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2788,
											"end": 3154,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3160,
											"end": 3268,
											"name": "tag",
											"source": 4,
											"value": "125"
										},
										{
											"begin": 3160,
											"end": 3268,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3255,
											"end": 3260,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3237,
											"end": 3261,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 3237,
											"end": 3261,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3237,
											"end": 3261,
											"name": "tag",
											"source": 4,
											"value": "161"
										},
										{
											"begin": 3237,
											"end": 3261,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3232,
											"end": 3235,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3225,
											"end": 3262,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3268,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3160,
											"end": 3268,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3367,
											"end": 3371,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3407,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3394,
											"end": 3403,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3390,
											"end": 3408,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3382,
											"end": 3408,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3486,
											"end": 3487,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3475,
											"end": 3484,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3471,
											"end": 3488,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3462,
											"end": 3468,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3418,
											"end": 3489,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "126"
										},
										{
											"begin": 3418,
											"end": 3489,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3418,
											"end": 3489,
											"name": "tag",
											"source": 4,
											"value": "164"
										},
										{
											"begin": 3418,
											"end": 3489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3274,
											"end": 3496,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3645,
											"end": 3649,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3683,
											"end": 3685,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 3672,
											"end": 3681,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3668,
											"end": 3686,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3660,
											"end": 3686,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3732,
											"end": 3741,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3726,
											"end": 3730,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3742,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3718,
											"end": 3719,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3707,
											"end": 3716,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 3703,
											"end": 3720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3696,
											"end": 3743,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3863,
											"end": 3867,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3854,
											"end": 3860,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3760,
											"end": 3868,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "130"
										},
										{
											"begin": 3760,
											"end": 3868,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 3760,
											"end": 3868,
											"name": "tag",
											"source": 4,
											"value": "166"
										},
										{
											"begin": 3760,
											"end": 3868,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3868,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3752,
											"end": 3868,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3502,
											"end": 3875,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "tag",
											"source": 4,
											"value": "93"
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4047,
											"end": 4051,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4085,
											"end": 4087,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4074,
											"end": 4083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4070,
											"end": 4088,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4062,
											"end": 4088,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4134,
											"end": 4143,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4128,
											"end": 4132,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4124,
											"end": 4144,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4120,
											"end": 4121,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4109,
											"end": 4118,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4105,
											"end": 4122,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4098,
											"end": 4145,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4288,
											"end": 4292,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4162,
											"end": 4293,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "144"
										},
										{
											"begin": 4162,
											"end": 4293,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4162,
											"end": 4293,
											"name": "tag",
											"source": 4,
											"value": "168"
										},
										{
											"begin": 4162,
											"end": 4293,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4293,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4154,
											"end": 4293,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3881,
											"end": 4300,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "tag",
											"source": 4,
											"value": "78"
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4472,
											"end": 4476,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4510,
											"end": 4512,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4499,
											"end": 4508,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4495,
											"end": 4513,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4487,
											"end": 4513,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4559,
											"end": 4568,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4553,
											"end": 4557,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4549,
											"end": 4569,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4545,
											"end": 4546,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4534,
											"end": 4543,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4530,
											"end": 4547,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4523,
											"end": 4570,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4713,
											"end": 4717,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4587,
											"end": 4718,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "150"
										},
										{
											"begin": 4587,
											"end": 4718,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 4587,
											"end": 4718,
											"name": "tag",
											"source": 4,
											"value": "170"
										},
										{
											"begin": 4587,
											"end": 4718,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4718,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4579,
											"end": 4718,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4306,
											"end": 4725,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "tag",
											"source": 4,
											"value": "101"
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 4897,
											"end": 4901,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4935,
											"end": 4937,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 4924,
											"end": 4933,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 4920,
											"end": 4938,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4938,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4912,
											"end": 4938,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4984,
											"end": 4993,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4978,
											"end": 4982,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 4974,
											"end": 4994,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 4970,
											"end": 4971,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 4968,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 4955,
											"end": 4972,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 4948,
											"end": 4995,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5138,
											"end": 5142,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5012,
											"end": 5143,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "155"
										},
										{
											"begin": 5012,
											"end": 5143,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 5012,
											"end": 5143,
											"name": "tag",
											"source": 4,
											"value": "172"
										},
										{
											"begin": 5012,
											"end": 5143,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5143,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5004,
											"end": 5143,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 4731,
											"end": 5150,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "tag",
											"source": 4,
											"value": "137"
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5304,
											"end": 5308,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5327,
											"end": 5330,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5330,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5319,
											"end": 5330,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5357,
											"end": 5361,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5355,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5348,
											"end": 5362,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5362,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5340,
											"end": 5362,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5237,
											"end": 5369,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "tag",
											"source": 4,
											"value": "133"
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5442,
											"end": 5448,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5476,
											"end": 5481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 5470,
											"end": 5482,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5460,
											"end": 5482,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5375,
											"end": 5489,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "tag",
											"source": 4,
											"value": "143"
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5565,
											"end": 5569,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5597,
											"end": 5601,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5592,
											"end": 5595,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5588,
											"end": 5602,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5602,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5580,
											"end": 5602,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5495,
											"end": 5608,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "tag",
											"source": 4,
											"value": "135"
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5713,
											"end": 5724,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5747,
											"end": 5753,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5742,
											"end": 5745,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5735,
											"end": 5754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5787,
											"end": 5791,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5782,
											"end": 5785,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5778,
											"end": 5792,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5763,
											"end": 5792,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5614,
											"end": 5798,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "tag",
											"source": 4,
											"value": "147"
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 5888,
											"end": 5899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 5922,
											"end": 5928,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5917,
											"end": 5920,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5910,
											"end": 5929,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 5962,
											"end": 5966,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 5957,
											"end": 5960,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 5953,
											"end": 5967,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5967,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 5938,
											"end": 5967,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5804,
											"end": 5973,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6019,
											"end": 6023,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6039,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6057,
											"end": 6058,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6039,
											"end": 6059,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6039,
											"end": 6059,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6039,
											"end": 6059,
											"name": "tag",
											"source": 4,
											"value": "181"
										},
										{
											"begin": 6039,
											"end": 6059,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6059,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6034,
											"end": 6059,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6091,
											"end": 6092,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 6073,
											"end": 6093,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6073,
											"end": 6093,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6073,
											"end": 6093,
											"name": "tag",
											"source": 4,
											"value": "182"
										},
										{
											"begin": 6073,
											"end": 6093,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6093,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 6068,
											"end": 6093,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6112,
											"end": 6113,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6109,
											"end": 6110,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6106,
											"end": 6114,
											"name": "LT",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "tag",
											"source": 4,
											"value": "184"
										},
										{
											"begin": 6117,
											"end": 6135,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "tag",
											"source": 4,
											"value": "183"
										},
										{
											"begin": 6103,
											"end": 6137,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6162,
											"end": 6163,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6159,
											"end": 6160,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6155,
											"end": 6164,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6164,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6147,
											"end": 6164,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 5979,
											"end": 6170,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "tag",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6213,
											"end": 6220,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6242,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6260,
											"end": 6265,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6242,
											"end": 6266,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6242,
											"end": 6266,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6242,
											"end": 6266,
											"name": "tag",
											"source": 4,
											"value": "187"
										},
										{
											"begin": 6242,
											"end": 6266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6231,
											"end": 6266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6176,
											"end": 6272,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "tag",
											"source": 4,
											"value": "188"
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6315,
											"end": 6322,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6355,
											"end": 6397,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6348,
											"end": 6353,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6344,
											"end": 6398,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 6333,
											"end": 6398,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6333,
											"end": 6398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6278,
											"end": 6404,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "tag",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6447,
											"end": 6454,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6476,
											"end": 6481,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6481,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6465,
											"end": 6481,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6410,
											"end": 6487,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6532,
											"end": 6535,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6573,
											"end": 6578,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "tag",
											"source": 4,
											"value": "192"
										},
										{
											"begin": 6555,
											"end": 6579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6579,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6546,
											"end": 6579,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6601,
											"end": 6667,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6594,
											"end": 6599,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6591,
											"end": 6668,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 6588,
											"end": 6691,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 6588,
											"end": 6691,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6588,
											"end": 6691,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "tag",
											"source": 4,
											"value": "194"
										},
										{
											"begin": 6671,
											"end": 6689,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6588,
											"end": 6691,
											"name": "tag",
											"source": 4,
											"value": "193"
										},
										{
											"begin": 6588,
											"end": 6691,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6718,
											"end": 6719,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 6711,
											"end": 6716,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 6707,
											"end": 6720,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 6700,
											"end": 6720,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6700,
											"end": 6720,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 6493,
											"end": 6726,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 6732,
											"end": 6912,
											"name": "tag",
											"source": 4,
											"value": "185"
										},
										{
											"begin": 6732,
											"end": 6912,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6780,
											"end": 6857,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6777,
											"end": 6778,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6858,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6877,
											"end": 6881,
											"name": "PUSH",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 6874,
											"end": 6875,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 6867,
											"end": 6882,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 6901,
											"end": 6905,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 6898,
											"end": 6899,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6891,
											"end": 6906,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 6918,
											"end": 7098,
											"name": "tag",
											"source": 4,
											"value": "57"
										},
										{
											"begin": 6918,
											"end": 7098,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6966,
											"end": 7043,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 6963,
											"end": 6964,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 6956,
											"end": 7044,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7063,
											"end": 7067,
											"name": "PUSH",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 7060,
											"end": 7061,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7053,
											"end": 7068,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7087,
											"end": 7091,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7084,
											"end": 7085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7077,
											"end": 7092,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7104,
											"end": 7284,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 7104,
											"end": 7284,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7152,
											"end": 7229,
											"name": "PUSH",
											"source": 4,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7149,
											"end": 7150,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7142,
											"end": 7230,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7249,
											"end": 7253,
											"name": "PUSH",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 7246,
											"end": 7247,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 7239,
											"end": 7254,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7273,
											"end": 7277,
											"name": "PUSH",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 7270,
											"end": 7271,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7263,
											"end": 7278,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7413,
											"end": 7530,
											"name": "tag",
											"source": 4,
											"value": "116"
										},
										{
											"begin": 7413,
											"end": 7530,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7522,
											"end": 7523,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7519,
											"end": 7520,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 7512,
											"end": 7524,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7761,
											"name": "tag",
											"source": 4,
											"value": "149"
										},
										{
											"begin": 7536,
											"end": 7761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7676,
											"end": 7710,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061"
										},
										{
											"begin": 7672,
											"end": 7673,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7664,
											"end": 7670,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7660,
											"end": 7674,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7653,
											"end": 7711,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7745,
											"end": 7753,
											"name": "PUSH",
											"source": 4,
											"value": "6464726573730000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 7740,
											"end": 7742,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7728,
											"end": 7743,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7721,
											"end": 7754,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7761,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7536,
											"end": 7761,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7767,
											"end": 7942,
											"name": "tag",
											"source": 4,
											"value": "154"
										},
										{
											"begin": 7767,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 7907,
											"end": 7934,
											"name": "PUSH",
											"source": 4,
											"value": "636C61696D546F70696320616C72656164792065786973747300000000000000"
										},
										{
											"begin": 7903,
											"end": 7904,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 7895,
											"end": 7901,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 7891,
											"end": 7905,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 7884,
											"end": 7935,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7767,
											"end": 7942,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7767,
											"end": 7942,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 7948,
											"end": 8130,
											"name": "tag",
											"source": 4,
											"value": "159"
										},
										{
											"begin": 7948,
											"end": 8130,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8088,
											"end": 8122,
											"name": "PUSH",
											"source": 4,
											"value": "4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572"
										},
										{
											"begin": 8084,
											"end": 8085,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8076,
											"end": 8082,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 8072,
											"end": 8086,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 8065,
											"end": 8123,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 7948,
											"end": 8130,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7948,
											"end": 8130,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8136,
											"end": 8258,
											"name": "tag",
											"source": 4,
											"value": "108"
										},
										{
											"begin": 8136,
											"end": 8258,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8227,
											"end": 8232,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "129"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "tag",
											"source": 4,
											"value": "205"
										},
										{
											"begin": 8209,
											"end": 8233,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8202,
											"end": 8207,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8199,
											"end": 8234,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8248,
											"end": 8249,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8245,
											"end": 8246,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8238,
											"end": 8250,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "tag",
											"source": 4,
											"value": "206"
										},
										{
											"begin": 8189,
											"end": 8252,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8136,
											"end": 8258,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8136,
											"end": 8258,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										},
										{
											"begin": 8264,
											"end": 8386,
											"name": "tag",
											"source": 4,
											"value": "112"
										},
										{
											"begin": 8264,
											"end": 8386,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8355,
											"end": 8360,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8337,
											"end": 8361,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "162"
										},
										{
											"begin": 8337,
											"end": 8361,
											"name": "JUMP",
											"source": 4,
											"value": "[in]"
										},
										{
											"begin": 8337,
											"end": 8361,
											"name": "tag",
											"source": 4,
											"value": "208"
										},
										{
											"begin": 8337,
											"end": 8361,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8330,
											"end": 8335,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 8327,
											"end": 8362,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8380,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8317,
											"end": 8380,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 8376,
											"end": 8377,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 8373,
											"end": 8374,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 8366,
											"end": 8378,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 8317,
											"end": 8380,
											"name": "tag",
											"source": 4,
											"value": "209"
										},
										{
											"begin": 8317,
											"end": 8380,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8386,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 8264,
											"end": 8386,
											"name": "JUMP",
											"source": 4,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"owner()": "8da5cb5b",
							"removeClaimTopic(uint256)": "08297846",
							"renounceOwnership()": "715018a6",
							"transferOwnership(address)": "f2fde38b",
							"transferOwnershipOnClaimTopicsRegistryContract(address)": "d5144472"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnClaimTopicsRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"See {IClaimTopicsRegistry-addClaimTopic}.\"},\"getClaimTopics()\":{\"details\":\"See {IClaimTopicsRegistry-getClaimTopics}.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeClaimTopic(uint256)\":{\"details\":\"See {IClaimTopicsRegistry-removeClaimTopic}.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"transferOwnershipOnClaimTopicsRegistryContract(address)\":{\"details\":\"See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.\"}},\"stateVariables\":{\"claimTopics\":{\"details\":\"All required Claim Topics\"}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/ClaimTopicsRegistry.sol\":\"ClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"contracts/registry/ClaimTopicsRegistry.sol\":{\"keccak256\":\"0x27e1d03b60423a957fc841aa7ff0d4b1538b6f2d5f5891e21b7147f767e89fac\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://dd4d39c443fd16883ffcfe9fe19943a13ffde53de2aa5595f3c5db559fd1a9e2\",\"dweb:/ipfs/QmXA4vp4YozVQkjitT6SAgLMBLMrGyEE8SgZ3UDoUR6hMs\"]},\"contracts/registry/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x95f8fa17a716771125b203f00890eceb20ac3807f7a39a25b644427b1ff81d61\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460dceb9e88957d5ce002b80748767c80a7e146c9b38b055a3c1ca04586b2009\",\"dweb:/ipfs/QmVdqEpGMRzSpLKBCtPzaPGatBgUyNm3NS5rQnkkYMnc1C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 7,
								"contract": "contracts/registry/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "_owner",
								"offset": 0,
								"slot": "0",
								"type": "t_address"
							},
							{
								"astId": 146,
								"contract": "contracts/registry/ClaimTopicsRegistry.sol:ClaimTopicsRegistry",
								"label": "claimTopics",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)dyn_storage"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"contracts/registry/IClaimTopicsRegistry.sol": {
				"IClaimTopicsRegistry": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "claimTopic",
									"type": "uint256"
								}
							],
							"name": "ClaimTopicRemoved",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "addClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "getClaimTopics",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_claimTopic",
									"type": "uint256"
								}
							],
							"name": "removeClaimTopic",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_newOwner",
									"type": "address"
								}
							],
							"name": "transferOwnershipOnClaimTopicsRegistryContract",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {
							"addClaimTopic(uint256)": {
								"details": "Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							},
							"getClaimTopics()": {
								"details": "Get the trusted claim topics for the security token",
								"returns": {
									"_0": "Array of trusted claim topics"
								}
							},
							"removeClaimTopic(uint256)": {
								"details": "Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event",
								"params": {
									"_claimTopic": "The claim topic index"
								}
							},
							"transferOwnershipOnClaimTopicsRegistryContract(address)": {
								"details": "Transfers the Ownership of ClaimTopics to a new Owner.  Only owner can call.",
								"params": {
									"_newOwner": "The new owner of this contract."
								}
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"addClaimTopic(uint256)": "c7b22551",
							"getClaimTopics()": "df09d604",
							"removeClaimTopic(uint256)": "08297846",
							"transferOwnershipOnClaimTopicsRegistryContract(address)": "d5144472"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"claimTopic\",\"type\":\"uint256\"}],\"name\":\"ClaimTopicRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"addClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getClaimTopics\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"}],\"name\":\"removeClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnershipOnClaimTopicsRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"addClaimTopic(uint256)\":{\"details\":\"Add a trusted claim topic (For example: KYC=1, AML=2). Only owner can call. emits `ClaimTopicAdded` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"getClaimTopics()\":{\"details\":\"Get the trusted claim topics for the security token\",\"returns\":{\"_0\":\"Array of trusted claim topics\"}},\"removeClaimTopic(uint256)\":{\"details\":\"Remove a trusted claim topic (For example: KYC=1, AML=2).  Only owner can call.  emits `ClaimTopicRemoved` event\",\"params\":{\"_claimTopic\":\"The claim topic index\"}},\"transferOwnershipOnClaimTopicsRegistryContract(address)\":{\"details\":\"Transfers the Ownership of ClaimTopics to a new Owner.  Only owner can call.\",\"params\":{\"_newOwner\":\"The new owner of this contract.\"}}},\"version\":1},\"userdoc\":{\"events\":{\"ClaimTopicAdded(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry\"},\"ClaimTopicRemoved(uint256)\":{\"notice\":\"this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry\"}},\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/registry/IClaimTopicsRegistry.sol\":\"IClaimTopicsRegistry\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/registry/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x95f8fa17a716771125b203f00890eceb20ac3807f7a39a25b644427b1ff81d61\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460dceb9e88957d5ce002b80748767c80a7e146c9b38b055a3c1ca04586b2009\",\"dweb:/ipfs/QmVdqEpGMRzSpLKBCtPzaPGatBgUyNm3NS5rQnkkYMnc1C\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"events": {
							"ClaimTopicAdded(uint256)": {
								"notice": "this event is emitted when a claim topic has been added to the ClaimTopicsRegistry  the event is emitted by the 'addClaimTopic' function  `claimTopic` is the required claim added to the Claim Topics Registry"
							},
							"ClaimTopicRemoved(uint256)": {
								"notice": "this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry  the event is emitted by the 'removeClaimTopic' function  `claimTopic` is the required claim removed from the Claim Topics Registry"
							}
						},
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts/access/Ownable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
					"exportedSymbols": {
						"Context": [
							134
						],
						"Ownable": [
							112
						]
					},
					"id": 113,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "102:23:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
							"file": "../utils/Context.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 113,
							"sourceUnit": 135,
							"src": "127:30:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 4,
										"name": "Context",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 134,
										"src": "683:7:0"
									},
									"id": 5,
									"nodeType": "InheritanceSpecifier",
									"src": "683:7:0"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 3,
								"nodeType": "StructuredDocumentation",
								"src": "159:494:0",
								"text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
							},
							"fullyImplemented": true,
							"id": 112,
							"linearizedBaseContracts": [
								112,
								134
							],
							"name": "Ownable",
							"nameLocation": "672:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 7,
									"mutability": "mutable",
									"name": "_owner",
									"nameLocation": "713:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 112,
									"src": "697:22:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 6,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "697:7:0",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"anonymous": false,
									"id": 13,
									"name": "OwnershipTransferred",
									"nameLocation": "732:20:0",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 9,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousOwner",
												"nameLocation": "769:13:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "753:29:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 8,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "753:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 11,
												"indexed": true,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "800:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 13,
												"src": "784:24:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 10,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "784:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "752:57:0"
									},
									"src": "726:84:0"
								},
								{
									"body": {
										"id": 22,
										"nodeType": "Block",
										"src": "926:49:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 18,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 124,
																"src": "955:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 19,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "955:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 17,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "936:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 20,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "936:32:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 21,
												"nodeType": "ExpressionStatement",
												"src": "936:32:0"
											}
										]
									},
									"documentation": {
										"id": 14,
										"nodeType": "StructuredDocumentation",
										"src": "816:91:0",
										"text": " @dev Initializes the contract setting the deployer as the initial owner."
									},
									"id": 23,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "923:2:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "926:0:0"
									},
									"scope": 112,
									"src": "912:63:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 30,
										"nodeType": "Block",
										"src": "1084:41:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 26,
														"name": "_checkOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 54,
														"src": "1094:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 27,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1094:13:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 28,
												"nodeType": "ExpressionStatement",
												"src": "1094:13:0"
											},
											{
												"id": 29,
												"nodeType": "PlaceholderStatement",
												"src": "1117:1:0"
											}
										]
									},
									"documentation": {
										"id": 24,
										"nodeType": "StructuredDocumentation",
										"src": "981:77:0",
										"text": " @dev Throws if called by any account other than the owner."
									},
									"id": 31,
									"name": "onlyOwner",
									"nameLocation": "1072:9:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 25,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1081:2:0"
									},
									"src": "1063:62:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 39,
										"nodeType": "Block",
										"src": "1256:30:0",
										"statements": [
											{
												"expression": {
													"id": 37,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "1273:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 36,
												"id": 38,
												"nodeType": "Return",
												"src": "1266:13:0"
											}
										]
									},
									"documentation": {
										"id": 32,
										"nodeType": "StructuredDocumentation",
										"src": "1131:65:0",
										"text": " @dev Returns the address of the current owner."
									},
									"functionSelector": "8da5cb5b",
									"id": 40,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "owner",
									"nameLocation": "1210:5:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 33,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1215:2:0"
									},
									"returnParameters": {
										"id": 36,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 35,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 40,
												"src": "1247:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 34,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1247:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1246:9:0"
									},
									"scope": 112,
									"src": "1201:85:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 53,
										"nodeType": "Block",
										"src": "1404:85:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 49,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 45,
																	"name": "owner",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 40,
																	"src": "1422:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 46,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1422:7:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 47,
																	"name": "_msgSender",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 124,
																	"src": "1433:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																		"typeString": "function () view returns (address)"
																	}
																},
																"id": 48,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1433:12:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "1422:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
															"id": 50,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1447:34:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															},
															"value": "Ownable: caller is not the owner"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
																"typeString": "literal_string \"Ownable: caller is not the owner\""
															}
														],
														"id": 44,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "1414:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 51,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1414:68:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 52,
												"nodeType": "ExpressionStatement",
												"src": "1414:68:0"
											}
										]
									},
									"documentation": {
										"id": 41,
										"nodeType": "StructuredDocumentation",
										"src": "1292:62:0",
										"text": " @dev Throws if the sender is not the owner."
									},
									"id": 54,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkOwner",
									"nameLocation": "1368:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1379:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1404:0:0"
									},
									"scope": 112,
									"src": "1359:130:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 67,
										"nodeType": "Block",
										"src": "1885:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"hexValue": "30",
																	"id": 63,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1922:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 62,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1914:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 61,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1914:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 64,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "typeConversion",
															"lValueRequested": false,
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1914:10:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 60,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "1895:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 65,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1895:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 66,
												"nodeType": "ExpressionStatement",
												"src": "1895:30:0"
											}
										]
									},
									"documentation": {
										"id": 55,
										"nodeType": "StructuredDocumentation",
										"src": "1495:331:0",
										"text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
									},
									"functionSelector": "715018a6",
									"id": 68,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 58,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 57,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1875:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1875:9:0"
										}
									],
									"name": "renounceOwnership",
									"nameLocation": "1840:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 56,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1857:2:0"
									},
									"returnParameters": {
										"id": 59,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1885:0:0"
									},
									"scope": 112,
									"src": "1831:101:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "2151:128:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 77,
																"name": "newOwner",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 71,
																"src": "2169:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 80,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2189:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "2181:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 78,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "2181:7:0",
																		"typeDescriptions": {}
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2181:10:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "2169:22:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
															"id": 83,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2193:40:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															},
															"value": "Ownable: new owner is the zero address"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
																"typeString": "literal_string \"Ownable: new owner is the zero address\""
															}
														],
														"id": 76,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2161:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 84,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2161:73:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 85,
												"nodeType": "ExpressionStatement",
												"src": "2161:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 87,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 71,
															"src": "2263:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 86,
														"name": "_transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 111,
														"src": "2244:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2244:28:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 89,
												"nodeType": "ExpressionStatement",
												"src": "2244:28:0"
											}
										]
									},
									"documentation": {
										"id": 69,
										"nodeType": "StructuredDocumentation",
										"src": "1938:138:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
									},
									"functionSelector": "f2fde38b",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 74,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 73,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2141:9:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "2141:9:0"
										}
									],
									"name": "transferOwnership",
									"nameLocation": "2090:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 72,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 71,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2116:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "2108:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 70,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2108:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2107:18:0"
									},
									"returnParameters": {
										"id": 75,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2151:0:0"
									},
									"scope": 112,
									"src": "2081:198:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "2496:124:0",
										"statements": [
											{
												"assignments": [
													98
												],
												"declarations": [
													{
														"constant": false,
														"id": 98,
														"mutability": "mutable",
														"name": "oldOwner",
														"nameLocation": "2514:8:0",
														"nodeType": "VariableDeclaration",
														"scope": 110,
														"src": "2506:16:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 97,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "2506:7:0",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 100,
												"initialValue": {
													"id": 99,
													"name": "_owner",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 7,
													"src": "2525:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2506:25:0"
											},
											{
												"expression": {
													"id": 103,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 101,
														"name": "_owner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "2541:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 102,
														"name": "newOwner",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "2550:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2541:17:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 104,
												"nodeType": "ExpressionStatement",
												"src": "2541:17:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 106,
															"name": "oldOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 98,
															"src": "2594:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 107,
															"name": "newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 94,
															"src": "2604:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 105,
														"name": "OwnershipTransferred",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 13,
														"src": "2573:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2573:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 109,
												"nodeType": "EmitStatement",
												"src": "2568:45:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "2285:143:0",
										"text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
									},
									"id": 111,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_transferOwnership",
									"nameLocation": "2442:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 95,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "newOwner",
												"nameLocation": "2469:8:0",
												"nodeType": "VariableDeclaration",
												"scope": 111,
												"src": "2461:16:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 93,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2461:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2460:18:0"
									},
									"returnParameters": {
										"id": 96,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2496:0:0"
									},
									"scope": 112,
									"src": "2433:187:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 113,
							"src": "654:1968:0",
							"usedErrors": []
						}
					],
					"src": "102:2521:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Context.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Context.sol",
					"exportedSymbols": {
						"Context": [
							134
						]
					},
					"id": 135,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 114,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "86:23:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 115,
								"nodeType": "StructuredDocumentation",
								"src": "111:496:1",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 134,
							"linearizedBaseContracts": [
								134
							],
							"name": "Context",
							"nameLocation": "626:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 123,
										"nodeType": "Block",
										"src": "702:34:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 120,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "719:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 121,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "719:10:1",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 119,
												"id": 122,
												"nodeType": "Return",
												"src": "712:17:1"
											}
										]
									},
									"id": 124,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "649:10:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 116,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "659:2:1"
									},
									"returnParameters": {
										"id": 119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 124,
												"src": "693:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "692:9:1"
									},
									"scope": 134,
									"src": "640:96:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 132,
										"nodeType": "Block",
										"src": "809:32:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 129,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "826:3:1",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 130,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "826:8:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 128,
												"id": 131,
												"nodeType": "Return",
												"src": "819:15:1"
											}
										]
									},
									"id": 133,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "751:8:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "759:2:1"
									},
									"returnParameters": {
										"id": 128,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 127,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 133,
												"src": "793:14:1",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 126,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "793:5:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "792:16:1"
									},
									"scope": 134,
									"src": "742:99:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 135,
							"src": "608:235:1",
							"usedErrors": []
						}
					],
					"src": "86:758:1"
				},
				"id": 1
			},
			"contracts/registry/ClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/ClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"ClaimTopicsRegistry": [
							272
						],
						"Context": [
							134
						],
						"IClaimTopicsRegistry": [
							310
						],
						"Ownable": [
							112
						]
					},
					"id": 273,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 136,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1093:23:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/Ownable.sol",
							"file": "@openzeppelin/contracts/access/Ownable.sol",
							"id": 137,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 113,
							"src": "1118:52:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "contracts/registry/IClaimTopicsRegistry.sol",
							"file": "../registry/IClaimTopicsRegistry.sol",
							"id": 138,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 273,
							"sourceUnit": 311,
							"src": "1172:46:2",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 139,
										"name": "IClaimTopicsRegistry",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 310,
										"src": "1252:20:2"
									},
									"id": 140,
									"nodeType": "InheritanceSpecifier",
									"src": "1252:20:2"
								},
								{
									"baseName": {
										"id": 141,
										"name": "Ownable",
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 112,
										"src": "1274:7:2"
									},
									"id": 142,
									"nodeType": "InheritanceSpecifier",
									"src": "1274:7:2"
								}
							],
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 272,
							"linearizedBaseContracts": [
								272,
								112,
								134,
								310
							],
							"name": "ClaimTopicsRegistry",
							"nameLocation": "1229:19:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 143,
										"nodeType": "StructuredDocumentation",
										"src": "1288:34:2",
										"text": "@dev All required Claim Topics"
									},
									"id": 146,
									"mutability": "mutable",
									"name": "claimTopics",
									"nameLocation": "1345:11:2",
									"nodeType": "VariableDeclaration",
									"scope": 272,
									"src": "1327:29:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
										"typeString": "uint256[]"
									},
									"typeName": {
										"baseType": {
											"id": 144,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1327:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 145,
										"nodeType": "ArrayTypeName",
										"src": "1327:9:2",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
											"typeString": "uint256[]"
										}
									},
									"visibility": "private"
								},
								{
									"baseFunctions": [
										290
									],
									"body": {
										"id": 191,
										"nodeType": "Block",
										"src": "1506:272:2",
										"statements": [
											{
												"assignments": [
													156
												],
												"declarations": [
													{
														"constant": false,
														"id": 156,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1524:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 191,
														"src": "1516:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 155,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1516:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 159,
												"initialValue": {
													"expression": {
														"id": 157,
														"name": "claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1533:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1533:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1516:35:2"
											},
											{
												"body": {
													"id": 179,
													"nodeType": "Block",
													"src": "1598:92:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 175,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"id": 171,
																				"name": "claimTopics",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 146,
																				"src": "1620:11:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																					"typeString": "uint256[] storage ref"
																				}
																			},
																			"id": 173,
																			"indexExpression": {
																				"id": 172,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 161,
																				"src": "1632:1:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "1620:14:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"id": 174,
																			"name": "_claimTopic",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 149,
																			"src": "1638:11:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1620:29:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "636c61696d546f70696320616c726561647920657869737473",
																		"id": 176,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1651:27:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																			"typeString": "literal_string \"claimTopic already exists\""
																		},
																		"value": "claimTopic already exists"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_970f7c3b9fa3869fb7d4b0e156059d6adbba348c21521bbe3230639fa95756e7",
																			"typeString": "literal_string \"claimTopic already exists\""
																		}
																	],
																	"id": 170,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "1612:7:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 177,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1612:67:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 178,
															"nodeType": "ExpressionStatement",
															"src": "1612:67:2"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 164,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 161,
														"src": "1581:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 165,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 156,
														"src": "1585:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1581:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 180,
												"initializationExpression": {
													"assignments": [
														161
													],
													"declarations": [
														{
															"constant": false,
															"id": 161,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "1574:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 180,
															"src": "1566:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 160,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1566:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 163,
													"initialValue": {
														"hexValue": "30",
														"id": 162,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1578:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1566:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 168,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "1593:3:2",
														"subExpression": {
															"id": 167,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 161,
															"src": "1593:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 169,
													"nodeType": "ExpressionStatement",
													"src": "1593:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1561:129:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 184,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1716:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 181,
															"name": "claimTopics",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 146,
															"src": "1699:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 183,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "1699:16:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1699:29:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 186,
												"nodeType": "ExpressionStatement",
												"src": "1699:29:2"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 188,
															"name": "_claimTopic",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 149,
															"src": "1759:11:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 187,
														"name": "ClaimTopicAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 279,
														"src": "1743:15:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1743:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 190,
												"nodeType": "EmitStatement",
												"src": "1738:33:2"
											}
										]
									},
									"documentation": {
										"id": 147,
										"nodeType": "StructuredDocumentation",
										"src": "1363:66:2",
										"text": "  @dev See {IClaimTopicsRegistry-addClaimTopic}."
									},
									"functionSelector": "c7b22551",
									"id": 192,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 153,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 152,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1496:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1496:9:2"
										}
									],
									"name": "addClaimTopic",
									"nameLocation": "1443:13:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 151,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1487:8:2"
									},
									"parameters": {
										"id": 150,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 149,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1465:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 192,
												"src": "1457:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 148,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1457:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1456:21:2"
									},
									"returnParameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1506:0:2"
									},
									"scope": 272,
									"src": "1434:344:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										296
									],
									"body": {
										"id": 245,
										"nodeType": "Block",
										"src": "1933:341:2",
										"statements": [
											{
												"assignments": [
													202
												],
												"declarations": [
													{
														"constant": false,
														"id": 202,
														"mutability": "mutable",
														"name": "length",
														"nameLocation": "1951:6:2",
														"nodeType": "VariableDeclaration",
														"scope": 245,
														"src": "1943:14:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 201,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "1943:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 205,
												"initialValue": {
													"expression": {
														"id": 203,
														"name": "claimTopics",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 146,
														"src": "1960:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
															"typeString": "uint256[] storage ref"
														}
													},
													"id": 204,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "1960:18:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1943:35:2"
											},
											{
												"body": {
													"id": 243,
													"nodeType": "Block",
													"src": "2025:243:2",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"baseExpression": {
																		"id": 216,
																		"name": "claimTopics",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 146,
																		"src": "2043:11:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 218,
																	"indexExpression": {
																		"id": 217,
																		"name": "i",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 207,
																		"src": "2055:1:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2043:14:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "==",
																"rightExpression": {
																	"id": 219,
																	"name": "_claimTopic",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 195,
																	"src": "2061:11:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "2043:29:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 242,
															"nodeType": "IfStatement",
															"src": "2039:219:2",
															"trueBody": {
																"id": 241,
																"nodeType": "Block",
																"src": "2074:184:2",
																"statements": [
																	{
																		"expression": {
																			"id": 229,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"baseExpression": {
																					"id": 221,
																					"name": "claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "2092:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 223,
																				"indexExpression": {
																					"id": 222,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 207,
																					"src": "2104:1:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"nodeType": "IndexAccess",
																				"src": "2092:14:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"baseExpression": {
																					"id": 224,
																					"name": "claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "2109:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 228,
																				"indexExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 227,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 225,
																						"name": "length",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 202,
																						"src": "2121:6:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "-",
																					"rightExpression": {
																						"hexValue": "31",
																						"id": 226,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": true,
																						"kind": "number",
																						"lValueRequested": false,
																						"nodeType": "Literal",
																						"src": "2130:1:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_rational_1_by_1",
																							"typeString": "int_const 1"
																						},
																						"value": "1"
																					},
																					"src": "2121:10:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "2109:23:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "2092:40:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 230,
																		"nodeType": "ExpressionStatement",
																		"src": "2092:40:2"
																	},
																	{
																		"expression": {
																			"arguments": [],
																			"expression": {
																				"argumentTypes": [],
																				"expression": {
																					"id": 231,
																					"name": "claimTopics",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 146,
																					"src": "2150:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 233,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberName": "pop",
																				"nodeType": "MemberAccess",
																				"src": "2150:15:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																					"typeString": "function (uint256[] storage pointer)"
																				}
																			},
																			"id": 234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2150:17:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 235,
																		"nodeType": "ExpressionStatement",
																		"src": "2150:17:2"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"id": 237,
																					"name": "_claimTopic",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 195,
																					"src": "2208:11:2",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				],
																				"id": 236,
																				"name": "ClaimTopicRemoved",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 284,
																				"src": "2190:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
																					"typeString": "function (uint256)"
																				}
																			},
																			"id": 238,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "2190:30:2",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 239,
																		"nodeType": "EmitStatement",
																		"src": "2185:35:2"
																	},
																	{
																		"id": 240,
																		"nodeType": "Break",
																		"src": "2238:5:2"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 210,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 207,
														"src": "2008:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 211,
														"name": "length",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 202,
														"src": "2012:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2008:10:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 244,
												"initializationExpression": {
													"assignments": [
														207
													],
													"declarations": [
														{
															"constant": false,
															"id": 207,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "2001:1:2",
															"nodeType": "VariableDeclaration",
															"scope": 244,
															"src": "1993:9:2",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 206,
																"name": "uint256",
																"nodeType": "ElementaryTypeName",
																"src": "1993:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 209,
													"initialValue": {
														"hexValue": "30",
														"id": 208,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2005:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "1993:13:2"
												},
												"loopExpression": {
													"expression": {
														"id": 214,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "2020:3:2",
														"subExpression": {
															"id": 213,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 207,
															"src": "2020:1:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 215,
													"nodeType": "ExpressionStatement",
													"src": "2020:3:2"
												},
												"nodeType": "ForStatement",
												"src": "1988:280:2"
											}
										]
									},
									"documentation": {
										"id": 193,
										"nodeType": "StructuredDocumentation",
										"src": "1784:69:2",
										"text": "  @dev See {IClaimTopicsRegistry-removeClaimTopic}."
									},
									"functionSelector": "08297846",
									"id": 246,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 199,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 198,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "1923:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "1923:9:2"
										}
									],
									"name": "removeClaimTopic",
									"nameLocation": "1867:16:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 197,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "1914:8:2"
									},
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1892:11:2",
												"nodeType": "VariableDeclaration",
												"scope": 246,
												"src": "1884:19:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 194,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1884:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1883:21:2"
									},
									"returnParameters": {
										"id": 200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1933:0:2"
									},
									"scope": 272,
									"src": "1858:416:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										303
									],
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "2428:35:2",
										"statements": [
											{
												"expression": {
													"id": 254,
													"name": "claimTopics",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 146,
													"src": "2445:11:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
														"typeString": "uint256[] storage ref"
													}
												},
												"functionReturnParameters": 253,
												"id": 255,
												"nodeType": "Return",
												"src": "2438:18:2"
											}
										]
									},
									"documentation": {
										"id": 247,
										"nodeType": "StructuredDocumentation",
										"src": "2280:67:2",
										"text": "  @dev See {IClaimTopicsRegistry-getClaimTopics}."
									},
									"functionSelector": "df09d604",
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "2361:14:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 249,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2392:8:2"
									},
									"parameters": {
										"id": 248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2375:2:2"
									},
									"returnParameters": {
										"id": 253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 252,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "2410:16:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 250,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2410:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 251,
													"nodeType": "ArrayTypeName",
													"src": "2410:9:2",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2409:18:2"
									},
									"scope": 272,
									"src": "2352:111:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"baseFunctions": [
										309
									],
									"body": {
										"id": 270,
										"nodeType": "Block",
										"src": "2676:45:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 267,
															"name": "_newOwner",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 260,
															"src": "2704:9:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 266,
														"name": "transferOwnership",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 91,
														"src": "2686:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2686:28:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 269,
												"nodeType": "ExpressionStatement",
												"src": "2686:28:2"
											}
										]
									},
									"documentation": {
										"id": 258,
										"nodeType": "StructuredDocumentation",
										"src": "2469:99:2",
										"text": "  @dev See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}."
									},
									"functionSelector": "d5144472",
									"id": 271,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 264,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 263,
												"name": "onlyOwner",
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 31,
												"src": "2666:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "2666:9:2"
										}
									],
									"name": "transferOwnershipOnClaimTopicsRegistryContract",
									"nameLocation": "2582:46:2",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 262,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2657:8:2"
									},
									"parameters": {
										"id": 261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 260,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "2637:9:2",
												"nodeType": "VariableDeclaration",
												"scope": 271,
												"src": "2629:17:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 259,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2629:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2628:19:2"
									},
									"returnParameters": {
										"id": 265,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2676:0:2"
									},
									"scope": 272,
									"src": "2573:148:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 273,
							"src": "1220:1503:2",
							"usedErrors": []
						}
					],
					"src": "1093:1631:2"
				},
				"id": 2
			},
			"contracts/registry/IClaimTopicsRegistry.sol": {
				"ast": {
					"absolutePath": "contracts/registry/IClaimTopicsRegistry.sol",
					"exportedSymbols": {
						"IClaimTopicsRegistry": [
							310
						]
					},
					"id": 311,
					"license": "GPL-3.0",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 274,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "1093:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "IClaimTopicsRegistry",
							"nameLocation": "1128:20:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "1155:241:3",
										"text": "  this event is emitted when a claim topic has been added to the ClaimTopicsRegistry\n  the event is emitted by the 'addClaimTopic' function\n  `claimTopic` is the required claim added to the Claim Topics Registry"
									},
									"id": 279,
									"name": "ClaimTopicAdded",
									"nameLocation": "1407:15:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1439:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "1423:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 276,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1423:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1422:28:3"
									},
									"src": "1401:50:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 280,
										"nodeType": "StructuredDocumentation",
										"src": "1457:252:3",
										"text": "  this event is emitted when a claim topic has been removed from the ClaimTopicsRegistry\n  the event is emitted by the 'removeClaimTopic' function\n  `claimTopic` is the required claim removed from the Claim Topics Registry"
									},
									"id": 284,
									"name": "ClaimTopicRemoved",
									"nameLocation": "1720:17:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 282,
												"indexed": true,
												"mutability": "mutable",
												"name": "claimTopic",
												"nameLocation": "1754:10:3",
												"nodeType": "VariableDeclaration",
												"scope": 284,
												"src": "1738:26:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1738:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1737:28:3"
									},
									"src": "1714:52:3"
								},
								{
									"documentation": {
										"id": 285,
										"nodeType": "StructuredDocumentation",
										"src": "1772:191:3",
										"text": " @dev Add a trusted claim topic (For example: KYC=1, AML=2).\n Only owner can call.\n emits `ClaimTopicAdded` event\n @param _claimTopic The claim topic index"
									},
									"functionSelector": "c7b22551",
									"id": 290,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "addClaimTopic",
									"nameLocation": "1977:13:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "1999:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 290,
												"src": "1991:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 286,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1991:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1990:21:3"
									},
									"returnParameters": {
										"id": 289,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2020:0:3"
									},
									"scope": 310,
									"src": "1968:53:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 291,
										"nodeType": "StructuredDocumentation",
										"src": "2027:200:3",
										"text": "  @dev Remove a trusted claim topic (For example: KYC=1, AML=2).\n  Only owner can call.\n  emits `ClaimTopicRemoved` event\n  @param _claimTopic The claim topic index"
									},
									"functionSelector": "08297846",
									"id": 296,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "removeClaimTopic",
									"nameLocation": "2241:16:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 294,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 293,
												"mutability": "mutable",
												"name": "_claimTopic",
												"nameLocation": "2266:11:3",
												"nodeType": "VariableDeclaration",
												"scope": 296,
												"src": "2258:19:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 292,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2258:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2257:21:3"
									},
									"returnParameters": {
										"id": 295,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2287:0:3"
									},
									"scope": 310,
									"src": "2232:56:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 297,
										"nodeType": "StructuredDocumentation",
										"src": "2294:122:3",
										"text": "  @dev Get the trusted claim topics for the security token\n  @return Array of trusted claim topics"
									},
									"functionSelector": "df09d604",
									"id": 303,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getClaimTopics",
									"nameLocation": "2430:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 298,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2444:2:3"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 303,
												"src": "2470:16:3",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 299,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2470:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 300,
													"nodeType": "ArrayTypeName",
													"src": "2470:9:3",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2469:18:3"
									},
									"scope": 310,
									"src": "2421:67:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 304,
										"nodeType": "StructuredDocumentation",
										"src": "2494:165:3",
										"text": "  @dev Transfers the Ownership of ClaimTopics to a new Owner.\n  Only owner can call.\n  @param _newOwner The new owner of this contract."
									},
									"functionSelector": "d5144472",
									"id": 309,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferOwnershipOnClaimTopicsRegistryContract",
									"nameLocation": "2673:46:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 307,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 306,
												"mutability": "mutable",
												"name": "_newOwner",
												"nameLocation": "2728:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "2720:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 305,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2720:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2719:19:3"
									},
									"returnParameters": {
										"id": 308,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2747:0:3"
									},
									"scope": 310,
									"src": "2664:84:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 311,
							"src": "1118:1632:3",
							"usedErrors": []
						}
					],
					"src": "1093:1658:3"
				},
				"id": 3
			}
		}
	}
}