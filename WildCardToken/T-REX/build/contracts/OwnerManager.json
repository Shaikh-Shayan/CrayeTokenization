{
  "contractName": "OwnerManager",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_token",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes4",
          "name": "selector",
          "type": "bytes4"
        }
      ],
      "name": "ComplianceInteraction",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "RoleAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_role",
          "type": "string"
        }
      ],
      "name": "RoleRemoved",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addClaimRegistryManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addComplianceManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addComplianceSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addIssuersRegistryManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addOwnerAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addRegistryAddressSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "addTokenInfoManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isClaimRegistryManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isComplianceManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isComplianceSetter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isIssuersRegistryManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isOwnerAdmin",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isRegistryAddressSetter",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "isTokenInfoManager",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeClaimRegistryManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeComplianceManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeComplianceSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeIssuersRegistryManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeOwnerAdmin",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeRegistryAddressSetter",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "removeTokenInfoManager",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "internalType": "contract IToken",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_identityRegistry",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetIdentityRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_compliance",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetCompliance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "callData",
          "type": "bytes"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callComplianceFunction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetTokenName",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetTokenSymbol",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_tokenOnchainID",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetTokenOnchainID",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_claimTopicsRegistry",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetClaimTopicsRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_trustedIssuersRegistry",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callSetTrustedIssuersRegistry",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_claimTopics",
          "type": "uint256[]"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callAddTrustedIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callRemoveTrustedIssuer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IClaimIssuer",
          "name": "_trustedIssuer",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "_claimTopics",
          "type": "uint256[]"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callUpdateIssuerClaimTopics",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimTopic",
          "type": "uint256"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callAddClaimTopic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_claimTopic",
          "type": "uint256"
        },
        {
          "internalType": "contract IIdentity",
          "name": "_onchainID",
          "type": "address"
        }
      ],
      "name": "callRemoveClaimTopic",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "callTransferOwnershipOnTokenContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "callTransferOwnershipOnIdentityRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "callTransferOwnershipOnComplianceContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "callTransferOwnershipOnClaimTopicsRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_newOwner",
          "type": "address"
        }
      ],
      "name": "callTransferOwnershipOnIssuersRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "callAddAgentOnTokenContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "callRemoveAgentOnTokenContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "callAddAgentOnIdentityRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_agent",
          "type": "address"
        }
      ],
      "name": "callRemoveAgentOnIdentityRegistryContract",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes4\",\"name\":\"selector\",\"type\":\"bytes4\"}],\"name\":\"ComplianceInteraction\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"RoleAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_role\",\"type\":\"string\"}],\"name\":\"RoleRemoved\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addClaimRegistryManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addComplianceManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addComplianceSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addIssuersRegistryManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addOwnerAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addRegistryAddressSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"addTokenInfoManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"callAddAgentOnIdentityRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"callAddAgentOnTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callAddClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callAddTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"callData\",\"type\":\"bytes\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callComplianceFunction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"callRemoveAgentOnIdentityRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_agent\",\"type\":\"address\"}],\"name\":\"callRemoveAgentOnTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_claimTopic\",\"type\":\"uint256\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callRemoveClaimTopic\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callRemoveTrustedIssuer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_claimTopicsRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetClaimTopicsRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_compliance\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetCompliance\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_identityRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetIdentityRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetTokenName\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenOnchainID\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetTokenOnchainID\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetTokenSymbol\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_trustedIssuersRegistry\",\"type\":\"address\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callSetTrustedIssuersRegistry\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"callTransferOwnershipOnClaimTopicsRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"callTransferOwnershipOnComplianceContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"callTransferOwnershipOnIdentityRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"callTransferOwnershipOnIssuersRegistryContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"callTransferOwnershipOnTokenContract\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IClaimIssuer\",\"name\":\"_trustedIssuer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"_claimTopics\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IIdentity\",\"name\":\"_onchainID\",\"type\":\"address\"}],\"name\":\"callUpdateIssuerClaimTopics\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isClaimRegistryManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isComplianceManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isComplianceSetter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isIssuersRegistryManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isOwnerAdmin\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isRegistryAddressSetter\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"isTokenInfoManager\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeClaimRegistryManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeComplianceManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeComplianceSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeIssuersRegistryManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeOwnerAdmin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeRegistryAddressSetter\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"removeTokenInfoManager\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"contract IToken\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"ComplianceInteraction(address,bytes4)\":{\"details\":\"Event emitted for each executed interaction with the compliance contract. For gas efficiency, only the interaction calldata selector (first 4 bytes) is included in the event. For interactions without calldata or whose calldata is shorter than 4 bytes, the selector will be `0`.\"}},\"kind\":\"dev\",\"methods\":{\"callAddAgentOnIdentityRegistryContract(address)\":{\"details\":\"calls the `addAgentOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-addAgentOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callAddAgentOnTokenContract(address)\":{\"details\":\"calls the `addAgentOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-addAgentOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callAddClaimTopic(uint256,address)\":{\"details\":\"calls the `addClaimTopic` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function  See {IClaimTopicsRegistry-addClaimTopic}.  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callAddTrustedIssuer(address,uint256[],address)\":{\"details\":\"calls the `addTrustedIssuer` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-addTrustedIssuer}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callComplianceFunction(bytes,address)\":{\"details\":\"calls any onlyOwner function available on the compliance contract  OwnerManager has to be set as owner on the compliance smart contract to process this function  Requires that `_onchainID` is set as ComplianceManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callRemoveAgentOnIdentityRegistryContract(address)\":{\"details\":\"calls the `removeAgentOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-removeAgentOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callRemoveAgentOnTokenContract(address)\":{\"details\":\"calls the `removeAgentOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-removeAgentOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callRemoveClaimTopic(uint256,address)\":{\"details\":\"calls the `removeClaimTopic` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function  See {IClaimTopicsRegistry-removeClaimTopic}.  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callRemoveTrustedIssuer(address,address)\":{\"details\":\"calls the `removeTrustedIssuer` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-removeTrustedIssuer}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetClaimTopicsRegistry(address,address)\":{\"details\":\"calls the `setClaimTopicsRegistry` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-setClaimTopicsRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetCompliance(address,address)\":{\"details\":\"calls the `setCompliance` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setCompliance}.  Requires that `_onchainID` is set as ComplianceSetter on the OwnerManager contract  Requires that msg.sender is a MANAGEMENT KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetIdentityRegistry(address,address)\":{\"details\":\"calls the `setIdentityRegistry` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setIdentityRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetTokenName(string,address)\":{\"details\":\"calls the `setName` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setName}.  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetTokenOnchainID(address,address)\":{\"details\":\"calls the `setOnchainID` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setOnchainID}.  Requires that `_tokenOnchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetTokenSymbol(string,address)\":{\"details\":\"calls the `setSymbol` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setSymbol}.  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callSetTrustedIssuersRegistry(address,address)\":{\"details\":\"calls the `setTrustedIssuersRegistry` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-setTrustedIssuersRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"callTransferOwnershipOnClaimTopicsRegistryContract(address)\":{\"details\":\"calls the `transferOwnershipOnClaimTopicsRegistryContract` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics registry smart contract to process this function  See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callTransferOwnershipOnComplianceContract(address)\":{\"details\":\"calls the `transferOwnershipOnComplianceContract` function on the Compliance contract  OwnerManager has to be set as owner on the Compliance smart contract to process this function  See {ICompliance-transferOwnershipOnComplianceContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callTransferOwnershipOnIdentityRegistryContract(address)\":{\"details\":\"calls the `transferOwnershipOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-transferOwnershipOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callTransferOwnershipOnIssuersRegistryContract(address)\":{\"details\":\"calls the `transferOwnershipOnIssuersRegistryContract` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers registry smart contract to process this function  See {ITrustedIssuersRegistry-transferOwnershipOnIssuersRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callTransferOwnershipOnTokenContract(address)\":{\"details\":\"calls the `transferOwnershipOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-transferOwnershipOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract\"},\"callUpdateIssuerClaimTopics(address,uint256[],address)\":{\"details\":\"calls the `updateIssuerClaimTopics` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`\",\"params\":{\"_onchainID\":\"the _onchainID contract of the caller, e.g. \\\"i call this function and i am Bob\\\"\"}},\"constructor\":{\"details\":\"the constructor initiates the OwnerManager contract  and sets msg.sender as owner of the contract\",\"params\":{\"_token\":\"the token managed by this OwnerManager contract\"}},\"isClaimRegistryManager(address)\":{\"details\":\"ClaimRegistryManager Role _claimRegistryManager\"},\"isComplianceManager(address)\":{\"details\":\"ComplianceManager Role _complianceManager\"},\"isComplianceSetter(address)\":{\"details\":\"ComplianceSetter Role _complianceSetter\"},\"isIssuersRegistryManager(address)\":{\"details\":\"IssuersRegistryManager Role _issuersRegistryManager\"},\"isOwnerAdmin(address)\":{\"details\":\"OwnerAdmin Role _ownerAdmin\"},\"isRegistryAddressSetter(address)\":{\"details\":\"RegistryAddressSetter Role _registryAddressSetter\"},\"isTokenInfoManager(address)\":{\"details\":\"TokenInfoManager Role _tokenInfoManager\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"stateVariables\":{\"token\":{\"details\":\"the token that is managed by this OwnerManager Contract\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/roles/OwnerManager.sol\":\"OwnerManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@onchain-id/solidity/contracts/interface/IClaimIssuer.sol\":{\"keccak256\":\"0xd0493be7cb7342962b46f8e2afdca4614ea0fe34a7f493b2da9db7d361a9042c\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://105232aae24e3d0fcb4c80c00793b61b6019f6127c0ec6f9e3082ae01b2e778b\",\"dweb:/ipfs/QmV5C1wbq7H5H6DiakafSX5agAAP6rQSZ5qq7Qgq6VLkXo\"]},\"@onchain-id/solidity/contracts/interface/IERC734.sol\":{\"keccak256\":\"0x3302de9e9fe7a548cb7395b6fda38f952f6a6d1c599dfeee181a1ef80741fc1d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://fc9f00e5b2f1523fecf52b1a833e9263a53edbebb7d1458f9004cfd41dd0402e\",\"dweb:/ipfs/QmWcNcVQrg66KeQz39jPgJun7jF3CbdJKHQa19q97n5Hzb\"]},\"@onchain-id/solidity/contracts/interface/IERC735.sol\":{\"keccak256\":\"0x3b77ce6012a96cf0075197cdeb1b98b66ca1722ef23241e40ba6185f03bf4584\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://766e139f0c3cc0c6489561e75df0d8eab8c277f90009e4fa19add4f22bb40d82\",\"dweb:/ipfs/QmcbAReZn9nLcnYn9AHiDmcYJ42JqAU5QSy4dKhUcJUnjy\"]},\"@onchain-id/solidity/contracts/interface/IIdentity.sol\":{\"keccak256\":\"0xdcefbe2a850f9f43e959b9f7ed93fd5b35f29ff3dfbfaac7530af737c9eba7c6\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://2e887c7cc67fdb2710c48bed22dbb27880f6dfb84ee93178ad4fcd659099cb96\",\"dweb:/ipfs/QmUuDEsZJC7uQQEErmuNJzePsNgHiTDdS2TuMzG1GRqrC3\"]},\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"@openzeppelin/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"project:/contracts/compliance/ICompliance.sol\":{\"keccak256\":\"0x4049905b34eab118c0c3f644450299a5ed8022bbbdb26036e7c2854dae8ae1ba\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f8144953d88f543b2f537514f1136b8adf705837ba6d420b95569f6895153edb\",\"dweb:/ipfs/QmRqM7A6XrofFR67k8RtNNEkriAbKsQHDgUYaKZTMr9Nm5\"]},\"project:/contracts/registry/IClaimTopicsRegistry.sol\":{\"keccak256\":\"0x95f8fa17a716771125b203f00890eceb20ac3807f7a39a25b644427b1ff81d61\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://460dceb9e88957d5ce002b80748767c80a7e146c9b38b055a3c1ca04586b2009\",\"dweb:/ipfs/QmVdqEpGMRzSpLKBCtPzaPGatBgUyNm3NS5rQnkkYMnc1C\"]},\"project:/contracts/registry/IIdentityRegistry.sol\":{\"keccak256\":\"0x16a31f2d35143f99cc6b83d0cf6e9da9543c2b8561712079098f3a39d12ae32a\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://7669a9272b1df8e27e0fc3f5f64977b2b16615e585b673383db1eb157a62bf7c\",\"dweb:/ipfs/QmQzXmoFcFyBPehPyiUzGjaKfXJHLEPZMtFTBTgjuCavah\"]},\"project:/contracts/registry/IIdentityRegistryStorage.sol\":{\"keccak256\":\"0x8cd4de1e77c5da8ca2ff732069bc184aef86bcb94f95a5229e5bd6336abbd06d\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://f88894a3d046940be03a12cc2da3b3fb6efb51e0461fbea060a9a3190cadcf16\",\"dweb:/ipfs/QmNndZUPdpc83A9LungeAsrcencq3CzTum1tkU6KVdSRNC\"]},\"project:/contracts/registry/ITrustedIssuersRegistry.sol\":{\"keccak256\":\"0x01af20f2f537db3122c60b7c6e60e5036e07c673ef9762428b42129f65fcbc60\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://28f514b876c975777fe84bdb9f96ec5c687e4e4ff5d2b14961ba61affc57d46c\",\"dweb:/ipfs/QmdbVRsg1Q71PVHYxy1r7e5MeiMN5hHHDD8vRnXBSr8JiV\"]},\"project:/contracts/roles/OwnerManager.sol\":{\"keccak256\":\"0xf24ad763091fcee85f76d68c85da71ee38f479a80bb2862ccf69ec44ecb9c456\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://29845968c8ee58588164a7fc3397e9ece71adf0b570a94505d36ea8b1f8a5f9c\",\"dweb:/ipfs/QmZ2yDjjC8Z4jrNdvDqMfkGiFq84279W7sJjKsAePiLWuh\"]},\"project:/contracts/roles/OwnerRoles.sol\":{\"keccak256\":\"0xbee04028f75c0a4b5e88734804eacf3df894f40e01d4c424ef6c80887deda098\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cb4fb927124798f04c1263fdb07663cb5486be206686e18b191d8a0bee90aeed\",\"dweb:/ipfs/QmSsdAgzQK46QJnc7Lgheu5Vo7yUD68y8zVR2kUXwSrkDx\"]},\"project:/contracts/roles/Roles.sol\":{\"keccak256\":\"0x9e018cafd4e2a2890d4ed32f0a4e5edf92fe95000f35b15d7932890bd0efdb95\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://6c07fd269689b662d782817bc4fdfc00d33fd7e320c20916528fff7853847954\",\"dweb:/ipfs/QmUz39kdgQM8M2W2gcBZ8Vi3mzzSmXUx9NXxTJatYYQJyw\"]},\"project:/contracts/token/IToken.sol\":{\"keccak256\":\"0x34ce3cabab2f6b66aeb4e89fe8e9952b8aa57663e7b33429963169a835fc1f25\",\"license\":\"GPL-3.0\",\"urls\":[\"bzz-raw://cffd212e911fd0a6a402d5438e5f5da0c1637226bfcab173a7c58efba12f2655\",\"dweb:/ipfs/QmVbqFNczrUAETfAX6F9MxXKivALRvt1HBTMhrjAKWHniq\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b506040516200334b3803806200334b8339810160408190526200003491620000b5565b6200003f3362000065565b600880546001600160a01b0319166001600160a01b0392909216919091179055620000e7565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215620000c857600080fd5b81516001600160a01b0381168114620000e057600080fd5b9392505050565b61325480620000f76000396000f3fe608060405234801561001057600080fd5b50600436106102955760003560e01c806387cc060c11610167578063ae5aaa3b116100ce578063f087249c11610087578063f087249c146105c3578063f2fde38b146105d6578063faed696a146105e9578063fc0c546a146105fc578063fc6de4b51461060f578063ff8063111461062257600080fd5b8063ae5aaa3b14610551578063ce4bdac714610564578063dd39042b14610577578063e110255b1461058a578063e38123181461059d578063eeac6fe6146105b057600080fd5b806399884aab1161012057806399884aab146104df5780639ce2d88e146104f25780639d6de3bc14610505578063a66bcc1c14610518578063aa1cef561461052b578063ac95fc911461053e57600080fd5b806387cc060c1461045b578063882fc6ca1461046e5780638da5cb5b14610481578063934b2da4146104a657806394e69f1b146104b9578063951af88d146104cc57600080fd5b8063405225541161020b5780636ff7bff7116101c45780636ff7bff7146103f4578063715018a614610407578063757d467f1461040f578063818ab8bd14610422578063828709371461043557806385cef6081461044857600080fd5b8063405225541461038257806346b686f8146103955780634837b797146103a857806354b9797f146103bb5780635c5f2047146103ce57806362cdd482146103e157600080fd5b806328d7be341161025d57806328d7be34146103105780632af70c30146103235780632f56d91b14610336578063309ff3d1146103495780633ba7c75e1461035c5780633c734ce81461036f57600080fd5b8063039ec2cd1461029a57806303ff5014146102af5780631096a7ec146102d75780632447e50b146102ea578063256ccc07146102fd575b600080fd5b6102ad6102a8366004612db0565b610635565b005b6102c26102bd366004612db0565b6106f0565b60405190151581526020015b60405180910390f35b6102ad6102e5366004612db0565b610703565b6102c26102f8366004612db0565b610823565b6102ad61030b366004612db0565b610830565b6102ad61031e366004612db0565b6108aa565b6102ad610331366004612e1d565b610924565b6102ad610344366004612e74565b610a4f565b6102ad610357366004612e1d565b610c4c565b6102c261036a366004612db0565b610d40565b6102c261037d366004612db0565b610d4d565b6102ad610390366004612db0565b610d5a565b6102ad6103a3366004612db0565b610dfb565b6102ad6103b6366004612ea4565b610e9d565b6102ad6103c9366004612db0565b61109e565b6102ad6103dc366004612e1d565b611139565b6102c26103ef366004612db0565b611321565b6102ad610402366004612db0565b61132e565b6102ad6113d5565b6102ad61041d366004612db0565b6113e9565b6102ad610430366004612db0565b6114d8565b6102c2610443366004612db0565b611628565b6102ad610456366004612db0565b611635565b6102ad610469366004612f3f565b611724565b6102ad61047c366004612db0565b611818565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016102ce565b6102ad6104b4366004612db0565b6118b9565b6102ad6104c7366004612db0565b611954565b6102ad6104da366004612f3f565b6119f5565b6102ad6104ed366004612db0565b611b27565b6102ad610500366004612f3f565b611c77565b6102ad610513366004612f3f565b611e41565b6102ad610526366004612db0565b611f35565b6102ad610539366004612db0565b611fd7565b6102ad61054c366004612db0565b612051565b6102ad61055f366004612db0565b6120f8565b6102ad610572366004612db0565b61219e565b6102ad610585366004612e74565b61223f565b6102ad610598366004612db0565b612406565b6102ad6105ab366004612db0565b6124ab565b6102ad6105be366004612f3f565b61259a565b6102ad6105d1366004612f3f565b612703565b6102ad6105e4366004612db0565b61286c565b6102ad6105f7366004612db0565b6128e5565b60085461048e906001600160a01b031681565b6102ad61061d366004612ea4565b61298a565b6102c2610630366004612db0565b612b53565b336106486000546001600160a01b031690565b6001600160a01b03161480610661575061066133611321565b6106865760405162461bcd60e51b815260040161067d90612f6d565b60405180910390fd5b610691600282612b60565b60408051808201825260158152742932b3b4b9ba393ca0b2323932b9b9a9b2ba3a32b960591b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b60405180910390a25050565b60006106fd600483612be2565b92915050565b336107166000546001600160a01b031690565b6001600160a01b0316148061072f575061072f33611321565b61074b5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b0316636290865d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190612ff9565b604051637bcf048760e01b81526001600160a01b0383811660048301529190911690637bcf0487906024015b600060405180830381600087803b15801561080857600080fd5b505af115801561081c573d6000803e3d6000fd5b5050505050565b60006106fd600783612be2565b336108436000546001600160a01b031690565b6001600160a01b0316148061085c575061085c33611321565b6108785760405162461bcd60e51b815260040161067d90612f6d565b600854604051630b422d8360e41b81526001600160a01b0383811660048301529091169063b422d830906024016107ee565b336108bd6000546001600160a01b031690565b6001600160a01b031614806108d657506108d633611321565b6108f25760405162461bcd60e51b815260040161067d90612f6d565b600854604051635dc7a3cb60e01b81526001600160a01b03838116600483015290911690635dc7a3cb906024016107ee565b61092d81610823565b80156109ca5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190613016565b6109e65760405162461bcd60e51b815260040161067d90613038565b600854604051635c26412360e11b81526001600160a01b039091169063b84c824690610a189086908690600401613085565b600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b50505050505050565b610a5881610d4d565b8015610af55750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af59190613016565b610b115760405162461bcd60e51b815260040161067d906130b4565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190612ff9565b6001600160a01b03166308297846836040518263ffffffff1660e01b8152600401610c1691815260200190565b600060405180830381600087803b158015610c3057600080fd5b505af1158015610c44573d6000803e3d6000fd5b505050505050565b610c5581610823565b8015610cf25750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf29190613016565b610d0e5760405162461bcd60e51b815260040161067d90613038565b60085460405163c47f002760e01b81526001600160a01b039091169063c47f002790610a189086908690600401613085565b60006106fd600383612be2565b60006106fd600583612be2565b33610d6d6000546001600160a01b031690565b6001600160a01b03161480610d865750610d8633611321565b610da25760405162461bcd60e51b815260040161067d90612f6d565b610dad600382612b60565b604080518082018252601081526f21b7b6b83634b0b731b2a9b2ba3a32b960811b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b33610e0e6000546001600160a01b031690565b6001600160a01b03161480610e275750610e2733611321565b610e435760405162461bcd60e51b815260040161067d90612f6d565b610e4e600482612b60565b604080518082018252601181527021b7b6b83634b0b731b2a6b0b730b3b2b960791b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b610ea681612b53565b8015610f435750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190613016565b610f5f5760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd69190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612ff9565b6001600160a01b03166304bc7e848585856040518463ffffffff1660e01b815260040161106693929190613146565b600060405180830381600087803b15801561108057600080fd5b505af1158015611094573d6000803e3d6000fd5b5050505050505050565b336110b16000546001600160a01b031690565b6001600160a01b031614806110ca57506110ca33611321565b6110e65760405162461bcd60e51b815260040161067d90612f6d565b6110f1600182612b60565b604080518082018252600a81526927bbb732b920b236b4b760b11b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b611142816106f0565b80156111df5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df9190613016565b61123a5760405162461bcd60e51b815260206004820152602660248201527f526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365204d60448201526530b730b3b2b960d11b606482015260840161067d565b60085460408051636290865d60e01b815290516000926001600160a01b031691636290865d9160048083019260209291908290030181865afa158015611284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a89190612ff9565b90506040518385823760008085836000865af16112c9573d6000803e3d6000fd5b50806001600160a01b03167f5779a24d18a4639b1d59461e68c00fb0cd02533a4c5a6ff3ca6363e23e2fff566112ff8686612c65565b6040516001600160e01b0319909116815260200160405180910390a250505050565b60006106fd600183612be2565b336113416000546001600160a01b031690565b6001600160a01b0316148061135a575061135a33611321565b6113765760405162461bcd60e51b815260040161067d90612f6d565b611381600682612b60565b604080518082018252601681527524b9b9bab2b939a932b3b4b9ba393ca6b0b730b3b2b960511b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b6113dd612c75565b6113e76000612ccf565b565b336113fc6000546001600160a01b031690565b6001600160a01b03161480611415575061141533611321565b6114315760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a89190612ff9565b604051635e5741f360e01b81526001600160a01b0383811660048301529190911690635e5741f3906024016107ee565b336114eb6000546001600160a01b031690565b6001600160a01b03161480611504575061150433611321565b6115205760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115979190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f89190612ff9565b604051636a8a223960e11b81526001600160a01b038381166004830152919091169063d5144472906024016107ee565b60006106fd600283612be2565b336116486000546001600160a01b031690565b6001600160a01b03161480611661575061166133611321565b61167d5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f49190612ff9565b60405163285e3ded60e11b81526001600160a01b03838116600483015291909116906350bc7bda906024016107ee565b61172d81610823565b80156117ca5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca9190613016565b6117e65760405162461bcd60e51b815260040161067d90613038565b600854604051633d1ddc5b60e01b81526001600160a01b03848116600483015290911690633d1ddc5b90602401610c16565b3361182b6000546001600160a01b031690565b6001600160a01b03161480611844575061184433611321565b6118605760405162461bcd60e51b815260040161067d90612f6d565b61186b600782612b60565b604080518082018252601081526f2a37b5b2b724b73337a6b0b730b3b2b960811b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b336118cc6000546001600160a01b031690565b6001600160a01b031614806118e557506118e533611321565b6119015760405162461bcd60e51b815260040161067d90612f6d565b61190c600182612d1f565b604080518082018252600a81526927bbb732b920b236b4b760b11b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b336119676000546001600160a01b031690565b6001600160a01b03161480611980575061198033611321565b61199c5760405162461bcd60e51b815260040161067d90612f6d565b6119a7600782612d1f565b604080518082018252601081526f2a37b5b2b724b73337a6b0b730b3b2b960811b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b6119fe81610d40565b8015611a9b5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9b9190613016565b611af55760405162461bcd60e51b815260206004820152602560248201527f526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365205360448201526432ba3a32b960d91b606482015260840161067d565b60085460405163f898178960e01b81526001600160a01b0384811660048301529091169063f898178990602401610c16565b33611b3a6000546001600160a01b031690565b6001600160a01b03161480611b535750611b5333611321565b611b6f5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c479190612ff9565b604051631c6db9c560e31b81526001600160a01b038381166004830152919091169063e36dce28906024016107ee565b611c8081612b53565b8015611d1d5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1d9190613016565b611d395760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db09190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ded573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e119190612ff9565b60405163b93d28eb60e01b81526001600160a01b038481166004830152919091169063b93d28eb90602401610c16565b611e4a81611628565b8015611ee75750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190613016565b611f035760405162461bcd60e51b815260040161067d90613193565b60085460405163cbf3f86160e01b81526001600160a01b0384811660048301529091169063cbf3f86190602401610c16565b33611f486000546001600160a01b031690565b6001600160a01b03161480611f615750611f6133611321565b611f7d5760405162461bcd60e51b815260040161067d90612f6d565b611f88600482612d1f565b604080518082018252601181527021b7b6b83634b0b731b2a6b0b730b3b2b960791b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b33611fea6000546001600160a01b031690565b6001600160a01b03161480612003575061200333611321565b61201f5760405162461bcd60e51b815260040161067d90612f6d565b6008546040516351411b3360e01b81526001600160a01b038381166004830152909116906351411b33906024016107ee565b336120646000546001600160a01b031690565b6001600160a01b0316148061207d575061207d33611321565b6120995760405162461bcd60e51b815260040161067d90612f6d565b6120a4600682612d1f565b604080518082018252601681527524b9b9bab2b939a932b3b4b9ba393ca6b0b730b3b2b960511b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b3361210b6000546001600160a01b031690565b6001600160a01b03161480612124575061212433611321565b6121405760405162461bcd60e51b815260040161067d90612f6d565b61214b600282612d1f565b60408051808201825260158152742932b3b4b9ba393ca0b2323932b9b9a9b2ba3a32b960591b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b336121b16000546001600160a01b031690565b6001600160a01b031614806121ca57506121ca33611321565b6121e65760405162461bcd60e51b815260040161067d90612f6d565b6121f1600382612d1f565b604080518082018252601081526f21b7b6b83634b0b731b2a9b2ba3a32b960811b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b61224881610d4d565b80156122e55750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156122c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e59190613016565b6123015760405162461bcd60e51b815260040161067d906130b4565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123789190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190612ff9565b6001600160a01b031663c7b22551836040518263ffffffff1660e01b8152600401610c1691815260200190565b336124196000546001600160a01b031690565b6001600160a01b03161480612432575061243233611321565b61244e5760405162461bcd60e51b815260040161067d90612f6d565b612459600582612b60565b604080518082018252601481527321b630b4b6a932b3b4b9ba393ca6b0b730b3b2b960611b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b336124be6000546001600160a01b031690565b6001600160a01b031614806124d757506124d733611321565b6124f35760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256a9190612ff9565b604051633389036760e21b81526001600160a01b038381166004830152919091169063ce240d9c906024016107ee565b6125a381611628565b80156126405750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa15801561261c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126409190613016565b61265c5760405162461bcd60e51b815260040161067d90613193565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d39190612ff9565b60405163670af6a960e01b81526001600160a01b038481166004830152919091169063670af6a990602401610c16565b61270c81611628565b80156127a95750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015612785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a99190613016565b6127c55760405162461bcd60e51b815260040161067d90613193565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283c9190612ff9565b60405163e744d78960e01b81526001600160a01b038481166004830152919091169063e744d78990602401610c16565b612874612c75565b6001600160a01b0381166128d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067d565b6128e281612ccf565b50565b336128f86000546001600160a01b031690565b6001600160a01b03161480612911575061291133611321565b61292d5760405162461bcd60e51b815260040161067d90612f6d565b612938600582612d1f565b604080518082018252601481527321b630b4b6a932b3b4b9ba393ca6b0b730b3b2b960611b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b61299381612b53565b8015612a305750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015612a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a309190613016565b612a4c5760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac39190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b249190612ff9565b6001600160a01b0316639f63ea988585856040518463ffffffff1660e01b815260040161106693929190613146565b60006106fd600683612be2565b612b6a8282612be2565b612bc05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161067d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006001600160a01b038216612c455760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161067d565b506001600160a01b03166000908152602091909152604090205460ff1690565b6000600482106106fd5750503590565b6000546001600160a01b031633146113e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612d298282612be2565b15612d765760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161067d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811681146128e257600080fd5b600060208284031215612dc257600080fd5b8135612dcd81612d9b565b9392505050565b60008083601f840112612de657600080fd5b50813567ffffffffffffffff811115612dfe57600080fd5b602083019150836020828501011115612e1657600080fd5b9250929050565b600080600060408486031215612e3257600080fd5b833567ffffffffffffffff811115612e4957600080fd5b612e5586828701612dd4565b9094509250506020840135612e6981612d9b565b809150509250925092565b60008060408385031215612e8757600080fd5b823591506020830135612e9981612d9b565b809150509250929050565b60008060008060608587031215612eba57600080fd5b8435612ec581612d9b565b9350602085013567ffffffffffffffff80821115612ee257600080fd5b818701915087601f830112612ef657600080fd5b813581811115612f0557600080fd5b8860208260051b8501011115612f1a57600080fd5b6020830195508094505050506040850135612f3481612d9b565b939692955090935050565b60008060408385031215612f5257600080fd5b8235612f5d81612d9b565b91506020830135612e9981612d9b565b60208082526019908201527f526f6c653a2053656e646572206973204e4f542041646d696e00000000000000604082015260600190565b600060208083528351808285015260005b81811015612fd157858101830151858201604001528201612fb5565b81811115612fe3576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561300b57600080fd5b8151612dcd81612d9b565b60006020828403121561302857600080fd5b81518015158114612dcd57600080fd5b6020808252602d908201527f526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d60408201526c30ba34b7b71026b0b730b3b2b960991b606082015260800190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208082526028908201527f526f6c653a2053656e646572206973204e4f5420436c61696d526567697374726040820152673ca6b0b730b3b2b960c11b606082015260800190565b6020808252602a908201527f526f6c653a2053656e646572206973204e4f54204973737565727352656769736040820152693a393ca6b0b730b3b2b960b11b606082015260800190565b6001600160a01b0384168152604060208201819052810182905260006001600160fb1b0383111561317657600080fd5b8260051b8085606085013760009201606001918252509392505050565b6020808252602b908201527f526f6c653a2053656e646572206973204e4f542052656769737472792041646460408201526a3932b9b99029b2ba3a32b960a91b60608201526080019056fed211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803abfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489a2646970667358221220d3965af2de1c340262921f02ac4e05dc73b7fb24a7bf4265f79f6e18bba9cc7064736f6c634300080f0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102955760003560e01c806387cc060c11610167578063ae5aaa3b116100ce578063f087249c11610087578063f087249c146105c3578063f2fde38b146105d6578063faed696a146105e9578063fc0c546a146105fc578063fc6de4b51461060f578063ff8063111461062257600080fd5b8063ae5aaa3b14610551578063ce4bdac714610564578063dd39042b14610577578063e110255b1461058a578063e38123181461059d578063eeac6fe6146105b057600080fd5b806399884aab1161012057806399884aab146104df5780639ce2d88e146104f25780639d6de3bc14610505578063a66bcc1c14610518578063aa1cef561461052b578063ac95fc911461053e57600080fd5b806387cc060c1461045b578063882fc6ca1461046e5780638da5cb5b14610481578063934b2da4146104a657806394e69f1b146104b9578063951af88d146104cc57600080fd5b8063405225541161020b5780636ff7bff7116101c45780636ff7bff7146103f4578063715018a614610407578063757d467f1461040f578063818ab8bd14610422578063828709371461043557806385cef6081461044857600080fd5b8063405225541461038257806346b686f8146103955780634837b797146103a857806354b9797f146103bb5780635c5f2047146103ce57806362cdd482146103e157600080fd5b806328d7be341161025d57806328d7be34146103105780632af70c30146103235780632f56d91b14610336578063309ff3d1146103495780633ba7c75e1461035c5780633c734ce81461036f57600080fd5b8063039ec2cd1461029a57806303ff5014146102af5780631096a7ec146102d75780632447e50b146102ea578063256ccc07146102fd575b600080fd5b6102ad6102a8366004612db0565b610635565b005b6102c26102bd366004612db0565b6106f0565b60405190151581526020015b60405180910390f35b6102ad6102e5366004612db0565b610703565b6102c26102f8366004612db0565b610823565b6102ad61030b366004612db0565b610830565b6102ad61031e366004612db0565b6108aa565b6102ad610331366004612e1d565b610924565b6102ad610344366004612e74565b610a4f565b6102ad610357366004612e1d565b610c4c565b6102c261036a366004612db0565b610d40565b6102c261037d366004612db0565b610d4d565b6102ad610390366004612db0565b610d5a565b6102ad6103a3366004612db0565b610dfb565b6102ad6103b6366004612ea4565b610e9d565b6102ad6103c9366004612db0565b61109e565b6102ad6103dc366004612e1d565b611139565b6102c26103ef366004612db0565b611321565b6102ad610402366004612db0565b61132e565b6102ad6113d5565b6102ad61041d366004612db0565b6113e9565b6102ad610430366004612db0565b6114d8565b6102c2610443366004612db0565b611628565b6102ad610456366004612db0565b611635565b6102ad610469366004612f3f565b611724565b6102ad61047c366004612db0565b611818565b6000546001600160a01b03165b6040516001600160a01b0390911681526020016102ce565b6102ad6104b4366004612db0565b6118b9565b6102ad6104c7366004612db0565b611954565b6102ad6104da366004612f3f565b6119f5565b6102ad6104ed366004612db0565b611b27565b6102ad610500366004612f3f565b611c77565b6102ad610513366004612f3f565b611e41565b6102ad610526366004612db0565b611f35565b6102ad610539366004612db0565b611fd7565b6102ad61054c366004612db0565b612051565b6102ad61055f366004612db0565b6120f8565b6102ad610572366004612db0565b61219e565b6102ad610585366004612e74565b61223f565b6102ad610598366004612db0565b612406565b6102ad6105ab366004612db0565b6124ab565b6102ad6105be366004612f3f565b61259a565b6102ad6105d1366004612f3f565b612703565b6102ad6105e4366004612db0565b61286c565b6102ad6105f7366004612db0565b6128e5565b60085461048e906001600160a01b031681565b6102ad61061d366004612ea4565b61298a565b6102c2610630366004612db0565b612b53565b336106486000546001600160a01b031690565b6001600160a01b03161480610661575061066133611321565b6106865760405162461bcd60e51b815260040161067d90612f6d565b60405180910390fd5b610691600282612b60565b60408051808201825260158152742932b3b4b9ba393ca0b2323932b9b9a9b2ba3a32b960591b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b60405180910390a25050565b60006106fd600483612be2565b92915050565b336107166000546001600160a01b031690565b6001600160a01b0316148061072f575061072f33611321565b61074b5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b0316636290865d6040518163ffffffff1660e01b8152600401602060405180830381865afa15801561079e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c29190612ff9565b604051637bcf048760e01b81526001600160a01b0383811660048301529190911690637bcf0487906024015b600060405180830381600087803b15801561080857600080fd5b505af115801561081c573d6000803e3d6000fd5b5050505050565b60006106fd600783612be2565b336108436000546001600160a01b031690565b6001600160a01b0316148061085c575061085c33611321565b6108785760405162461bcd60e51b815260040161067d90612f6d565b600854604051630b422d8360e41b81526001600160a01b0383811660048301529091169063b422d830906024016107ee565b336108bd6000546001600160a01b031690565b6001600160a01b031614806108d657506108d633611321565b6108f25760405162461bcd60e51b815260040161067d90612f6d565b600854604051635dc7a3cb60e01b81526001600160a01b03838116600483015290911690635dc7a3cb906024016107ee565b61092d81610823565b80156109ca5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156109a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109ca9190613016565b6109e65760405162461bcd60e51b815260040161067d90613038565b600854604051635c26412360e11b81526001600160a01b039091169063b84c824690610a189086908690600401613085565b600060405180830381600087803b158015610a3257600080fd5b505af1158015610a46573d6000803e3d6000fd5b50505050505050565b610a5881610d4d565b8015610af55750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610ad1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af59190613016565b610b115760405162461bcd60e51b815260040161067d906130b4565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610b64573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b889190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610bc5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610be99190612ff9565b6001600160a01b03166308297846836040518263ffffffff1660e01b8152600401610c1691815260200190565b600060405180830381600087803b158015610c3057600080fd5b505af1158015610c44573d6000803e3d6000fd5b505050505050565b610c5581610823565b8015610cf25750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610cce573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610cf29190613016565b610d0e5760405162461bcd60e51b815260040161067d90613038565b60085460405163c47f002760e01b81526001600160a01b039091169063c47f002790610a189086908690600401613085565b60006106fd600383612be2565b60006106fd600583612be2565b33610d6d6000546001600160a01b031690565b6001600160a01b03161480610d865750610d8633611321565b610da25760405162461bcd60e51b815260040161067d90612f6d565b610dad600382612b60565b604080518082018252601081526f21b7b6b83634b0b731b2a9b2ba3a32b960811b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b33610e0e6000546001600160a01b031690565b6001600160a01b03161480610e275750610e2733611321565b610e435760405162461bcd60e51b815260040161067d90612f6d565b610e4e600482612b60565b604080518082018252601181527021b7b6b83634b0b731b2a6b0b730b3b2b960791b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b610ea681612b53565b8015610f435750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015610f1f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f439190613016565b610f5f5760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015610fb2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fd69190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611013573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110379190612ff9565b6001600160a01b03166304bc7e848585856040518463ffffffff1660e01b815260040161106693929190613146565b600060405180830381600087803b15801561108057600080fd5b505af1158015611094573d6000803e3d6000fd5b5050505050505050565b336110b16000546001600160a01b031690565b6001600160a01b031614806110ca57506110ca33611321565b6110e65760405162461bcd60e51b815260040161067d90612f6d565b6110f1600182612b60565b604080518082018252600a81526927bbb732b920b236b4b760b11b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b611142816106f0565b80156111df5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156111bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111df9190613016565b61123a5760405162461bcd60e51b815260206004820152602660248201527f526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365204d60448201526530b730b3b2b960d11b606482015260840161067d565b60085460408051636290865d60e01b815290516000926001600160a01b031691636290865d9160048083019260209291908290030181865afa158015611284573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112a89190612ff9565b90506040518385823760008085836000865af16112c9573d6000803e3d6000fd5b50806001600160a01b03167f5779a24d18a4639b1d59461e68c00fb0cd02533a4c5a6ff3ca6363e23e2fff566112ff8686612c65565b6040516001600160e01b0319909116815260200160405180910390a250505050565b60006106fd600183612be2565b336113416000546001600160a01b031690565b6001600160a01b0316148061135a575061135a33611321565b6113765760405162461bcd60e51b815260040161067d90612f6d565b611381600682612b60565b604080518082018252601681527524b9b9bab2b939a932b3b4b9ba393ca6b0b730b3b2b960511b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b6113dd612c75565b6113e76000612ccf565b565b336113fc6000546001600160a01b031690565b6001600160a01b03161480611415575061141533611321565b6114315760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611484573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114a89190612ff9565b604051635e5741f360e01b81526001600160a01b0383811660048301529190911690635e5741f3906024016107ee565b336114eb6000546001600160a01b031690565b6001600160a01b03161480611504575061150433611321565b6115205760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611573573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115979190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115d4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115f89190612ff9565b604051636a8a223960e11b81526001600160a01b038381166004830152919091169063d5144472906024016107ee565b60006106fd600283612be2565b336116486000546001600160a01b031690565b6001600160a01b03161480611661575061166133611321565b61167d5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156116d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116f49190612ff9565b60405163285e3ded60e11b81526001600160a01b03838116600483015291909116906350bc7bda906024016107ee565b61172d81610823565b80156117ca5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156117a6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906117ca9190613016565b6117e65760405162461bcd60e51b815260040161067d90613038565b600854604051633d1ddc5b60e01b81526001600160a01b03848116600483015290911690633d1ddc5b90602401610c16565b3361182b6000546001600160a01b031690565b6001600160a01b03161480611844575061184433611321565b6118605760405162461bcd60e51b815260040161067d90612f6d565b61186b600782612b60565b604080518082018252601081526f2a37b5b2b724b73337a6b0b730b3b2b960811b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b336118cc6000546001600160a01b031690565b6001600160a01b031614806118e557506118e533611321565b6119015760405162461bcd60e51b815260040161067d90612f6d565b61190c600182612d1f565b604080518082018252600a81526927bbb732b920b236b4b760b11b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b336119676000546001600160a01b031690565b6001600160a01b03161480611980575061198033611321565b61199c5760405162461bcd60e51b815260040161067d90612f6d565b6119a7600782612d1f565b604080518082018252601081526f2a37b5b2b724b73337a6b0b730b3b2b960811b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b6119fe81610d40565b8015611a9b5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611a77573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a9b9190613016565b611af55760405162461bcd60e51b815260206004820152602560248201527f526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365205360448201526432ba3a32b960d91b606482015260840161067d565b60085460405163f898178960e01b81526001600160a01b0384811660048301529091169063f898178990602401610c16565b33611b3a6000546001600160a01b031690565b6001600160a01b03161480611b535750611b5333611321565b611b6f5760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611bc2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611be69190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611c23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c479190612ff9565b604051631c6db9c560e31b81526001600160a01b038381166004830152919091169063e36dce28906024016107ee565b611c8081612b53565b8015611d1d5750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611cf9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d1d9190613016565b611d395760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611d8c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db09190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ded573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e119190612ff9565b60405163b93d28eb60e01b81526001600160a01b038481166004830152919091169063b93d28eb90602401610c16565b611e4a81611628565b8015611ee75750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015611ec3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ee79190613016565b611f035760405162461bcd60e51b815260040161067d90613193565b60085460405163cbf3f86160e01b81526001600160a01b0384811660048301529091169063cbf3f86190602401610c16565b33611f486000546001600160a01b031690565b6001600160a01b03161480611f615750611f6133611321565b611f7d5760405162461bcd60e51b815260040161067d90612f6d565b611f88600482612d1f565b604080518082018252601181527021b7b6b83634b0b731b2a6b0b730b3b2b960791b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b33611fea6000546001600160a01b031690565b6001600160a01b03161480612003575061200333611321565b61201f5760405162461bcd60e51b815260040161067d90612f6d565b6008546040516351411b3360e01b81526001600160a01b038381166004830152909116906351411b33906024016107ee565b336120646000546001600160a01b031690565b6001600160a01b0316148061207d575061207d33611321565b6120995760405162461bcd60e51b815260040161067d90612f6d565b6120a4600682612d1f565b604080518082018252601681527524b9b9bab2b939a932b3b4b9ba393ca6b0b730b3b2b960511b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b3361210b6000546001600160a01b031690565b6001600160a01b03161480612124575061212433611321565b6121405760405162461bcd60e51b815260040161067d90612f6d565b61214b600282612d1f565b60408051808201825260158152742932b3b4b9ba393ca0b2323932b9b9a9b2ba3a32b960591b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b336121b16000546001600160a01b031690565b6001600160a01b031614806121ca57506121ca33611321565b6121e65760405162461bcd60e51b815260040161067d90612f6d565b6121f1600382612d1f565b604080518082018252601081526f21b7b6b83634b0b731b2a9b2ba3a32b960811b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b61224881610d4d565b80156122e55750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa1580156122c1573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122e59190613016565b6123015760405162461bcd60e51b815260040161067d906130b4565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612354573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123789190612ff9565b6001600160a01b0316633b3e12f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156123b5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123d99190612ff9565b6001600160a01b031663c7b22551836040518263ffffffff1660e01b8152600401610c1691815260200190565b336124196000546001600160a01b031690565b6001600160a01b03161480612432575061243233611321565b61244e5760405162461bcd60e51b815260040161067d90612f6d565b612459600582612b60565b604080518082018252601481527321b630b4b6a932b3b4b9ba393ca6b0b730b3b2b960611b602082015290516001600160a01b038316906000805160206131df833981519152906106e4908490612fa4565b336124be6000546001600160a01b031690565b6001600160a01b031614806124d757506124d733611321565b6124f35760405162461bcd60e51b815260040161067d90612f6d565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061256a9190612ff9565b604051633389036760e21b81526001600160a01b038381166004830152919091169063ce240d9c906024016107ee565b6125a381611628565b80156126405750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa15801561261c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126409190613016565b61265c5760405162461bcd60e51b815260040161067d90613193565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa1580156126af573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906126d39190612ff9565b60405163670af6a960e01b81526001600160a01b038481166004830152919091169063670af6a990602401610c16565b61270c81611628565b80156127a95750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015612785573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127a99190613016565b6127c55760405162461bcd60e51b815260040161067d90613193565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612818573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061283c9190612ff9565b60405163e744d78960e01b81526001600160a01b038481166004830152919091169063e744d78990602401610c16565b612874612c75565b6001600160a01b0381166128d95760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161067d565b6128e281612ccf565b50565b336128f86000546001600160a01b031690565b6001600160a01b03161480612911575061291133611321565b61292d5760405162461bcd60e51b815260040161067d90612f6d565b612938600582612d1f565b604080518082018252601481527321b630b4b6a932b3b4b9ba393ca6b0b730b3b2b960611b602082015290516001600160a01b038316906000805160206131ff833981519152906106e4908490612fa4565b61299381612b53565b8015612a305750604080513360208201526001600160a01b0383169163d202158d910160408051601f198184030181529082905280516020909101206001600160e01b031960e084901b168252600482015260026024820152604401602060405180830381865afa158015612a0c573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a309190613016565b612a4c5760405162461bcd60e51b815260040161067d906130fc565b600860009054906101000a90046001600160a01b03166001600160a01b031663134e18f46040518163ffffffff1660e01b8152600401602060405180830381865afa158015612a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ac39190612ff9565b6001600160a01b031663b4f3fcb76040518163ffffffff1660e01b8152600401602060405180830381865afa158015612b00573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612b249190612ff9565b6001600160a01b0316639f63ea988585856040518463ffffffff1660e01b815260040161106693929190613146565b60006106fd600683612be2565b612b6a8282612be2565b612bc05760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b606482015260840161067d565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b60006001600160a01b038216612c455760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b606482015260840161067d565b506001600160a01b03166000908152602091909152604090205460ff1690565b6000600482106106fd5750503590565b6000546001600160a01b031633146113e75760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161067d565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b612d298282612be2565b15612d765760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c6500604482015260640161067d565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b6001600160a01b03811681146128e257600080fd5b600060208284031215612dc257600080fd5b8135612dcd81612d9b565b9392505050565b60008083601f840112612de657600080fd5b50813567ffffffffffffffff811115612dfe57600080fd5b602083019150836020828501011115612e1657600080fd5b9250929050565b600080600060408486031215612e3257600080fd5b833567ffffffffffffffff811115612e4957600080fd5b612e5586828701612dd4565b9094509250506020840135612e6981612d9b565b809150509250925092565b60008060408385031215612e8757600080fd5b823591506020830135612e9981612d9b565b809150509250929050565b60008060008060608587031215612eba57600080fd5b8435612ec581612d9b565b9350602085013567ffffffffffffffff80821115612ee257600080fd5b818701915087601f830112612ef657600080fd5b813581811115612f0557600080fd5b8860208260051b8501011115612f1a57600080fd5b6020830195508094505050506040850135612f3481612d9b565b939692955090935050565b60008060408385031215612f5257600080fd5b8235612f5d81612d9b565b91506020830135612e9981612d9b565b60208082526019908201527f526f6c653a2053656e646572206973204e4f542041646d696e00000000000000604082015260600190565b600060208083528351808285015260005b81811015612fd157858101830151858201604001528201612fb5565b81811115612fe3576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561300b57600080fd5b8151612dcd81612d9b565b60006020828403121561302857600080fd5b81518015158114612dcd57600080fd5b6020808252602d908201527f526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d60408201526c30ba34b7b71026b0b730b3b2b960991b606082015260800190565b60208152816020820152818360408301376000818301604090810191909152601f909201601f19160101919050565b60208082526028908201527f526f6c653a2053656e646572206973204e4f5420436c61696d526567697374726040820152673ca6b0b730b3b2b960c11b606082015260800190565b6020808252602a908201527f526f6c653a2053656e646572206973204e4f54204973737565727352656769736040820152693a393ca6b0b730b3b2b960b11b606082015260800190565b6001600160a01b0384168152604060208201819052810182905260006001600160fb1b0383111561317657600080fd5b8260051b8085606085013760009201606001918252509392505050565b6020808252602b908201527f526f6c653a2053656e646572206973204e4f542052656769737472792041646460408201526a3932b9b99029b2ba3a32b960a91b60608201526080019056fed211483f91fc6eff862467f8de606587a30c8fc9981056f051b897a418df803abfec83d64eaa953f2708271a023ab9ee82057f8f3578d548c1a4ba0b5b700489a2646970667358221220d3965af2de1c340262921f02ac4e05dc73b7fb24a7bf4265f79f6e18bba9cc7064736f6c634300080f0033",
  "immutableReferences": {},
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:86",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:86",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:86"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:86"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:86",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:86",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:86"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:86"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:86"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:86"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:86"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:86"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:86",
                "type": ""
              }
            ],
            "src": "14:290:86"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 86,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:13276:86",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:86",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "59:86:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "123:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "132:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "135:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "125:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "125:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "125:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "82:5:86"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "93:5:86"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "108:3:86",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "113:1:86",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "104:3:86"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "104:11:86"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "117:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "100:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "100:19:86"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "89:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "89:31:86"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "79:2:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "79:42:86"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "72:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "72:50:86"
                  },
                  "nodeType": "YulIf",
                  "src": "69:70:86"
                }
              ]
            },
            "name": "validator_revert_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "48:5:86",
                "type": ""
              }
            ],
            "src": "14:131:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "220:177:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "266:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "275:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "278:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "268:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "268:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "268:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "241:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "250:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "237:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "237:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "262:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "233:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "233:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "230:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "291:36:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "317:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "304:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "304:23:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "295:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "361:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "336:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "336:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "336:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "376:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "386:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "376:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "186:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "197:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "209:6:86",
                "type": ""
              }
            ],
            "src": "150:247:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "497:92:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "507:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "519:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "530:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "515:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "515:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "507:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "549:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "574:6:86"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "567:6:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "567:14:86"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "560:6:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "560:22:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "542:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "542:41:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "542:41:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "466:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "477:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "488:4:86",
                "type": ""
              }
            ],
            "src": "402:187:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "667:275:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "716:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "725:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "728:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "718:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "718:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "718:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "695:6:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "703:4:86",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "691:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "691:17:86"
                          },
                          {
                            "name": "end",
                            "nodeType": "YulIdentifier",
                            "src": "710:3:86"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "687:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "687:27:86"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "680:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "680:35:86"
                  },
                  "nodeType": "YulIf",
                  "src": "677:55:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "741:30:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "764:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "751:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:20:86"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "741:6:86"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "814:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "823:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "826:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "816:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "816:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "816:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "786:6:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "794:18:86",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "783:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "783:30:86"
                  },
                  "nodeType": "YulIf",
                  "src": "780:50:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "839:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "855:6:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "863:4:86",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "851:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "851:17:86"
                  },
                  "variableNames": [
                    {
                      "name": "arrayPos",
                      "nodeType": "YulIdentifier",
                      "src": "839:8:86"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "920:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "929:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "932:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "922:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "922:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "922:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "891:6:86"
                              },
                              {
                                "name": "length",
                                "nodeType": "YulIdentifier",
                                "src": "899:6:86"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "887:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "887:19:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "908:4:86",
                            "type": "",
                            "value": "0x20"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "883:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "883:30:86"
                      },
                      {
                        "name": "end",
                        "nodeType": "YulIdentifier",
                        "src": "915:3:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "880:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "880:39:86"
                  },
                  "nodeType": "YulIf",
                  "src": "877:59:86"
                }
              ]
            },
            "name": "abi_decode_string_calldata",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "630:6:86",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "638:3:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "arrayPos",
                "nodeType": "YulTypedName",
                "src": "646:8:86",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "656:6:86",
                "type": ""
              }
            ],
            "src": "594:348:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1072:439:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1118:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1127:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1130:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1120:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1120:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1120:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1093:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1102:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1089:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1089:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1114:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1085:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1085:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "1082:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1143:37:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1170:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1157:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1157:23:86"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "1147:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1223:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1232:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1235:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1225:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1225:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1225:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1195:6:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1203:18:86",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1192:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1192:30:86"
                  },
                  "nodeType": "YulIf",
                  "src": "1189:50:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1248:85:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1305:9:86"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "1316:6:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1301:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1301:22:86"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1325:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "1274:26:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1274:59:86"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "1252:8:86",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "1262:8:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1342:18:86",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "1352:8:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1342:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1369:18:86",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "1379:8:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1369:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1396:45:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1426:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1437:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1422:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1422:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1409:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1409:32:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1400:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1475:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1450:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1450:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1450:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1490:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1500:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "1490:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_string_calldata_ptrt_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1022:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1033:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1045:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1053:6:86",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "1061:6:86",
                "type": ""
              }
            ],
            "src": "947:564:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1621:228:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1667:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1676:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1679:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1669:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1669:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1669:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1642:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1651:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1638:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1638:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1663:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1634:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1634:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "1631:52:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1692:33:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1715:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1702:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1702:23:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1692:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1734:45:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1764:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1775:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1760:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1760:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1747:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1747:32:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "1738:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1813:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "1788:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1788:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1788:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1828:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1838:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "1828:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_uint256t_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1579:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1590:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1602:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "1610:6:86",
                "type": ""
              }
            ],
            "src": "1516:333:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2032:752:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2078:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2087:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2090:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2080:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2080:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2080:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2053:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2062:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2049:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2049:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2074:2:86",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2045:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2045:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2042:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2103:36:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2129:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2116:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2116:23:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2107:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "2173:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2148:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2148:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2148:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2188:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2198:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2188:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2212:46:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2243:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2254:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2239:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2239:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2226:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2226:32:86"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2216:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2267:28:86",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "2277:18:86",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "2271:2:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2322:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2331:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2334:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2324:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2324:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2324:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2310:6:86"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2318:2:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2307:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2307:14:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2304:34:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2347:32:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2361:9:86"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "2372:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2357:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2357:22:86"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "2351:2:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2427:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2436:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2439:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2429:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2429:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2429:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2406:2:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2410:4:86",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2402:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2402:13:86"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2417:7:86"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "2398:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2398:27:86"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2391:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2391:35:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2388:55:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2452:30:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2479:2:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2466:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2466:16:86"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "2456:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2509:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2518:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2521:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2511:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2511:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2511:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "2497:6:86"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "2505:2:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2494:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2494:14:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2491:34:86"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2583:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2592:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2595:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2585:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2585:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2585:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "2548:2:86"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2556:1:86",
                                    "type": "",
                                    "value": "5"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2559:6:86"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "2552:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2552:14:86"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2544:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2544:23:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2569:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2540:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2540:32:86"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "2574:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "2537:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2537:45:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2534:65:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2608:21:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "2622:2:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2626:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2618:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2618:11:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2608:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2638:16:86",
                  "value": {
                    "name": "length",
                    "nodeType": "YulIdentifier",
                    "src": "2648:6:86"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "2638:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2663:47:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2695:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2706:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2691:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2691:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2678:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2678:32:86"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "2667:7:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "2744:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "2719:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2719:33:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2719:33:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2761:17:86",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "2771:7:86"
                  },
                  "variableNames": [
                    {
                      "name": "value3",
                      "nodeType": "YulIdentifier",
                      "src": "2761:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IClaimIssuer_$1456t_array$_t_uint256_$dyn_calldata_ptrt_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1974:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1985:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1997:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2005:6:86",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2013:6:86",
                "type": ""
              },
              {
                "name": "value3",
                "nodeType": "YulTypedName",
                "src": "2021:6:86",
                "type": ""
              }
            ],
            "src": "1854:930:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2913:439:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2959:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2968:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2971:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2961:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2961:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2961:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2934:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2943:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2930:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2930:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2955:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2926:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2926:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "2923:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2984:37:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3011:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2998:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2998:23:86"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "2988:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3064:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3073:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3076:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3066:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3066:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3066:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "3036:6:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3044:18:86",
                        "type": "",
                        "value": "0xffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "3033:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:30:86"
                  },
                  "nodeType": "YulIf",
                  "src": "3030:50:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3089:85:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3146:9:86"
                          },
                          {
                            "name": "offset",
                            "nodeType": "YulIdentifier",
                            "src": "3157:6:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3142:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3142:22:86"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "3166:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_string_calldata",
                      "nodeType": "YulIdentifier",
                      "src": "3115:26:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3115:59:86"
                  },
                  "variables": [
                    {
                      "name": "value0_1",
                      "nodeType": "YulTypedName",
                      "src": "3093:8:86",
                      "type": ""
                    },
                    {
                      "name": "value1_1",
                      "nodeType": "YulTypedName",
                      "src": "3103:8:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3183:18:86",
                  "value": {
                    "name": "value0_1",
                    "nodeType": "YulIdentifier",
                    "src": "3193:8:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3183:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3210:18:86",
                  "value": {
                    "name": "value1_1",
                    "nodeType": "YulIdentifier",
                    "src": "3220:8:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3210:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3237:45:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3267:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3278:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3263:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3263:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3250:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3250:32:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3241:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3316:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3291:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3291:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3291:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3331:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3341:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value2",
                      "nodeType": "YulIdentifier",
                      "src": "3331:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_calldata_ptrt_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2863:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2874:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2886:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2894:6:86",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "2902:6:86",
                "type": ""
              }
            ],
            "src": "2789:563:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3462:301:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3508:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3517:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3520:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "3510:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3510:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "3510:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "3483:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3492:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "3479:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3479:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3504:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "3475:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3475:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "3472:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3533:36:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3559:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3546:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3546:23:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "3537:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3603:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3578:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3578:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3578:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3618:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "3628:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "3618:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3642:47:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3674:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3685:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3670:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3670:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "3657:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3657:32:86"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "3646:7:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "3723:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "3698:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3698:33:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3698:33:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3740:17:86",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "3750:7:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "3740:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3420:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "3431:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3443:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "3451:6:86",
                "type": ""
              }
            ],
            "src": "3357:406:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3869:102:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3879:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3891:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3902:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3887:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3887:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3879:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3921:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "3936:6:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3952:3:86",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3957:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "3948:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3948:11:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3961:1:86",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "3944:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "3944:19:86"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "3932:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3932:32:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3914:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3914:51:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3914:51:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3838:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "3849:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3860:4:86",
                "type": ""
              }
            ],
            "src": "3768:203:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4102:301:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "4148:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4157:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4160:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "4150:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4150:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "4150:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "4123:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4132:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "4119:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4119:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4144:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "4115:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4115:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "4112:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4173:36:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4199:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4186:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4186:23:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "4177:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "4243:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4218:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4218:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4218:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4258:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "4268:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "4258:6:86"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4282:47:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4314:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4325:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4310:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4310:18:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "4297:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4297:32:86"
                  },
                  "variables": [
                    {
                      "name": "value_1",
                      "nodeType": "YulTypedName",
                      "src": "4286:7:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value_1",
                        "nodeType": "YulIdentifier",
                        "src": "4363:7:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "4338:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4338:33:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4338:33:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4380:17:86",
                  "value": {
                    "name": "value_1",
                    "nodeType": "YulIdentifier",
                    "src": "4390:7:86"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "4380:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IClaimIssuer_$1456t_contract$_IIdentity_$1743",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4060:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "4071:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4083:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "4091:6:86",
                "type": ""
              }
            ],
            "src": "3976:427:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4525:102:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "4535:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4547:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4558:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4543:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4543:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4535:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4577:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "4592:6:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4608:3:86",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4613:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "4604:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4604:11:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4617:1:86",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4600:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4600:19:86"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "4588:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4588:32:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4570:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4570:51:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4570:51:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IToken_$15986__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4494:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "4505:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4516:4:86",
                "type": ""
              }
            ],
            "src": "4408:219:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4806:175:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4823:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4834:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4816:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4816:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4816:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4857:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4868:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4853:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4853:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4873:2:86",
                        "type": "",
                        "value": "25"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4846:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4846:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4846:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "4896:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "4907:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "4892:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4892:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f542041646d696e",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "4912:27:86",
                        "type": "",
                        "value": "Role: Sender is NOT Admin"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "4885:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4885:55:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "4885:55:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4949:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "4961:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4972:2:86",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4957:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4957:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "4949:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e0747ebade9609a75d2f7261d19516256a9edb89fa8d2c0d89fd74d44bfd7b24__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "4783:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "4797:4:86",
                "type": ""
              }
            ],
            "src": "4632:349:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5107:476:86",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5117:12:86",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5127:2:86",
                    "type": "",
                    "value": "32"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "5121:2:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5145:9:86"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "5156:2:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5138:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5138:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5138:21:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5168:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5188:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5182:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5182:13:86"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "5172:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5215:9:86"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "5226:2:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5211:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5211:18:86"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5231:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5204:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5204:34:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5204:34:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5247:10:86",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "5256:1:86",
                    "type": "",
                    "value": "0"
                  },
                  "variables": [
                    {
                      "name": "i",
                      "nodeType": "YulTypedName",
                      "src": "5251:1:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5316:90:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5345:9:86"
                                    },
                                    {
                                      "name": "i",
                                      "nodeType": "YulIdentifier",
                                      "src": "5356:1:86"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5341:3:86"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5341:17:86"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5360:2:86",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5337:3:86"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5337:26:86"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5379:6:86"
                                        },
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5387:1:86"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5375:3:86"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5375:14:86"
                                    },
                                    {
                                      "name": "_1",
                                      "nodeType": "YulIdentifier",
                                      "src": "5391:2:86"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5371:3:86"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5371:23:86"
                                }
                              ],
                              "functionName": {
                                "name": "mload",
                                "nodeType": "YulIdentifier",
                                "src": "5365:5:86"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5365:30:86"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5330:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5330:66:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5330:66:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5277:1:86"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5280:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "5274:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5274:13:86"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "5288:19:86",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "5290:15:86",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "5299:1:86"
                            },
                            {
                              "name": "_1",
                              "nodeType": "YulIdentifier",
                              "src": "5302:2:86"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "5295:3:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5295:10:86"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "5290:1:86"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "5270:3:86",
                    "statements": []
                  },
                  "src": "5266:140:86"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5440:66:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "headStart",
                                      "nodeType": "YulIdentifier",
                                      "src": "5469:9:86"
                                    },
                                    {
                                      "name": "length",
                                      "nodeType": "YulIdentifier",
                                      "src": "5480:6:86"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "5465:3:86"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5465:22:86"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5489:2:86",
                                  "type": "",
                                  "value": "64"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "5461:3:86"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5461:31:86"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5494:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "mstore",
                            "nodeType": "YulIdentifier",
                            "src": "5454:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5454:42:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5454:42:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "5421:1:86"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "5424:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5418:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5418:13:86"
                  },
                  "nodeType": "YulIf",
                  "src": "5415:91:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5515:62:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5531:9:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "5550:6:86"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5558:2:86",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5546:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5546:15:86"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5567:2:86",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "5563:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5563:7:86"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "5542:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "5542:29:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5527:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5527:45:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5574:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5523:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5523:54:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5515:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5076:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5087:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5098:4:86",
                "type": ""
              }
            ],
            "src": "4986:597:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5689:170:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5735:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5744:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5747:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "5737:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5737:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5737:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "5710:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5719:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5706:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5706:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5731:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "5702:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5702:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "5699:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "5760:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5779:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "5773:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5773:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "5764:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "5823:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "5798:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5798:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5798:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5838:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "5848:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "5838:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ICompliance_$9302_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5655:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "5666:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5678:6:86",
                "type": ""
              }
            ],
            "src": "5588:271:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6001:119:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6011:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6023:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6034:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6019:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6019:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6011:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6053:9:86"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "6064:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6046:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6046:25:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6046:25:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6091:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6102:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6087:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6087:18:86"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "6107:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6080:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6080:34:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6080:34:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32_t_rational_2_by_1__to_t_bytes32_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5962:9:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "5973:6:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5981:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5992:4:86",
                "type": ""
              }
            ],
            "src": "5864:256:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6203:199:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6249:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6258:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6261:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6251:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6251:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6251:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "6224:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6233:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "6220:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6220:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6245:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "6216:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6216:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "6213:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6274:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6293:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "6287:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6287:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "6278:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6356:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6365:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "6368:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "6358:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6358:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6358:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "6325:5:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6346:5:86"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "6339:6:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6339:13:86"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6332:6:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6332:21:86"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "6322:2:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6322:32:86"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6315:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6315:40:86"
                  },
                  "nodeType": "YulIf",
                  "src": "6312:60:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6381:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "6391:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "6381:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bool_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6169:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "6180:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6192:6:86",
                "type": ""
              }
            ],
            "src": "6125:277:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6581:235:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6598:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6609:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6591:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6591:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6591:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6632:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6643:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6628:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6628:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6648:2:86",
                        "type": "",
                        "value": "45"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6621:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6621:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6621:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6671:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6682:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6667:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6667:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6687:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT Token Inform"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6660:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6660:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6660:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "6742:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "6753:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6738:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6738:18:86"
                      },
                      {
                        "hexValue": "6174696f6e204d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "6758:15:86",
                        "type": "",
                        "value": "ation Manager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6731:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6731:43:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6731:43:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6783:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6795:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6806:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "6791:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6791:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "6783:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6558:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6572:4:86",
                "type": ""
              }
            ],
            "src": "6407:409:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6952:259:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "6969:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6980:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6962:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6962:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6962:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7003:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7014:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "6999:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6999:18:86"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7019:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6992:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6992:34:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6992:34:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7052:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7063:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7048:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7048:18:86"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "7068:6:86"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "7076:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "7035:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7035:48:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7035:48:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "7107:9:86"
                              },
                              {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "7118:6:86"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "7103:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7103:22:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7127:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7099:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7099:31:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7132:1:86",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7092:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7092:42:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7092:42:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7143:62:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7159:9:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "7178:6:86"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7186:2:86",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7174:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7174:15:86"
                              },
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7195:2:86",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "7191:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7191:7:86"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "7170:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "7170:29:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7155:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7155:45:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7202:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7151:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7151:54:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7143:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "6913:9:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "6924:6:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "6932:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "6943:4:86",
                "type": ""
              }
            ],
            "src": "6821:390:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7390:230:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7407:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7418:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7400:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7400:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7400:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7441:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7452:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7437:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7437:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7457:2:86",
                        "type": "",
                        "value": "40"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7430:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7430:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7430:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7480:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7491:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7476:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7476:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436c61696d52656769737472",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7496:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT ClaimRegistr"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7469:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7469:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7469:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7551:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "7562:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "7547:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7547:18:86"
                      },
                      {
                        "hexValue": "794d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "7567:10:86",
                        "type": "",
                        "value": "yManager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "7540:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7540:38:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7540:38:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7587:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7599:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7610:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "7595:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7595:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "7587:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7367:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "7381:4:86",
                "type": ""
              }
            ],
            "src": "7216:404:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "7733:170:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "7779:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7788:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "7791:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "7781:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "7781:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "7781:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "7754:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "7763:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "7750:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "7750:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "7775:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "7746:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7746:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "7743:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "7804:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "7823:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "7817:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7817:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "7808:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "7867:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "7842:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "7842:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "7842:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "7882:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "7892:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "7882:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IIdentityRegistry_$10365_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7699:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7710:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "7722:6:86",
                "type": ""
              }
            ],
            "src": "7625:278:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8019:170:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8065:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8074:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8077:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8067:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8067:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8067:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8040:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8049:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8036:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8036:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8061:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8032:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8032:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "8029:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8090:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8109:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8103:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8103:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8094:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "8153:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "8128:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8128:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8128:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8168:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "8178:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "8168:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_IClaimTopicsRegistry_$10172_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "7985:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "7996:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8008:6:86",
                "type": ""
              }
            ],
            "src": "7908:281:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8295:76:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "8305:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8317:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8328:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8313:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8313:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8305:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8347:9:86"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "8358:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8340:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8340:25:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8340:25:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8264:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8275:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8286:4:86",
                "type": ""
              }
            ],
            "src": "8194:177:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8550:232:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8567:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8578:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8560:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8560:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8560:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8601:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8612:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8597:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8597:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8617:2:86",
                        "type": "",
                        "value": "42"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8590:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8590:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8590:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8640:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8651:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8636:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8636:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420497373756572735265676973",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8656:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT IssuersRegis"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8629:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8629:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8629:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8711:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "8722:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "8707:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8707:18:86"
                      },
                      {
                        "hexValue": "7472794d616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "8727:12:86",
                        "type": "",
                        "value": "tryManager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "8700:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8700:40:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "8700:40:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "8749:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8761:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8772:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "8757:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8757:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "8749:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8527:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "8541:4:86",
                "type": ""
              }
            ],
            "src": "8376:406:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "8901:170:86",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "8947:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8956:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "8959:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "8949:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "8949:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "8949:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "8922:7:86"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "8931:9:86"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "8918:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "8918:23:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "8943:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "8914:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8914:32:86"
                  },
                  "nodeType": "YulIf",
                  "src": "8911:52:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "8972:29:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "8991:9:86"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "8985:5:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "8985:16:86"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "8976:5:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "9035:5:86"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_address",
                      "nodeType": "YulIdentifier",
                      "src": "9010:24:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9010:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9010:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9050:15:86",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "9060:5:86"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "9050:6:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_contract$_ITrustedIssuersRegistry_$10584_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "8867:9:86",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "8878:7:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "8890:6:86",
                "type": ""
              }
            ],
            "src": "8787:284:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9286:394:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9303:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "9318:6:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9334:3:86",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9339:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "9330:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9330:11:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9343:1:86",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "9326:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9326:19:86"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "9314:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9314:32:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9296:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9296:51:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9296:51:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9367:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9378:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9363:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9363:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9383:2:86",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9356:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9356:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9356:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9406:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9417:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9402:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9402:18:86"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9422:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9395:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9395:34:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9395:34:86"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "9473:16:86",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9482:1:86",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "9485:1:86",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "9475:6:86"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "9475:12:86"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "9475:12:86"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9444:6:86"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9460:3:86",
                                "type": "",
                                "value": "251"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "9465:1:86",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "9456:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "9456:11:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9469:1:86",
                            "type": "",
                            "value": "1"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "9452:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9452:19:86"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "9441:2:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9441:31:86"
                  },
                  "nodeType": "YulIf",
                  "src": "9438:51:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9498:28:86",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9516:1:86",
                        "type": "",
                        "value": "5"
                      },
                      {
                        "name": "value2",
                        "nodeType": "YulIdentifier",
                        "src": "9519:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "shl",
                      "nodeType": "YulIdentifier",
                      "src": "9512:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9512:14:86"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "9502:6:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9552:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9563:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9548:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9548:18:86"
                      },
                      {
                        "name": "value1",
                        "nodeType": "YulIdentifier",
                        "src": "9568:6:86"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "9576:6:86"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "9535:12:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9535:48:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9535:48:86"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "9592:41:86",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9610:9:86"
                          },
                          {
                            "name": "length",
                            "nodeType": "YulIdentifier",
                            "src": "9621:6:86"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9606:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9606:22:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9630:2:86",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "9602:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9602:31:86"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "9596:2:86",
                      "type": ""
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "9649:2:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9653:1:86",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9642:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9642:13:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9642:13:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "9664:10:86",
                  "value": {
                    "name": "_1",
                    "nodeType": "YulIdentifier",
                    "src": "9672:2:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "9664:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IClaimIssuer_$1456_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9239:9:86",
                "type": ""
              },
              {
                "name": "value2",
                "nodeType": "YulTypedName",
                "src": "9250:6:86",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "9258:6:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "9266:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9277:4:86",
                "type": ""
              }
            ],
            "src": "9076:604:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "9859:228:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "9876:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9887:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9869:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9869:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9869:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9910:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9921:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9906:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9906:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "9926:2:86",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9899:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9899:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9899:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "9949:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "9960:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "9945:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "9945:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365204d",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "9965:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT Compliance M"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "9938:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "9938:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "9938:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10020:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10031:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10016:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10016:18:86"
                      },
                      {
                        "hexValue": "616e61676572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10036:8:86",
                        "type": "",
                        "value": "anager"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10009:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10009:36:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10009:36:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10054:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10066:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10077:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10062:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10062:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10054:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "9836:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "9850:4:86",
                "type": ""
              }
            ],
            "src": "9685:402:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10191:103:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10201:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10213:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10224:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10209:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10209:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10201:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10243:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10258:6:86"
                          },
                          {
                            "arguments": [
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10270:3:86",
                                "type": "",
                                "value": "224"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10275:10:86",
                                "type": "",
                                "value": "0xffffffff"
                              }
                            ],
                            "functionName": {
                              "name": "shl",
                              "nodeType": "YulIdentifier",
                              "src": "10266:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10266:20:86"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10254:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10254:33:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10236:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10236:52:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10236:52:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10160:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10171:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10182:4:86",
                "type": ""
              }
            ],
            "src": "10092:202:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10473:227:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10490:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10501:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10483:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10483:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10483:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10524:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10535:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10520:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10520:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10540:2:86",
                        "type": "",
                        "value": "37"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10513:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10513:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10513:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10563:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10574:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10559:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10559:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e63652053",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10579:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT Compliance S"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10552:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10552:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10552:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "10634:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "10645:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "10630:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10630:18:86"
                      },
                      {
                        "hexValue": "6574746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "10650:7:86",
                        "type": "",
                        "value": "etter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10623:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10623:35:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10623:35:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "10667:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10679:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10690:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10675:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10675:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10667:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10450:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10464:4:86",
                "type": ""
              }
            ],
            "src": "10299:401:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "10827:102:86",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "10837:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10849:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "10860:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "10845:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10845:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "10837:4:86"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "10879:9:86"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "10894:6:86"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10910:3:86",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10915:1:86",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "10906:3:86"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10906:11:86"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "10919:1:86",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "10902:3:86"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "10902:19:86"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "10890:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "10890:32:86"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "10872:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "10872:51:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "10872:51:86"
                }
              ]
            },
            "name": "abi_encode_tuple_t_contract$_IClaimIssuer_$1456__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "10796:9:86",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "10807:6:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "10818:4:86",
                "type": ""
              }
            ],
            "src": "10705:224:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11108:233:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11125:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11136:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11118:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11118:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11118:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11159:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11170:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11155:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11155:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11175:2:86",
                        "type": "",
                        "value": "43"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11148:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11148:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11148:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11198:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11209:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11194:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11194:18:86"
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420526567697374727920416464",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11214:34:86",
                        "type": "",
                        "value": "Role: Sender is NOT Registry Add"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11187:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11187:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11187:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11269:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11280:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11265:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11265:18:86"
                      },
                      {
                        "hexValue": "7265737320536574746572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11285:13:86",
                        "type": "",
                        "value": "ress Setter"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11258:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11258:41:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11258:41:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11308:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11320:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11331:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11316:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11316:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11308:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11085:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11099:4:86",
                "type": ""
              }
            ],
            "src": "10934:407:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11520:228:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11537:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11548:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11530:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11530:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11530:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11571:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11582:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11567:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11567:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11587:2:86",
                        "type": "",
                        "value": "38"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11560:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11560:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11560:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11610:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11621:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11606:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11606:18:86"
                      },
                      {
                        "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11626:34:86",
                        "type": "",
                        "value": "Ownable: new owner is the zero a"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11599:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11599:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11599:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11681:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11692:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11677:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11677:18:86"
                      },
                      {
                        "hexValue": "646472657373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "11697:8:86",
                        "type": "",
                        "value": "ddress"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11670:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11670:36:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11670:36:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "11715:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11727:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11738:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "11723:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11723:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "11715:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11497:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11511:4:86",
                "type": ""
              }
            ],
            "src": "11346:402:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "11927:223:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "11944:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11955:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11937:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11937:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11937:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "11978:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "11989:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "11974:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "11974:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "11994:2:86",
                        "type": "",
                        "value": "33"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "11967:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "11967:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "11967:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12017:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12028:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12013:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12013:18:86"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12033:34:86",
                        "type": "",
                        "value": "Roles: account does not have rol"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12006:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12006:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12006:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12088:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12099:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12084:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12084:18:86"
                      },
                      {
                        "hexValue": "65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12104:3:86",
                        "type": "",
                        "value": "e"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12077:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12077:31:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12077:31:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12117:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12129:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12140:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12125:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12125:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12117:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "11904:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "11918:4:86",
                "type": ""
              }
            ],
            "src": "11753:397:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12329:224:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12346:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12357:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12339:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12339:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12339:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12380:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12391:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12376:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12376:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12396:2:86",
                        "type": "",
                        "value": "34"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12369:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12369:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12369:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12419:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12430:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12415:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12415:18:86"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420697320746865207a65726f206164647265",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12435:34:86",
                        "type": "",
                        "value": "Roles: account is the zero addre"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12408:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12408:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12408:62:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12490:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12501:2:86",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12486:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12486:18:86"
                      },
                      {
                        "hexValue": "7373",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12506:4:86",
                        "type": "",
                        "value": "ss"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12479:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12479:32:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12479:32:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12520:27:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12532:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12543:3:86",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12528:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12528:19:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12520:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12306:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12320:4:86",
                "type": ""
              }
            ],
            "src": "12155:398:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "12732:182:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12749:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12760:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12742:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12742:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12742:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12783:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12794:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12779:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12779:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12799:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12772:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12772:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12772:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "12822:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "12833:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "12818:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "12818:18:86"
                      },
                      {
                        "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "12838:34:86",
                        "type": "",
                        "value": "Ownable: caller is not the owner"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "12811:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12811:62:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "12811:62:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "12882:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "12894:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "12905:2:86",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "12890:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "12890:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "12882:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "12709:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "12723:4:86",
                "type": ""
              }
            ],
            "src": "12558:356:86"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "13093:181:86",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13110:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13121:2:86",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13103:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13103:21:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13103:21:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13144:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13155:2:86",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13140:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13140:18:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13160:2:86",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13133:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13133:30:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13133:30:86"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "13183:9:86"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "13194:2:86",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "13179:3:86"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "13179:18:86"
                      },
                      {
                        "hexValue": "526f6c65733a206163636f756e7420616c72656164792068617320726f6c65",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "13199:33:86",
                        "type": "",
                        "value": "Roles: account already has role"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "13172:6:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13172:61:86"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "13172:61:86"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "13242:26:86",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "13254:9:86"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "13265:2:86",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "13250:3:86"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "13250:18:86"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "13242:4:86"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "13070:9:86",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "13084:4:86",
                "type": ""
              }
            ],
            "src": "12919:355:86"
          }
        ]
      },
      "contents": "{\n    { }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_string_calldata(offset, end) -> arrayPos, length\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        length := calldataload(offset)\n        if gt(length, 0xffffffffffffffff) { revert(0, 0) }\n        arrayPos := add(offset, 0x20)\n        if gt(add(add(offset, length), 0x20), end) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_string_calldata_ptrt_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_uint256t_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value1 := value\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$1456t_array$_t_uint256_$dyn_calldata_ptrt_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1, value2, value3\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_2)\n        if gt(length, _1) { revert(0, 0) }\n        if gt(add(add(_2, shl(5, length)), 32), dataEnd) { revert(0, 0) }\n        value1 := add(_2, 32)\n        value2 := length\n        let value_1 := calldataload(add(headStart, 64))\n        validator_revert_address(value_1)\n        value3 := value_1\n    }\n    function abi_decode_tuple_t_bytes_calldata_ptrt_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let value0_1, value1_1 := abi_decode_string_calldata(add(headStart, offset), dataEnd)\n        value0 := value0_1\n        value1 := value1_1\n        let value := calldataload(add(headStart, 32))\n        validator_revert_address(value)\n        value2 := value\n    }\n    function abi_decode_tuple_t_addresst_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_contract$_IClaimIssuer_$1456t_contract$_IIdentity_$1743(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_IToken_$15986__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_e0747ebade9609a75d2f7261d19516256a9edb89fa8d2c0d89fd74d44bfd7b24__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Role: Sender is NOT Admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := 0\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), 0)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_contract$_ICompliance_$9302_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_bytes32_t_rational_2_by_1__to_t_bytes32_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 45)\n        mstore(add(headStart, 64), \"Role: Sender is NOT Token Inform\")\n        mstore(add(headStart, 96), \"ation Manager\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_string_calldata_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), value1)\n        calldatacopy(add(headStart, 64), value0, value1)\n        mstore(add(add(headStart, value1), 64), 0)\n        tail := add(add(headStart, and(add(value1, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 40)\n        mstore(add(headStart, 64), \"Role: Sender is NOT ClaimRegistr\")\n        mstore(add(headStart, 96), \"yManager\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_contract$_IIdentityRegistry_$10365_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_decode_tuple_t_contract$_IClaimTopicsRegistry_$10172_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 42)\n        mstore(add(headStart, 64), \"Role: Sender is NOT IssuersRegis\")\n        mstore(add(headStart, 96), \"tryManager\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_contract$_ITrustedIssuersRegistry_$10584_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_contract$_IClaimIssuer_$1456_t_array$_t_uint256_$dyn_calldata_ptr__to_t_address_t_array$_t_uint256_$dyn_memory_ptr__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), 64)\n        mstore(add(headStart, 64), value2)\n        if gt(value2, sub(shl(251, 1), 1)) { revert(0, 0) }\n        let length := shl(5, value2)\n        calldatacopy(add(headStart, 96), value1, length)\n        let _1 := add(add(headStart, length), 96)\n        mstore(_1, 0)\n        tail := _1\n    }\n    function abi_encode_tuple_t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Role: Sender is NOT Compliance M\")\n        mstore(add(headStart, 96), \"anager\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_bytes4__to_t_bytes4__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, shl(224, 0xffffffff)))\n    }\n    function abi_encode_tuple_t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"Role: Sender is NOT Compliance S\")\n        mstore(add(headStart, 96), \"etter\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_contract$_IClaimIssuer_$1456__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 43)\n        mstore(add(headStart, 64), \"Role: Sender is NOT Registry Add\")\n        mstore(add(headStart, 96), \"ress Setter\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_7bd893145ac435f339bb7c288622d270324b7033b011f693aca172f5cbc3c257__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"Roles: account does not have rol\")\n        mstore(add(headStart, 96), \"e\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9d214fa89563f4e6456a3929327e54500ea1cde2c0ba9fb2035ec106190d682f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"Roles: account is the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_0f76c3a3e97a37fcdff532c2741c10933ebf2b769d5475388e30ae4f7155f13a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"Roles: account already has role\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 86,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "1490:19451:76:-:0;;;2229:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;936:32:12;719:10:24;936:18:12;:32::i;:::-;2267:5:76;:22;;-1:-1:-1;;;;;;2267:22:76;-1:-1:-1;;;;;2267:22:76;;;;;;;;;;1490:19451;;2433:187:12;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;14:290:86:-;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:86;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:86:o;:::-;1490:19451:76;;;;;;",
  "deployedSourceMap": "1490:19451:76:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2801:222:77;;;;;;:::i;:::-;;:::i;:::-;;3687:126;;;;;;:::i;:::-;;:::i;:::-;;;567:14:86;;560:22;542:41;;530:2;515:18;3687:126:77;;;;;;;;17522:173:76;;;;;;:::i;:::-;;:::i;5601:124:77:-;;;;;;:::i;:::-;;:::i;19258:126:76:-;;;;;;:::i;:::-;;:::i;19709:132::-;;;;;;:::i;:::-;;:::i;8161:332::-;;;;;;:::i;:::-;;:::i;15712:376::-;;;;;;:::i;:::-;;:::i;7357:324::-;;;;;;:::i;:::-;;:::i;3083:124:77:-;;;;;;:::i;:::-;;:::i;4305:132::-;;;;;;:::i;:::-;;:::i;3418:207::-;;;;;;:::i;:::-;;:::i;4027:210::-;;;;;;:::i;:::-;;:::i;13777:483:76:-;;;;;;:::i;:::-;;:::i;2182:189:77:-;;;;;;:::i;:::-;;:::i;4448:1402:76:-;;;;;;:::i;:::-;;:::i;1877:112:77:-;;;;;;:::i;:::-;;:::i;5316:225::-;;;;;;:::i;:::-;;:::i;1831:101:12:-;;;:::i;20766:173:76:-;;;;;;:::i;:::-;;:::i;18106:214::-;;;;;;:::i;:::-;;:::i;2441:134:77:-;;;;;;:::i;:::-;;:::i;20217:167:76:-;;;;;;:::i;:::-;;:::i;8983:346::-;;;;;;:::i;:::-;;:::i;5936:207:77:-;;;;;;:::i;:::-;;:::i;1201:85:12:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:12;1201:85;;;-1:-1:-1;;;;;3932:32:86;;;3914:51;;3902:2;3887:18;1201:85:12;3768:203:86;1995:181:77;;;;;;:::i;:::-;;:::i;5731:199::-;;;;;;:::i;:::-;;:::i;3654:327:76:-;;;;;;:::i;:::-;;:::i;18732:207::-;;;;;;:::i;:::-;;:::i;12810:398::-;;;;;;:::i;:::-;;:::i;2801:362::-;;;;;;:::i;:::-;;:::i;3819:202:77:-;;;;;;:::i;:::-;;:::i;16425:150:76:-;;;;;;:::i;:::-;;:::i;5093:217:77:-;;;;;;:::i;:::-;;:::i;2581:214::-;;;;;;:::i;:::-;;:::i;3213:199::-;;;;;;:::i;:::-;;:::i;14798:370:76:-;;;;;;:::i;:::-;;:::i;4660:219:77:-;;;;;;:::i;:::-;;:::i;16969:191:76:-;;;;;;:::i;:::-;;:::i;9875:393::-;;;;;;:::i;:::-;;:::i;10820:405::-;;;;;;:::i;:::-;;:::i;2081:198:12:-;;;;;;:::i;:::-;;:::i;4443:211:77:-;;;;;;:::i;:::-;;:::i;1601:19:76:-;;;;;-1:-1:-1;;;;;1601:19:76;;;11780:469;;;;;;:::i;:::-;;:::i;4951:136:77:-;;;;;;:::i;:::-;;:::i;2801:222::-;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;;;;;;;;;2883:37:::1;:22;2913:6:::0;2883:29:::1;:37::i;:::-;2930:45;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2930:45:77::1;::::0;::::1;::::0;2990:26;;-1:-1:-1;;;;;2990:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;2990:26:77;::::1;::::0;2930:45;;2990:26:::1;:::i;:::-;;;;;;;;2873:150;2801:222:::0;:::o;3687:126::-;3753:4;3776:30;:18;3799:6;3776:22;:30::i;:::-;3769:37;3687:126;-1:-1:-1;;3687:126:77:o;17522:173:76:-;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;17621:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;17621:5:76::1;-1:-1:-1::0;;;;;17621:16:76::1;;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;::::0;-1:-1:-1;;;17621:67:76;;-1:-1:-1;;;;;3932:32:86;;;17621:67:76::1;::::0;::::1;3914:51:86::0;17621:56:76;;;::::1;::::0;::::1;::::0;3887:18:86;;17621:67:76::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;17522:173:::0;:::o;5601:124:77:-;5666:4;5689:29;:17;5711:6;5689:21;:29::i;19258:126:76:-;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;19340:5:76::1;::::0;:37:::1;::::0;-1:-1:-1;;;19340:37:76;;-1:-1:-1;;;;;3932:32:86;;;19340:37:76::1;::::0;::::1;3914:51:86::0;19340:5:76;;::::1;::::0;:29:::1;::::0;3887:18:86;;19340:37:76::1;3768:203:86::0;19709:132:76;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;19794:5:76::1;::::0;:40:::1;::::0;-1:-1:-1;;;19794:40:76;;-1:-1:-1;;;;;3932:32:86;;;19794:40:76::1;::::0;::::1;3914:51:86::0;19794:5:76;;::::1;::::0;:32:::1;::::0;3887:18:86;;19794:40:76::1;3768:203:86::0;8161:332:76;8276:39;8303:10;8276:18;:39::i;:::-;:105;;;;-1:-1:-1;8354:22:76;;;8365:10;8354:22;;;3914:51:86;-1:-1:-1;;;;;8319:24:76;;;;;3887:18:86;8354:22:76;;;-1:-1:-1;;8354:22:76;;;;;;;;;;8344:33;;8354:22;8344:33;;;;-1:-1:-1;;;;;;8319:62:76;;;;;;;;;;6046:25:86;8379:1:76;6087:18:86;;;6080:34;6019:18;;8319:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8255:197;;;;-1:-1:-1;;;8255:197:76;;;;;;;:::i;:::-;8462:5;;:24;;-1:-1:-1;;;8462:24:76;;-1:-1:-1;;;;;8462:5:76;;;;:15;;:24;;8478:7;;;;8462:24;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8161:332;;;:::o;15712:376::-;15825:43;15856:10;15825:22;:43::i;:::-;:109;;;;-1:-1:-1;15907:22:76;;;15918:10;15907:22;;;3914:51:86;-1:-1:-1;;;;;15872:24:76;;;;;3887:18:86;15907:22:76;;;-1:-1:-1;;15907:22:76;;;;;;;;;;15897:33;;15907:22;15897:33;;;;-1:-1:-1;;;;;;15872:62:76;;;;;;;;;;6046:25:86;15932:1:76;6087:18:86;;;6080:34;6019:18;;15872:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15804:196;;;;-1:-1:-1;;;15804:196:76;;;;;;;:::i;:::-;16010:5;;;;;;;;;-1:-1:-1;;;;;16010:5:76;-1:-1:-1;;;;;16010:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16010:39:76;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;16010:58:76;;16069:11;16010:71;;;;;;;;;;;;;8340:25:86;;8328:2;8313:18;;8194:177;16010:71:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15712:376;;:::o;7357:324::-;7468:39;7495:10;7468:18;:39::i;:::-;:105;;;;-1:-1:-1;7546:22:76;;;7557:10;7546:22;;;3914:51:86;-1:-1:-1;;;;;7511:24:76;;;;;3887:18:86;7546:22:76;;;-1:-1:-1;;7546:22:76;;;;;;;;;;7536:33;;7546:22;7536:33;;;;-1:-1:-1;;;;;;7511:62:76;;;;;;;;;;6046:25:86;7571:1:76;6087:18:86;;;6080:34;6019:18;;7511:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7447:197;;;;-1:-1:-1;;;7447:197:76;;;;;;;:::i;:::-;7654:5;;:20;;-1:-1:-1;;;7654:20:76;;-1:-1:-1;;;;;7654:5:76;;;;:13;;:20;;7668:5;;;;7654:20;;;:::i;3083:124:77:-;3148:4;3171:29;:17;3193:6;3171:21;:29::i;4305:132::-;4374:4;4397:33;:21;4423:6;4397:25;:33::i;3418:207::-;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;3495:32:::1;:17;3520:6:::0;3495:24:::1;:32::i;:::-;3537:40;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;3537:40:77::1;::::0;::::1;::::0;3592:26;;-1:-1:-1;;;;;3592:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;3592:26:77;::::1;::::0;3537:40;;3592:26:::1;:::i;4027:210::-:0;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;4105:33:::1;:18;4131:6:::0;4105:25:::1;:33::i;:::-;4148:41;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;4148:41:77::1;::::0;::::1;::::0;4204:26;;-1:-1:-1;;;;;4204:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;4204:26:77;::::1;::::0;4148:41;;4204:26:::1;:::i;13777:483:76:-:0;13968:45;14001:10;13968:24;:45::i;:::-;:111;;;;-1:-1:-1;14052:22:76;;;14063:10;14052:22;;;3914:51:86;-1:-1:-1;;;;;14017:24:76;;;;;3887:18:86;14052:22:76;;;-1:-1:-1;;14052:22:76;;;;;;;;;;14042:33;;14052:22;14042:33;;;;-1:-1:-1;;;;;;14017:62:76;;;;;;;;;;6046:25:86;14077:1:76;6087:18:86;;;6080:34;6019:18;;14017:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13947:200;;;;-1:-1:-1;;;13947:200:76;;;;;;;:::i;:::-;14157:5;;;;;;;;;-1:-1:-1;;;;;14157:5:76;-1:-1:-1;;;;;14157:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14157:40:76;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;14157:66:76;;14224:14;14240:12;;14157:96;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13777:483;;;;:::o;2182:189:77:-;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;2253:26:::1;:11;2272:6:::0;2253:18:::1;:26::i;:::-;2289:34;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2289:34:77::1;::::0;::::1;::::0;2338:26;;-1:-1:-1;;;;;2338:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;2338:26:77;::::1;::::0;2289:34;;2338:26:::1;:::i;4448:1402:76:-:0;4567:40;4595:10;4567:19;:40::i;:::-;:106;;;;-1:-1:-1;4646:22:76;;;4657:10;4646:22;;;3914:51:86;-1:-1:-1;;;;;4611:24:76;;;;;3887:18:86;4646:22:76;;;-1:-1:-1;;4646:22:76;;;;;;;;;;4636:33;;4646:22;4636:33;;;;-1:-1:-1;;;;;;4611:62:76;;;;;;;;;;6046:25:86;4671:1:76;6087:18:86;;;6080:34;6019:18;;4611:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4546:182;;;;-1:-1:-1;;;4546:182:76;;9887:2:86;4546:182:76;;;9869:21:86;9926:2;9906:18;;;9899:30;9965:34;9945:18;;;9938:62;-1:-1:-1;;;10016:18:86;;;10009:36;10062:19;;4546:182:76;9685:402:86;4546:182:76;4763:5;;:18;;;-1:-1:-1;;;4763:18:76;;;;4738:14;;-1:-1:-1;;;;;4763:5:76;;:16;;:18;;;;;;;;;;;;;;:5;:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4738:44;;5267:4;5261:11;5334:15;5317;5298:17;5285:65;5593:1;5570;5533:15;5494:17;5471:1;5443:6;5416:5;5390:226;5363:397;;5677:16;5674:1;5671;5656:38;5725:16;5722:1;5715:27;5363:397;;5811:6;-1:-1:-1;;;;;5789:49:76;;5819:18;5828:8;;5819;:18::i;:::-;5789:49;;-1:-1:-1;;;;;;10254:33:86;;;10236:52;;10224:2;10209:18;5789:49:76;;;;;;;4536:1314;4448:1402;;;:::o;1877:112:77:-;1936:4;1959:23;:11;1975:6;1959:15;:23::i;5316:225::-;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;5399:38:::1;:23;5430:6:::0;5399:30:::1;:38::i;:::-;5447:46;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;5447:46:77::1;::::0;::::1;::::0;5508:26;;-1:-1:-1;;;;;5508:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;5508:26:77;::::1;::::0;5447:46;;5508:26:::1;:::i;1831:101:12:-:0;1094:13;:11;:13::i;:::-;1895:30:::1;1922:1;1895:18;:30::i;:::-;1831:101::o:0;20766:173:76:-;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;20862:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;20862:5:76::1;-1:-1:-1::0;;;;;20862:22:76::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:70;::::0;-1:-1:-1;;;20862:70:76;;-1:-1:-1;;;;;3932:32:86;;;20862:70:76::1;::::0;::::1;3914:51:86::0;20862:62:76;;;::::1;::::0;::::1;::::0;3887:18:86;;20862:70:76::1;3768:203:86::0;18106:214:76;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;18214:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;18214:5:76::1;-1:-1:-1::0;;;;;18214:22:76::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18214:39:76::1;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:99;::::0;-1:-1:-1;;;18214:99:76;;-1:-1:-1;;;;;3932:32:86;;;18214:99:76::1;::::0;::::1;3914:51:86::0;18214:88:76;;;::::1;::::0;::::1;::::0;3887:18:86;;18214:99:76::1;3768:203:86::0;2441:134:77;2511:4;2534:34;:22;2561:6;2534:26;:34::i;20217:167:76:-;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;20310:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;20310:5:76::1;-1:-1:-1::0;;;;;20310:22:76::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:67;::::0;-1:-1:-1;;;20310:67:76;;-1:-1:-1;;;;;3932:32:86;;;20310:67:76::1;::::0;::::1;3914:51:86::0;20310:59:76;;;::::1;::::0;::::1;::::0;3887:18:86;;20310:67:76::1;3768:203:86::0;8983:346:76;9101:39;9128:10;9101:18;:39::i;:::-;:105;;;;-1:-1:-1;9179:22:76;;;9190:10;9179:22;;;3914:51:86;-1:-1:-1;;;;;9144:24:76;;;;;3887:18:86;9179:22:76;;;-1:-1:-1;;9179:22:76;;;;;;;;;;9169:33;;9179:22;9169:33;;;;-1:-1:-1;;;;;;9144:62:76;;;;;;;;;;6046:25:86;9204:1:76;6087:18:86;;;6080:34;6019:18;;9144:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9080:197;;;;-1:-1:-1;;;9080:197:76;;;;;;;:::i;:::-;9287:5;;:35;;-1:-1:-1;;;9287:35:76;;-1:-1:-1;;;;;3932:32:86;;;9287:35:76;;;3914:51:86;9287:5:76;;;;:18;;3887::86;;9287:35:76;3768:203:86;5936:207:77;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;6013:32:::1;:17;6038:6:::0;6013:24:::1;:32::i;:::-;6055:40;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;6055:40:77::1;::::0;::::1;::::0;6110:26;;-1:-1:-1;;;;;6110:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;6110:26:77;::::1;::::0;6055:40;;6110:26:::1;:::i;1995:181::-:0;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;2063:23:::1;:11;2079:6:::0;2063:15:::1;:23::i;:::-;2096:34;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2096:34:77::1;::::0;::::1;::::0;2145:24;;-1:-1:-1;;;;;2145:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;2145:24:77;::::1;::::0;2096:34;;2145:24:::1;:::i;5731:199::-:0;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;5805:29:::1;:17;5827:6:::0;5805:21:::1;:29::i;:::-;5844:40;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;5844:40:77::1;::::0;::::1;::::0;5899:24;;-1:-1:-1;;;;;5899:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;5899:24:77;::::1;::::0;5844:40;;5899:24:::1;:::i;3654:327:76:-:0;3764:39;3791:10;3764:18;:39::i;:::-;:105;;;;-1:-1:-1;3842:22:76;;;3853:10;3842:22;;;3914:51:86;-1:-1:-1;;;;;3807:24:76;;;;;3887:18:86;3842:22:76;;;-1:-1:-1;;3842:22:76;;;;;;;;;;3832:33;;3842:22;3832:33;;;;-1:-1:-1;;;;;;3807:62:76;;;;;;;;;;6046:25:86;3867:1:76;6087:18:86;;;6080:34;6019:18;;3807:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3743:189;;;;-1:-1:-1;;;3743:189:76;;10501:2:86;3743:189:76;;;10483:21:86;10540:2;10520:18;;;10513:30;10579:34;10559:18;;;10552:62;-1:-1:-1;;;10630:18:86;;;10623:35;10675:19;;3743:189:76;10299:401:86;3743:189:76;3942:5;;:32;;-1:-1:-1;;;3942:32:76;;-1:-1:-1;;;;;3932:32:86;;;3942::76;;;3914:51:86;3942:5:76;;;;:19;;3887:18:86;;3942:32:76;3768:203:86;18732:207:76;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;18836:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;18836:5:76::1;-1:-1:-1::0;;;;;18836:22:76::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18836:40:76::1;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:96;::::0;-1:-1:-1;;;18836:96:76;;-1:-1:-1;;;;;3932:32:86;;;18836:96:76::1;::::0;::::1;3914:51:86::0;18836:85:76;;;::::1;::::0;::::1;::::0;3887:18:86;;18836:96:76::1;3768:203:86::0;12810:398:76;12934:45;12967:10;12934:24;:45::i;:::-;:111;;;;-1:-1:-1;13018:22:76;;;13029:10;13018:22;;;3914:51:86;-1:-1:-1;;;;;12983:24:76;;;;;3887:18:86;13018:22:76;;;-1:-1:-1;;13018:22:76;;;;;;;;;;13008:33;;13018:22;13008:33;;;;-1:-1:-1;;;;;;12983:62:76;;;;;;;;;;6046:25:86;13043:1:76;6087:18:86;;;6080:34;6019:18;;12983:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12913:200;;;;-1:-1:-1;;;12913:200:76;;;;;;;:::i;:::-;13123:5;;;;;;;;;-1:-1:-1;;;;;13123:5:76;-1:-1:-1;;;;;13123:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;13123:40:76;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:78;;-1:-1:-1;;;13123:78:76;;-1:-1:-1;;;;;3932:32:86;;;13123:78:76;;;3914:51:86;13123:62:76;;;;;;;3887:18:86;;13123:78:76;3768:203:86;2801:362:76;2923:44;2955:10;2923:23;:44::i;:::-;:110;;;;-1:-1:-1;3006:22:76;;;3017:10;3006:22;;;3914:51:86;-1:-1:-1;;;;;2971:24:76;;;;;3887:18:86;3006:22:76;;;-1:-1:-1;;3006:22:76;;;;;;;;;;2996:33;;3006:22;2996:33;;;;-1:-1:-1;;;;;;2971:62:76;;;;;;;;;;6046:25:86;3031:1:76;6087:18:86;;;6080:34;6019:18;;2971:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2902:200;;;;-1:-1:-1;;;2902:200:76;;;;;;;:::i;:::-;3112:5;;:44;;-1:-1:-1;;;3112:44:76;;-1:-1:-1;;;;;3932:32:86;;;3112:44:76;;;3914:51:86;3112:5:76;;;;:25;;3887:18:86;;3112:44:76;3768:203:86;3819:202:77;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;3894:30:::1;:18;3917:6:::0;3894:22:::1;:30::i;:::-;3934:41;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;3934:41:77::1;::::0;::::1;::::0;3990:24;;-1:-1:-1;;;;;3990:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;3990:24:77;::::1;::::0;3934:41;;3990:24:::1;:::i;16425:150:76:-:0;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;16519:5:76::1;::::0;:49:::1;::::0;-1:-1:-1;;;16519:49:76;;-1:-1:-1;;;;;3932:32:86;;;16519:49:76::1;::::0;::::1;3914:51:86::0;16519:5:76;;::::1;::::0;:38:::1;::::0;3887:18:86;;16519:49:76::1;3768:203:86::0;5093:217:77;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;5173:35:::1;:23;5201:6:::0;5173:27:::1;:35::i;:::-;5218:46;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;5218:46:77::1;::::0;::::1;::::0;5279:24;;-1:-1:-1;;;;;5279:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;5279:24:77;::::1;::::0;5218:46;;5279:24:::1;:::i;2581:214::-:0;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;2660:34:::1;:22;2687:6:::0;2660:26:::1;:34::i;:::-;2704:45;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;2704:45:77::1;::::0;::::1;::::0;2764:24;;-1:-1:-1;;;;;2764:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;2764:24:77;::::1;::::0;2704:45;;2764:24:::1;:::i;3213:199::-:0;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;3287:29:::1;:17;3309:6:::0;3287:21:::1;:29::i;:::-;3326:40;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;3326:40:77::1;::::0;::::1;::::0;3381:24;;-1:-1:-1;;;;;3381:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;3381:24:77;::::1;::::0;3326:40;;3381:24:::1;:::i;14798:370:76:-:0;14908:43;14939:10;14908:22;:43::i;:::-;:109;;;;-1:-1:-1;14990:22:76;;;15001:10;14990:22;;;3914:51:86;-1:-1:-1;;;;;14955:24:76;;;;;3887:18:86;14990:22:76;;;-1:-1:-1;;14990:22:76;;;;;;;;;;14980:33;;14990:22;14980:33;;;;-1:-1:-1;;;;;;14955:62:76;;;;;;;;;;6046:25:86;15015:1:76;6087:18:86;;;6080:34;6019:18;;14955:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14887:196;;;;-1:-1:-1;;;14887:196:76;;;;;;;:::i;:::-;15093:5;;;;;;;;;-1:-1:-1;;;;;15093:5:76;-1:-1:-1;;;;;15093:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15093:39:76;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;15093:55:76;;15149:11;15093:68;;;;;;;;;;;;;8340:25:86;;8328:2;8313:18;;8194:177;4660:219:77;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;4741:36:::1;:21;4770:6:::0;4741:28:::1;:36::i;:::-;4787:44;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;4787:44:77::1;::::0;::::1;::::0;4846:26;;-1:-1:-1;;;;;4846:26:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;4846:26:77;::::1;::::0;4787:44;;4846:26:::1;:::i;16969:191:76:-:0;1741:10:77;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;17074:5:76::1;;;;;;;;;-1:-1:-1::0;;;;;17074:5:76::1;-1:-1:-1::0;;;;;17074:22:76::1;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:79;::::0;-1:-1:-1;;;17074:79:76;;-1:-1:-1;;;;;3932:32:86;;;17074:79:76::1;::::0;::::1;3914:51:86::0;17074:68:76;;;::::1;::::0;::::1;::::0;3887:18:86;;17074:79:76::1;3768:203:86::0;9875:393:76;10003:44;10035:10;10003:23;:44::i;:::-;:110;;;;-1:-1:-1;10086:22:76;;;10097:10;10086:22;;;3914:51:86;-1:-1:-1;;;;;10051:24:76;;;;;3887:18:86;10086:22:76;;;-1:-1:-1;;10086:22:76;;;;;;;;;;10076:33;;10086:22;10076:33;;;;-1:-1:-1;;;;;;10051:62:76;;;;;;;;;;6046:25:86;10111:1:76;6087:18:86;;;6080:34;6019:18;;10051:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9982:200;;;;-1:-1:-1;;;9982:200:76;;;;;;;:::i;:::-;10192:5;;;;;;;;;-1:-1:-1;;;;;10192:5:76;-1:-1:-1;;;;;10192:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:69;;-1:-1:-1;;;10192:69:76;;-1:-1:-1;;;;;3932:32:86;;;10192:69:76;;;3914:51:86;10192:47:76;;;;;;;3887:18:86;;10192:69:76;3768:203:86;10820:405:76;10954:44;10986:10;10954:23;:44::i;:::-;:110;;;;-1:-1:-1;11037:22:76;;;11048:10;11037:22;;;3914:51:86;-1:-1:-1;;;;;11002:24:76;;;;;3887:18:86;11037:22:76;;;-1:-1:-1;;11037:22:76;;;;;;;;;;11027:33;;11037:22;11027:33;;;;-1:-1:-1;;;;;;11002:62:76;;;;;;;;;;6046:25:86;11062:1:76;6087:18:86;;;6080:34;6019:18;;11002:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;10933:200;;;;-1:-1:-1;;;10933:200:76;;;;;;;:::i;:::-;11143:5;;;;;;;;;-1:-1:-1;;;;;11143:5:76;-1:-1:-1;;;;;11143:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:75;;-1:-1:-1;;;11143:75:76;;-1:-1:-1;;;;;3932:32:86;;;11143:75:76;;;3914:51:86;11143:50:76;;;;;;;3887:18:86;;11143:75:76;3768:203:86;2081:198:12;1094:13;:11;:13::i;:::-;-1:-1:-1;;;;;2169:22:12;::::1;2161:73;;;::::0;-1:-1:-1;;;2161:73:12;;11548:2:86;2161:73:12::1;::::0;::::1;11530:21:86::0;11587:2;11567:18;;;11560:30;11626:34;11606:18;;;11599:62;-1:-1:-1;;;11677:18:86;;;11670:36;11723:19;;2161:73:12::1;11346:402:86::0;2161:73:12::1;2244:28;2263:8;2244:18;:28::i;:::-;2081:198:::0;:::o;4443:211:77:-;1741:10;1730:7;1247::12;1273:6;-1:-1:-1;;;;;1273:6:12;;1201:85;1730:7:77;-1:-1:-1;;;;;1730:21:77;;:51;;;-1:-1:-1;1755:26:77;719:10:24;1877:112:77;:::i;1755:26::-;1722:89;;;;-1:-1:-1;;;1722:89:77;;;;;;;:::i;:::-;4521:33:::1;:21;4547:6:::0;4521:25:::1;:33::i;:::-;4564:44;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;4564:44:77::1;::::0;::::1;::::0;4623:24;;-1:-1:-1;;;;;4623:24:77;::::1;::::0;-1:-1:-1;;;;;;;;;;;4623:24:77;::::1;::::0;4564:44;;4623:24:::1;:::i;11780:469:76:-:0;11964:45;11997:10;11964:24;:45::i;:::-;:111;;;;-1:-1:-1;12048:22:76;;;12059:10;12048:22;;;3914:51:86;-1:-1:-1;;;;;12013:24:76;;;;;3887:18:86;12048:22:76;;;-1:-1:-1;;12048:22:76;;;;;;;;;;12038:33;;12048:22;12038:33;;;;-1:-1:-1;;;;;;12013:62:76;;;;;;;;;;6046:25:86;12073:1:76;6087:18:86;;;6080:34;6019:18;;12013:62:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11943:200;;;;-1:-1:-1;;;11943:200:76;;;;;;;:::i;:::-;12153:5;;;;;;;;;-1:-1:-1;;;;;12153:5:76;-1:-1:-1;;;;;12153:22:76;;:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12153:40:76;;:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;12153:59:76;;12213:14;12229:12;;12153:89;;;;;;;;;;;;;;;;;:::i;4951:136:77:-;5022:4;5045:35;:23;5073:6;5045:27;:35::i;546:180:79:-;625:18;629:4;635:7;625:3;:18::i;:::-;617:64;;;;-1:-1:-1;;;617:64:79;;11955:2:86;617:64:79;;;11937:21:86;11994:2;11974:18;;;11967:30;12033:34;12013:18;;;12006:62;-1:-1:-1;;;12084:18:86;;;12077:31;12125:19;;617:64:79;11753:397:86;617:64:79;-1:-1:-1;;;;;691:20:79;714:5;691:20;;;;;;;;;;;:28;;-1:-1:-1;;691:28:79;;;546:180::o;815:200::-;887:4;-1:-1:-1;;;;;911:21:79;;903:68;;;;-1:-1:-1;;;903:68:79;;12357:2:86;903:68:79;;;12339:21:86;12396:2;12376:18;;;12369:30;12435:34;12415:18;;;12408:62;-1:-1:-1;;;12486:18:86;;;12479:32;12528:19;;903:68:79;12155:398:86;903:68:79;-1:-1:-1;;;;;;988:20:79;:11;:20;;;;;;;;;;;;;;;815:200::o;6078:803:76:-;6144:13;6192:1;6173:20;;6169:702;;-1:-1:-1;;6810:29:76;;6078:803::o;1359:130:12:-;1247:7;1273:6;-1:-1:-1;;;;;1273:6:12;719:10:24;1422:23:12;1414:68;;;;-1:-1:-1;;;1414:68:12;;12760:2:86;1414:68:12;;;12742:21:86;;;12779:18;;;12772:30;12838:34;12818:18;;;12811:62;12890:18;;1414:68:12;12558:356:86;2433:187:12;2506:16;2525:6;;-1:-1:-1;;;;;2541:17:12;;;-1:-1:-1;;;;;;2541:17:12;;;;;;2573:40;;2525:6;;;;;;;2573:40;;2506:16;2573:40;2496:124;2433:187;:::o;296:175:79:-;373:18;377:4;383:7;373:3;:18::i;:::-;372:19;364:63;;;;-1:-1:-1;;;364:63:79;;13121:2:86;364:63:79;;;13103:21:86;13160:2;13140:18;;;13133:30;13199:33;13179:18;;;13172:61;13250:18;;364:63:79;12919:355:86;364:63:79;-1:-1:-1;;;;;437:20:79;:11;:20;;;;;;;;;;;:27;;-1:-1:-1;;437:27:79;460:4;437:27;;;296:175::o;14:131:86:-;-1:-1:-1;;;;;89:31:86;;79:42;;69:70;;135:1;132;125:12;150:247;209:6;262:2;250:9;241:7;237:23;233:32;230:52;;;278:1;275;268:12;230:52;317:9;304:23;336:31;361:5;336:31;:::i;:::-;386:5;150:247;-1:-1:-1;;;150:247:86:o;594:348::-;646:8;656:6;710:3;703:4;695:6;691:17;687:27;677:55;;728:1;725;718:12;677:55;-1:-1:-1;751:20:86;;794:18;783:30;;780:50;;;826:1;823;816:12;780:50;863:4;855:6;851:17;839:29;;915:3;908:4;899:6;891;887:19;883:30;880:39;877:59;;;932:1;929;922:12;877:59;594:348;;;;;:::o;947:564::-;1045:6;1053;1061;1114:2;1102:9;1093:7;1089:23;1085:32;1082:52;;;1130:1;1127;1120:12;1082:52;1170:9;1157:23;1203:18;1195:6;1192:30;1189:50;;;1235:1;1232;1225:12;1189:50;1274:59;1325:7;1316:6;1305:9;1301:22;1274:59;:::i;:::-;1352:8;;-1:-1:-1;1248:85:86;-1:-1:-1;;1437:2:86;1422:18;;1409:32;1450:31;1409:32;1450:31;:::i;:::-;1500:5;1490:15;;;947:564;;;;;:::o;1516:333::-;1602:6;1610;1663:2;1651:9;1642:7;1638:23;1634:32;1631:52;;;1679:1;1676;1669:12;1631:52;1715:9;1702:23;1692:33;;1775:2;1764:9;1760:18;1747:32;1788:31;1813:5;1788:31;:::i;:::-;1838:5;1828:15;;;1516:333;;;;;:::o;1854:930::-;1997:6;2005;2013;2021;2074:2;2062:9;2053:7;2049:23;2045:32;2042:52;;;2090:1;2087;2080:12;2042:52;2129:9;2116:23;2148:31;2173:5;2148:31;:::i;:::-;2198:5;-1:-1:-1;2254:2:86;2239:18;;2226:32;2277:18;2307:14;;;2304:34;;;2334:1;2331;2324:12;2304:34;2372:6;2361:9;2357:22;2347:32;;2417:7;2410:4;2406:2;2402:13;2398:27;2388:55;;2439:1;2436;2429:12;2388:55;2479:2;2466:16;2505:2;2497:6;2494:14;2491:34;;;2521:1;2518;2511:12;2491:34;2574:7;2569:2;2559:6;2556:1;2552:14;2548:2;2544:23;2540:32;2537:45;2534:65;;;2595:1;2592;2585:12;2534:65;2626:2;2622;2618:11;2608:21;;2648:6;2638:16;;;;;2706:2;2695:9;2691:18;2678:32;2719:33;2744:7;2719:33;:::i;:::-;1854:930;;;;-1:-1:-1;1854:930:86;;-1:-1:-1;;1854:930:86:o;3357:406::-;3443:6;3451;3504:2;3492:9;3483:7;3479:23;3475:32;3472:52;;;3520:1;3517;3510:12;3472:52;3559:9;3546:23;3578:31;3603:5;3578:31;:::i;:::-;3628:5;-1:-1:-1;3685:2:86;3670:18;;3657:32;3698:33;3657:32;3698:33;:::i;4632:349::-;4834:2;4816:21;;;4873:2;4853:18;;;4846:30;4912:27;4907:2;4892:18;;4885:55;4972:2;4957:18;;4632:349::o;4986:597::-;5098:4;5127:2;5156;5145:9;5138:21;5188:6;5182:13;5231:6;5226:2;5215:9;5211:18;5204:34;5256:1;5266:140;5280:6;5277:1;5274:13;5266:140;;;5375:14;;;5371:23;;5365:30;5341:17;;;5360:2;5337:26;5330:66;5295:10;;5266:140;;;5424:6;5421:1;5418:13;5415:91;;;5494:1;5489:2;5480:6;5469:9;5465:22;5461:31;5454:42;5415:91;-1:-1:-1;5567:2:86;5546:15;-1:-1:-1;;5542:29:86;5527:45;;;;5574:2;5523:54;;4986:597;-1:-1:-1;;;4986:597:86:o;5588:271::-;5678:6;5731:2;5719:9;5710:7;5706:23;5702:32;5699:52;;;5747:1;5744;5737:12;5699:52;5779:9;5773:16;5798:31;5823:5;5798:31;:::i;6125:277::-;6192:6;6245:2;6233:9;6224:7;6220:23;6216:32;6213:52;;;6261:1;6258;6251:12;6213:52;6293:9;6287:16;6346:5;6339:13;6332:21;6325:5;6322:32;6312:60;;6368:1;6365;6358:12;6407:409;6609:2;6591:21;;;6648:2;6628:18;;;6621:30;6687:34;6682:2;6667:18;;6660:62;-1:-1:-1;;;6753:2:86;6738:18;;6731:43;6806:3;6791:19;;6407:409::o;6821:390::-;6980:2;6969:9;6962:21;7019:6;7014:2;7003:9;6999:18;6992:34;7076:6;7068;7063:2;7052:9;7048:18;7035:48;7132:1;7103:22;;;7127:2;7099:31;;;7092:42;;;;7195:2;7174:15;;;-1:-1:-1;;7170:29:86;7155:45;7151:54;;6821:390;-1:-1:-1;6821:390:86:o;7216:404::-;7418:2;7400:21;;;7457:2;7437:18;;;7430:30;7496:34;7491:2;7476:18;;7469:62;-1:-1:-1;;;7562:2:86;7547:18;;7540:38;7610:3;7595:19;;7216:404::o;8376:406::-;8578:2;8560:21;;;8617:2;8597:18;;;8590:30;8656:34;8651:2;8636:18;;8629:62;-1:-1:-1;;;8722:2:86;8707:18;;8700:40;8772:3;8757:19;;8376:406::o;9076:604::-;-1:-1:-1;;;;;9314:32:86;;9296:51;;9383:2;9378;9363:18;;9356:30;;;9402:18;;9395:34;;;-1:-1:-1;;;;;;9441:31:86;;9438:51;;;9485:1;9482;9475:12;9438:51;9519:6;9516:1;9512:14;9576:6;9568;9563:2;9552:9;9548:18;9535:48;9653:1;9606:22;;9630:2;9602:31;9642:13;;;-1:-1:-1;9602:31:86;9076:604;-1:-1:-1;;;9076:604:86:o;10934:407::-;11136:2;11118:21;;;11175:2;11155:18;;;11148:30;11214:34;11209:2;11194:18;;11187:62;-1:-1:-1;;;11280:2:86;11265:18;;11258:41;11331:3;11316:19;;10934:407::o",
  "source": "// SPDX-License-Identifier: GPL-3.0\n/**\n *     NOTICE\n *\n *     The T-REX software is licensed under a proprietary license or the GPL v.3.\n *     If you choose to receive it under the GPL v.3 license, the following applies:\n *     T-REX is a suite of smart contracts developed by Tokeny to manage and transfer financial assets on the ethereum blockchain\n *\n *     Copyright (C) 2021, Tokeny sàrl.\n *\n *     This program is free software: you can redistribute it and/or modify\n *     it under the terms of the GNU General Public License as published by\n *     the Free Software Foundation, either version 3 of the License, or\n *     (at your option) any later version.\n *\n *     This program is distributed in the hope that it will be useful,\n *     but WITHOUT ANY WARRANTY; without even the implied warranty of\n *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n *     GNU General Public License for more details.\n *\n *     You should have received a copy of the GNU General Public License\n *     along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\npragma solidity ^0.8.0;\n\nimport '../token/IToken.sol';\nimport '../registry/IIdentityRegistry.sol';\nimport '../registry/ITrustedIssuersRegistry.sol';\nimport '../registry/IClaimTopicsRegistry.sol';\nimport '../compliance/ICompliance.sol';\nimport './OwnerRoles.sol';\nimport '@onchain-id/solidity/contracts/interface/IIdentity.sol';\nimport '@onchain-id/solidity/contracts/interface/IClaimIssuer.sol';\n\ncontract OwnerManager is OwnerRoles {\n    /// @dev the token that is managed by this OwnerManager Contract\n    IToken public token;\n\n    /// @dev Event emitted for each executed interaction with the compliance contract.\n    ///\n    /// For gas efficiency, only the interaction calldata selector (first 4\n    /// bytes) is included in the event. For interactions without calldata or\n    /// whose calldata is shorter than 4 bytes, the selector will be `0`.\n    event ComplianceInteraction(address indexed target, bytes4 selector);\n\n    /**\n     *  @dev the constructor initiates the OwnerManager contract\n     *  and sets msg.sender as owner of the contract\n     *  @param _token the token managed by this OwnerManager contract\n     */\n    constructor(address _token) {\n        token = IToken(_token);\n    }\n\n    /**\n     *  @dev calls the `setIdentityRegistry` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-setIdentityRegistry}.\n     *  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetIdentityRegistry(address _identityRegistry, IIdentity _onchainID) external {\n        require(\n            isRegistryAddressSetter(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Registry Address Setter'\n        );\n        token.setIdentityRegistry(_identityRegistry);\n    }\n\n    /**\n     *  @dev calls the `setCompliance` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-setCompliance}.\n     *  Requires that `_onchainID` is set as ComplianceSetter on the OwnerManager contract\n     *  Requires that msg.sender is a MANAGEMENT KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetCompliance(address _compliance, IIdentity _onchainID) external {\n        require(\n            isComplianceSetter(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Compliance Setter'\n        );\n        token.setCompliance(_compliance);\n    }\n\n    /**\n     *  @dev calls any onlyOwner function available on the compliance contract\n     *  OwnerManager has to be set as owner on the compliance smart contract to process this function\n     *  Requires that `_onchainID` is set as ComplianceManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callComplianceFunction(bytes calldata callData, IIdentity _onchainID) external {\n        require(\n            isComplianceManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Compliance Manager');\n        address target = address(token.compliance());\n\n        // NOTE: Use assembly to call the interaction instead of a low level\n        // call for two reasons:\n        // - We don't want to copy the return data, since we discard it for\n        // interactions.\n        // - Solidity will under certain conditions generate code to copy input\n        // calldata twice to memory (the second being a \"memcopy loop\").\n        // solhint-disable-next-line no-inline-assembly\n        assembly {\n            let freeMemoryPointer := mload(0x40)\n            calldatacopy(freeMemoryPointer, callData.offset, callData.length)\n            if iszero(\n                call(\n                    gas(),\n                    target,\n                    0,\n                    freeMemoryPointer,\n                    callData.length,\n                    0,\n                    0\n                    ))\n                {\n                    returndatacopy(0, 0, returndatasize())\n                    revert(0, returndatasize())\n                }\n            }\n\n        emit ComplianceInteraction(target, selector(callData));\n\n        }\n\n    /// @dev Extracts the Solidity ABI selector for the specified interaction.\n    /// @param callData Interaction data.\n    /// @return result The 4 byte function selector of the call encoded in\n    /// this interaction.\n    function selector(bytes calldata callData) internal pure returns (bytes4 result) {\n        if (callData.length >= 4) {\n        // NOTE: Read the first word of the interaction's calldata. The\n        // value does not need to be shifted since `bytesN` values are left\n        // aligned, and the value does not need to be masked since masking\n        // occurs when the value is accessed and not stored:\n        // <https://docs.soliditylang.org/en/v0.7.6/abi-spec.html#encoding-of-indexed-event-parameters>\n        // <https://docs.soliditylang.org/en/v0.7.6/assembly.html#access-to-external-variables-functions-and-libraries>\n        // solhint-disable-next-line no-inline-assembly\n            assembly {\n                result := calldataload(callData.offset)\n                }\n            }\n        }\n\n    /**\n     *  @dev calls the `setName` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-setName}.\n     *  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetTokenName(string calldata _name, IIdentity _onchainID) external {\n        require(\n            isTokenInfoManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Token Information Manager'\n        );\n        token.setName(_name);\n    }\n\n    /**\n     *  @dev calls the `setSymbol` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-setSymbol}.\n     *  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetTokenSymbol(string calldata _symbol, IIdentity _onchainID) external {\n        require(\n            isTokenInfoManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Token Information Manager'\n        );\n        token.setSymbol(_symbol);\n    }\n\n    /**\n     *  @dev calls the `setOnchainID` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-setOnchainID}.\n     *  Requires that `_tokenOnchainID` is set as TokenInfoManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetTokenOnchainID(address _tokenOnchainID, IIdentity _onchainID) external {\n        require(\n            isTokenInfoManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Token Information Manager'\n        );\n        token.setOnchainID(_tokenOnchainID);\n    }\n\n    /**\n     *  @dev calls the `setClaimTopicsRegistry` function on the Identity Registry contract\n     *  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n     *  See {IIdentityRegistry-setClaimTopicsRegistry}.\n     *  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetClaimTopicsRegistry(address _claimTopicsRegistry, IIdentity _onchainID) external {\n        require(\n            isRegistryAddressSetter(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Registry Address Setter'\n        );\n        token.identityRegistry().setClaimTopicsRegistry(_claimTopicsRegistry);\n    }\n\n    /**\n     *  @dev calls the `setTrustedIssuersRegistry` function on the Identity Registry contract\n     *  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n     *  See {IIdentityRegistry-setTrustedIssuersRegistry}.\n     *  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callSetTrustedIssuersRegistry(address _trustedIssuersRegistry, IIdentity _onchainID) external {\n        require(\n            isRegistryAddressSetter(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT Registry Address Setter'\n        );\n        token.identityRegistry().setTrustedIssuersRegistry(_trustedIssuersRegistry);\n    }\n\n    /**\n     *  @dev calls the `addTrustedIssuer` function on the Trusted Issuers Registry contract\n     *  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n     *  See {ITrustedIssuersRegistry-addTrustedIssuer}.\n     *  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callAddTrustedIssuer(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics,\n        IIdentity _onchainID\n    ) external {\n        require(\n            isIssuersRegistryManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT IssuersRegistryManager'\n        );\n        token.identityRegistry().issuersRegistry().addTrustedIssuer(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev calls the `removeTrustedIssuer` function on the Trusted Issuers Registry contract\n     *  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n     *  See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n     *  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callRemoveTrustedIssuer(IClaimIssuer _trustedIssuer, IIdentity _onchainID) external {\n        require(\n            isIssuersRegistryManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT IssuersRegistryManager'\n        );\n        token.identityRegistry().issuersRegistry().removeTrustedIssuer(_trustedIssuer);\n    }\n\n    /**\n     *  @dev calls the `updateIssuerClaimTopics` function on the Trusted Issuers Registry contract\n     *  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n     *  See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n     *  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callUpdateIssuerClaimTopics(\n        IClaimIssuer _trustedIssuer,\n        uint256[] calldata _claimTopics,\n        IIdentity _onchainID\n    ) external {\n        require(\n            isIssuersRegistryManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT IssuersRegistryManager'\n        );\n        token.identityRegistry().issuersRegistry().updateIssuerClaimTopics(_trustedIssuer, _claimTopics);\n    }\n\n    /**\n     *  @dev calls the `addClaimTopic` function on the Claim Topics Registry contract\n     *  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n     *  See {IClaimTopicsRegistry-addClaimTopic}.\n     *  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callAddClaimTopic(uint256 _claimTopic, IIdentity _onchainID) external {\n        require(\n            isClaimRegistryManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT ClaimRegistryManager'\n        );\n        token.identityRegistry().topicsRegistry().addClaimTopic(_claimTopic);\n    }\n\n    /**\n     *  @dev calls the `removeClaimTopic` function on the Claim Topics Registry contract\n     *  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n     *  See {IClaimTopicsRegistry-removeClaimTopic}.\n     *  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n     *  Requires that msg.sender is an ACTION KEY on `_onchainID`\n     *  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\"\n     */\n    function callRemoveClaimTopic(uint256 _claimTopic, IIdentity _onchainID) external {\n        require(\n            isClaimRegistryManager(address(_onchainID)) && _onchainID.keyHasPurpose(keccak256(abi.encode(msg.sender)), 2),\n            'Role: Sender is NOT ClaimRegistryManager'\n        );\n        token.identityRegistry().topicsRegistry().removeClaimTopic(_claimTopic);\n    }\n\n    /**\n     *  @dev calls the `transferOwnershipOnTokenContract` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-transferOwnershipOnTokenContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callTransferOwnershipOnTokenContract(address _newOwner) external onlyAdmin {\n        token.transferOwnershipOnTokenContract(_newOwner);\n    }\n\n    /**\n     *  @dev calls the `transferOwnershipOnIdentityRegistryContract` function on the Identity Registry contract\n     *  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n     *  See {IIdentityRegistry-transferOwnershipOnIdentityRegistryContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callTransferOwnershipOnIdentityRegistryContract(address _newOwner) external onlyAdmin {\n        token.identityRegistry().transferOwnershipOnIdentityRegistryContract(_newOwner);\n    }\n\n    /**\n     *  @dev calls the `transferOwnershipOnComplianceContract` function on the Compliance contract\n     *  OwnerManager has to be set as owner on the Compliance smart contract to process this function\n     *  See {ICompliance-transferOwnershipOnComplianceContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callTransferOwnershipOnComplianceContract(address _newOwner) external onlyAdmin {\n        token.compliance().transferOwnershipOnComplianceContract(_newOwner);\n    }\n\n    /**\n     *  @dev calls the `transferOwnershipOnClaimTopicsRegistryContract` function on the Claim Topics Registry contract\n     *  OwnerManager has to be set as owner on the Claim Topics registry smart contract to process this function\n     *  See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callTransferOwnershipOnClaimTopicsRegistryContract(address _newOwner) external onlyAdmin {\n        token.identityRegistry().topicsRegistry().transferOwnershipOnClaimTopicsRegistryContract(_newOwner);\n    }\n\n    /**\n     *  @dev calls the `transferOwnershipOnIssuersRegistryContract` function on the Trusted Issuers Registry contract\n     *  OwnerManager has to be set as owner on the Trusted Issuers registry smart contract to process this function\n     *  See {ITrustedIssuersRegistry-transferOwnershipOnIssuersRegistryContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callTransferOwnershipOnIssuersRegistryContract(address _newOwner) external onlyAdmin {\n        token.identityRegistry().issuersRegistry().transferOwnershipOnIssuersRegistryContract(_newOwner);\n    }\n\n    /**\n     *  @dev calls the `addAgentOnTokenContract` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-addAgentOnTokenContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callAddAgentOnTokenContract(address _agent) external onlyAdmin {\n        token.addAgentOnTokenContract(_agent);\n    }\n\n    /**\n     *  @dev calls the `removeAgentOnTokenContract` function on the token contract\n     *  OwnerManager has to be set as owner on the token smart contract to process this function\n     *  See {IToken-removeAgentOnTokenContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callRemoveAgentOnTokenContract(address _agent) external onlyAdmin {\n        token.removeAgentOnTokenContract(_agent);\n    }\n\n    /**\n     *  @dev calls the `addAgentOnIdentityRegistryContract` function on the Identity Registry contract\n     *  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n     *  See {IIdentityRegistry-addAgentOnIdentityRegistryContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callAddAgentOnIdentityRegistryContract(address _agent) external onlyAdmin {\n        token.identityRegistry().addAgentOnIdentityRegistryContract(_agent);\n    }\n\n    /**\n     *  @dev calls the `removeAgentOnIdentityRegistryContract` function on the Identity Registry contract\n     *  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n     *  See {IIdentityRegistry-removeAgentOnIdentityRegistryContract}.\n     *  Requires that msg.sender is an Admin of the OwnerManager contract\n     */\n    function callRemoveAgentOnIdentityRegistryContract(address _agent) external onlyAdmin {\n        token.identityRegistry().removeAgentOnIdentityRegistryContract(_agent);\n    }\n}\n",
  "sourcePath": "/home/mayank/Desktop/security-token-5/Prototype--Craye-Realstate/T-REX/contracts/roles/OwnerManager.sol",
  "ast": {
    "absolutePath": "project:/contracts/roles/OwnerManager.sol",
    "exportedSymbols": {
      "Context": [
        4216
      ],
      "IClaimIssuer": [
        1456
      ],
      "IClaimTopicsRegistry": [
        10172
      ],
      "ICompliance": [
        9302
      ],
      "IERC20": [
        3009
      ],
      "IERC734": [
        1609
      ],
      "IERC735": [
        1734
      ],
      "IIdentity": [
        1743
      ],
      "IIdentityRegistry": [
        10365
      ],
      "IIdentityRegistryStorage": [
        10487
      ],
      "IToken": [
        15986
      ],
      "ITrustedIssuersRegistry": [
        10584
      ],
      "Ownable": [
        2159
      ],
      "OwnerManager": [
        14663
      ],
      "OwnerRoles": [
        15145
      ],
      "Roles": [
        15653
      ]
    },
    "id": 14664,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13921,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1093:23:76"
      },
      {
        "absolutePath": "project:/contracts/token/IToken.sol",
        "file": "../token/IToken.sol",
        "id": 13922,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 15987,
        "src": "1118:29:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/IIdentityRegistry.sol",
        "file": "../registry/IIdentityRegistry.sol",
        "id": 13923,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10366,
        "src": "1148:43:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/ITrustedIssuersRegistry.sol",
        "file": "../registry/ITrustedIssuersRegistry.sol",
        "id": 13924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10585,
        "src": "1192:49:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/IClaimTopicsRegistry.sol",
        "file": "../registry/IClaimTopicsRegistry.sol",
        "id": 13925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10173,
        "src": "1242:46:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/compliance/ICompliance.sol",
        "file": "../compliance/ICompliance.sol",
        "id": 13926,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 9303,
        "src": "1289:39:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/roles/OwnerRoles.sol",
        "file": "./OwnerRoles.sol",
        "id": 13927,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 15146,
        "src": "1329:26:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
        "file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
        "id": 13928,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 1744,
        "src": "1356:64:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        "file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        "id": 13929,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 1457,
        "src": "1421:67:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13930,
              "name": "OwnerRoles",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15145,
              "src": "1515:10:76"
            },
            "id": 13931,
            "nodeType": "InheritanceSpecifier",
            "src": "1515:10:76"
          }
        ],
        "canonicalName": "OwnerManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14663,
        "linearizedBaseContracts": [
          14663,
          15145,
          2159,
          4216
        ],
        "name": "OwnerManager",
        "nameLocation": "1499:12:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 13932,
              "nodeType": "StructuredDocumentation",
              "src": "1532:64:76",
              "text": "@dev the token that is managed by this OwnerManager Contract"
            },
            "functionSelector": "fc0c546a",
            "id": 13935,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1615:5:76",
            "nodeType": "VariableDeclaration",
            "scope": 14663,
            "src": "1601:19:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IToken_$15986",
              "typeString": "contract IToken"
            },
            "typeName": {
              "id": 13934,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13933,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15986,
                "src": "1601:6:76"
              },
              "referencedDeclaration": 15986,
              "src": "1601:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$15986",
                "typeString": "contract IToken"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13936,
              "nodeType": "StructuredDocumentation",
              "src": "1627:318:76",
              "text": "@dev Event emitted for each executed interaction with the compliance contract.\n For gas efficiency, only the interaction calldata selector (first 4\n bytes) is included in the event. For interactions without calldata or\n whose calldata is shorter than 4 bytes, the selector will be `0`."
            },
            "eventSelector": "5779a24d18a4639b1d59461e68c00fb0cd02533a4c5a6ff3ca6363e23e2fff56",
            "id": 13942,
            "name": "ComplianceInteraction",
            "nameLocation": "1956:21:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13938,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1994:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13942,
                  "src": "1978:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13940,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "2009:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13942,
                  "src": "2002:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 13939,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:41:76"
            },
            "src": "1950:69:76"
          },
          {
            "body": {
              "id": 13954,
              "nodeType": "Block",
              "src": "2257:39:76",
              "statements": [
                {
                  "expression": {
                    "id": 13952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13948,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13935,
                      "src": "2267:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$15986",
                        "typeString": "contract IToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13950,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13945,
                          "src": "2282:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13949,
                        "name": "IToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15986,
                        "src": "2275:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IToken_$15986_$",
                          "typeString": "type(contract IToken)"
                        }
                      },
                      "id": 13951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2275:14:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$15986",
                        "typeString": "contract IToken"
                      }
                    },
                    "src": "2267:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IToken_$15986",
                      "typeString": "contract IToken"
                    }
                  },
                  "id": 13953,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:22:76"
                }
              ]
            },
            "documentation": {
              "id": 13943,
              "nodeType": "StructuredDocumentation",
              "src": "2025:199:76",
              "text": "  @dev the constructor initiates the OwnerManager contract\n  and sets msg.sender as owner of the contract\n  @param _token the token managed by this OwnerManager contract"
            },
            "id": 13955,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13945,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2249:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13955,
                  "src": "2241:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:16:76"
            },
            "returnParameters": {
              "id": 13947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:0:76"
            },
            "scope": 14663,
            "src": "2229:67:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13992,
              "nodeType": "Block",
              "src": "2892:271:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13968,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13961,
                                  "src": "2955:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 13967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2947:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2947:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2947:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13965,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "2923:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 13970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13976,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3017:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 13977,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3017:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 13974,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "3006:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 13975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "3006:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 13978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3006:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 13973,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "2996:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 13979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2996:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 13980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3031:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 13971,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13961,
                              "src": "2971:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 13972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "2971:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 13981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2971:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2923:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 13983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3047:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 13964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2902:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13985,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13989,
                        "name": "_identityRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13958,
                        "src": "3138:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13986,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "3112:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 13988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setIdentityRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15848,
                      "src": "3112:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:44:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13991,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:44:76"
                }
              ]
            },
            "documentation": {
              "id": 13956,
              "nodeType": "StructuredDocumentation",
              "src": "2302:494:76",
              "text": "  @dev calls the `setIdentityRegistry` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setIdentityRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "9d6de3bc",
            "id": 13993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetIdentityRegistry",
            "nameLocation": "2810:23:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13958,
                  "mutability": "mutable",
                  "name": "_identityRegistry",
                  "nameLocation": "2842:17:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13993,
                  "src": "2834:25:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13961,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "2871:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13993,
                  "src": "2861:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 13960,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13959,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "2861:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "2861:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:49:76"
            },
            "returnParameters": {
              "id": 13963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2892:0:76"
            },
            "scope": 14663,
            "src": "2801:362:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14030,
              "nodeType": "Block",
              "src": "3733:248:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14006,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13999,
                                  "src": "3791:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3783:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14004,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3783:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3783:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14003,
                            "name": "isComplianceSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14858,
                            "src": "3764:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3764:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14014,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3853:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14015,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3853:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14012,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "3842:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "3842:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3842:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14011,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "3832:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3832:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3867:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14009,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13999,
                              "src": "3807:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "3807:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3764:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e636520536574746572",
                        "id": 14021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:39:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Setter\""
                        },
                        "value": "Role: Sender is NOT Compliance Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Setter\""
                        }
                      ],
                      "id": 14002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3743:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:189:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14023,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:189:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14027,
                        "name": "_compliance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "3962:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14024,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "3942:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCompliance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15854,
                      "src": "3942:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3942:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14029,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:32:76"
                }
              ]
            },
            "documentation": {
              "id": 13994,
              "nodeType": "StructuredDocumentation",
              "src": "3169:480:76",
              "text": "  @dev calls the `setCompliance` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setCompliance}.\n  Requires that `_onchainID` is set as ComplianceSetter on the OwnerManager contract\n  Requires that msg.sender is a MANAGEMENT KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "951af88d",
            "id": 14031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetCompliance",
            "nameLocation": "3663:17:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13996,
                  "mutability": "mutable",
                  "name": "_compliance",
                  "nameLocation": "3689:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "3681:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13999,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "3712:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "3702:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 13998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13997,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "3702:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "3702:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3680:43:76"
            },
            "returnParameters": {
              "id": 14001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:0:76"
            },
            "scope": 14663,
            "src": "3654:327:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14079,
              "nodeType": "Block",
              "src": "4536:1314:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14044,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14037,
                                  "src": "4595:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4587:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14042,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4587:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4587:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14041,
                            "name": "isComplianceManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14918,
                            "src": "4567:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4567:40:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14052,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4657:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4657:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14050,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "4646:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "4646:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4646:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14049,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "4636:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4671:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14047,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14037,
                              "src": "4611:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "4611:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4611:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4567:106:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365204d616e61676572",
                        "id": 14059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4687:40:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Manager\""
                        },
                        "value": "Role: Sender is NOT Compliance Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Manager\""
                        }
                      ],
                      "id": 14040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4546:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:182:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14061,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:182:76"
                },
                {
                  "assignments": [
                    14063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14063,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4746:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14079,
                      "src": "4738:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4738:7:76",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14070,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14066,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "4763:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "compliance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15770,
                          "src": "4763:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICompliance_$9302_$",
                            "typeString": "function () view external returns (contract ICompliance)"
                          }
                        },
                        "id": 14068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4763:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      ],
                      "id": 14065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4755:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 14064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4755:7:76",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4755:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4738:44:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5222:552:76",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5236:36:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5267:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5261:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5261:11:76"
                        },
                        "variables": [
                          {
                            "name": "freeMemoryPointer",
                            "nodeType": "YulTypedName",
                            "src": "5240:17:76",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "freeMemoryPointer",
                              "nodeType": "YulIdentifier",
                              "src": "5298:17:76"
                            },
                            {
                              "name": "callData.offset",
                              "nodeType": "YulIdentifier",
                              "src": "5317:15:76"
                            },
                            {
                              "name": "callData.length",
                              "nodeType": "YulIdentifier",
                              "src": "5334:15:76"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5285:12:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5285:65:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5285:65:76"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5634:126:76",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5671:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5674:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5677:14:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5677:16:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5656:14:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5656:38:76"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5656:38:76"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5722:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5725:14:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5725:16:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5715:6:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5715:27:76"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5715:27:76"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "5416:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5416:5:76"
                                },
                                {
                                  "name": "target",
                                  "nodeType": "YulIdentifier",
                                  "src": "5443:6:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5471:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "5494:17:76"
                                },
                                {
                                  "name": "callData.length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5533:15:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5570:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5593:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "5390:4:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5390:226:76"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5366:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5366:251:76"
                        },
                        "nodeType": "YulIf",
                        "src": "5363:397:76"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 14034,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5334:15:76",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14034,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5533:15:76",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14034,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "5317:15:76",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14063,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5443:6:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 14071,
                  "nodeType": "InlineAssembly",
                  "src": "5213:561:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14073,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14063,
                        "src": "5811:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 14075,
                            "name": "callData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14034,
                            "src": "5828:8:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 14074,
                          "name": "selector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14096,
                          "src": "5819:8:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function (bytes calldata) pure returns (bytes4)"
                          }
                        },
                        "id": 14076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5819:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 14072,
                      "name": "ComplianceInteraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13942,
                      "src": "5789:21:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,bytes4)"
                      }
                    },
                    "id": 14077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5789:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14078,
                  "nodeType": "EmitStatement",
                  "src": "5784:54:76"
                }
              ]
            },
            "documentation": {
              "id": 14032,
              "nodeType": "StructuredDocumentation",
              "src": "3987:456:76",
              "text": "  @dev calls any onlyOwner function available on the compliance contract\n  OwnerManager has to be set as owner on the compliance smart contract to process this function\n  Requires that `_onchainID` is set as ComplianceManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "5c5f2047",
            "id": 14080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callComplianceFunction",
            "nameLocation": "4457:22:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14034,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "4495:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14080,
                  "src": "4480:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14033,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14037,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "4515:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14080,
                  "src": "4505:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14035,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4505:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4505:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4479:47:76"
            },
            "returnParameters": {
              "id": 14039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4536:0:76"
            },
            "scope": 14663,
            "src": "4448:1402:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14095,
              "nodeType": "Block",
              "src": "6159:722:76",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 14088,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14083,
                        "src": "6173:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 14089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6173:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 14090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6192:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "6173:20:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14094,
                  "nodeType": "IfStatement",
                  "src": "6169:702:76",
                  "trueBody": {
                    "id": 14093,
                    "nodeType": "Block",
                    "src": "6195:676:76",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6782:75:76",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6800:39:76",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "callData.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6823:15:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6810:12:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6810:29:76"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:6:76"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 14083,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "6823:15:76",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 14086,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6800:6:76",
                            "valueSize": 1
                          }
                        ],
                        "id": 14092,
                        "nodeType": "InlineAssembly",
                        "src": "6773:84:76"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14081,
              "nodeType": "StructuredDocumentation",
              "src": "5856:217:76",
              "text": "@dev Extracts the Solidity ABI selector for the specified interaction.\n @param callData Interaction data.\n @return result The 4 byte function selector of the call encoded in\n this interaction."
            },
            "id": 14096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selector",
            "nameLocation": "6087:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14083,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "6111:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14096,
                  "src": "6096:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14082,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6096:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6095:25:76"
            },
            "returnParameters": {
              "id": 14087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14086,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "6151:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14096,
                  "src": "6144:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 14085,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6144:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6143:15:76"
            },
            "scope": 14663,
            "src": "6078:803:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14133,
              "nodeType": "Block",
              "src": "7437:244:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14109,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14102,
                                  "src": "7495:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7487:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14107,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7487:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7487:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14106,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "7468:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7468:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14117,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7557:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "7557:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14115,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "7546:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "7546:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7546:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14114,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "7536:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7571:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14112,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14102,
                              "src": "7511:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "7511:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7511:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7468:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7587:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7447:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7447:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14126,
                  "nodeType": "ExpressionStatement",
                  "src": "7447:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14130,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14099,
                        "src": "7668:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 14127,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "7654:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15798,
                      "src": "7654:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 14131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7654:20:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14132,
                  "nodeType": "ExpressionStatement",
                  "src": "7654:20:76"
                }
              ]
            },
            "documentation": {
              "id": 14097,
              "nodeType": "StructuredDocumentation",
              "src": "6887:465:76",
              "text": "  @dev calls the `setName` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setName}.\n  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "309ff3d1",
            "id": 14134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenName",
            "nameLocation": "7366:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14099,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7399:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14134,
                  "src": "7383:21:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14102,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "7416:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14134,
                  "src": "7406:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14100,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "7406:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "7406:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7382:45:76"
            },
            "returnParameters": {
              "id": 14104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7437:0:76"
            },
            "scope": 14663,
            "src": "7357:324:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14171,
              "nodeType": "Block",
              "src": "8245:248:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14147,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14140,
                                  "src": "8303:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8295:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14145,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8295:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8295:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14144,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "8276:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8276:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14155,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8365:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8365:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14153,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "8354:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "8354:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8354:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14152,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "8344:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8344:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8379:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14150,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14140,
                              "src": "8319:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "8319:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8319:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8276:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8395:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8255:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8255:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14164,
                  "nodeType": "ExpressionStatement",
                  "src": "8255:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14168,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14137,
                        "src": "8478:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 14165,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "8462:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSymbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15804,
                      "src": "8462:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 14169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:24:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14170,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:24:76"
                }
              ]
            },
            "documentation": {
              "id": 14135,
              "nodeType": "StructuredDocumentation",
              "src": "7687:469:76",
              "text": "  @dev calls the `setSymbol` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setSymbol}.\n  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "2af70c30",
            "id": 14172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenSymbol",
            "nameLocation": "8170:18:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14137,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "8205:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14172,
                  "src": "8189:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14140,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "8224:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14172,
                  "src": "8214:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14138,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "8214:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "8214:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8188:47:76"
            },
            "returnParameters": {
              "id": 14142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8245:0:76"
            },
            "scope": 14663,
            "src": "8161:332:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14209,
              "nodeType": "Block",
              "src": "9070:259:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14185,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14178,
                                  "src": "9128:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9120:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14183,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9120:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9120:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14182,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "9101:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9101:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14193,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "9190:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14194,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9190:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14191,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9179:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14192,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "9179:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9179:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14190,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9169:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9169:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9204:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14188,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14178,
                              "src": "9144:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "9144:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9144:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9101:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9220:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9080:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9080:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14202,
                  "nodeType": "ExpressionStatement",
                  "src": "9080:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14206,
                        "name": "_tokenOnchainID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14175,
                        "src": "9306:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14203,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "9287:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOnchainID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15810,
                      "src": "9287:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9287:35:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14208,
                  "nodeType": "ExpressionStatement",
                  "src": "9287:35:76"
                }
              ]
            },
            "documentation": {
              "id": 14173,
              "nodeType": "StructuredDocumentation",
              "src": "8499:479:76",
              "text": "  @dev calls the `setOnchainID` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setOnchainID}.\n  Requires that `_tokenOnchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "87cc060c",
            "id": 14210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenOnchainID",
            "nameLocation": "8992:21:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14175,
                  "mutability": "mutable",
                  "name": "_tokenOnchainID",
                  "nameLocation": "9022:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14210,
                  "src": "9014:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14178,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "9049:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14210,
                  "src": "9039:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14177,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14176,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "9039:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "9039:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9013:47:76"
            },
            "returnParameters": {
              "id": 14180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9070:0:76"
            },
            "scope": 14663,
            "src": "8983:346:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14249,
              "nodeType": "Block",
              "src": "9972:296:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14223,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14216,
                                  "src": "10035:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10027:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14221,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10027:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10027:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14220,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "10003:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10003:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14231,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "10097:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10097:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14229,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "10086:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "10086:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10086:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14228,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "10076:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10076:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10111:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14226,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14216,
                              "src": "10051:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "10051:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10051:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10003:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 14238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10127:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 14219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9982:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9982:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14240,
                  "nodeType": "ExpressionStatement",
                  "src": "9982:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14246,
                        "name": "_claimTopicsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14213,
                        "src": "10240:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14241,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "10192:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "10192:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10192:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setClaimTopicsRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10255,
                      "src": "10192:47:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:69:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14248,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:69:76"
                }
              ]
            },
            "documentation": {
              "id": 14211,
              "nodeType": "StructuredDocumentation",
              "src": "9335:535:76",
              "text": "  @dev calls the `setClaimTopicsRegistry` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-setClaimTopicsRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "eeac6fe6",
            "id": 14250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetClaimTopicsRegistry",
            "nameLocation": "9884:26:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14213,
                  "mutability": "mutable",
                  "name": "_claimTopicsRegistry",
                  "nameLocation": "9919:20:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14250,
                  "src": "9911:28:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9911:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14216,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "9951:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14250,
                  "src": "9941:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14215,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14214,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "9941:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "9941:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9910:52:76"
            },
            "returnParameters": {
              "id": 14218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9972:0:76"
            },
            "scope": 14663,
            "src": "9875:393:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14289,
              "nodeType": "Block",
              "src": "10923:302:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14263,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14256,
                                  "src": "10986:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10978:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14261,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10978:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10978:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14260,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "10954:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10954:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14271,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "11048:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "11048:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14269,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "11037:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "11037:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11037:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14268,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "11027:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11027:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11062:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14266,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14256,
                              "src": "11002:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "11002:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11002:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10954:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 14278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11078:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 14259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10933:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10933:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14280,
                  "nodeType": "ExpressionStatement",
                  "src": "10933:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14286,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14253,
                        "src": "11194:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14281,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "11143:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "11143:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11143:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTrustedIssuersRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10261,
                      "src": "11143:50:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11143:75:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14288,
                  "nodeType": "ExpressionStatement",
                  "src": "11143:75:76"
                }
              ]
            },
            "documentation": {
              "id": 14251,
              "nodeType": "StructuredDocumentation",
              "src": "10274:541:76",
              "text": "  @dev calls the `setTrustedIssuersRegistry` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-setTrustedIssuersRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "f087249c",
            "id": 14290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTrustedIssuersRegistry",
            "nameLocation": "10829:29:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14253,
                  "mutability": "mutable",
                  "name": "_trustedIssuersRegistry",
                  "nameLocation": "10867:23:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14290,
                  "src": "10859:31:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10859:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14256,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "10902:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14290,
                  "src": "10892:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14255,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14254,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "10892:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "10892:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10858:55:76"
            },
            "returnParameters": {
              "id": 14258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10923:0:76"
            },
            "scope": 14663,
            "src": "10820:405:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14336,
              "nodeType": "Block",
              "src": "11933:316:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14307,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14300,
                                  "src": "11997:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11989:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14305,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11989:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11989:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14304,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "11964:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11964:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14315,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "12059:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "12059:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14313,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "12048:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "12048:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12048:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14312,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "12038:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12038:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14310,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14300,
                              "src": "12013:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "12013:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12013:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11964:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12089:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11943:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11943:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14324,
                  "nodeType": "ExpressionStatement",
                  "src": "11943:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14332,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14294,
                        "src": "12213:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      },
                      {
                        "id": 14333,
                        "name": "_claimTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14297,
                        "src": "12229:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14325,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "12153:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "12153:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12153:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "12153:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12153:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTrustedIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10524,
                      "src": "12153:59:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IClaimIssuer,uint256[] memory) external"
                      }
                    },
                    "id": 14334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:89:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14335,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:89:76"
                }
              ]
            },
            "documentation": {
              "id": 14291,
              "nodeType": "StructuredDocumentation",
              "src": "11231:544:76",
              "text": "  @dev calls the `addTrustedIssuer` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-addTrustedIssuer}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "fc6de4b5",
            "id": 14337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callAddTrustedIssuer",
            "nameLocation": "11789:20:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14294,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "11832:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11819:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14293,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14292,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "11819:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "11819:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14297,
                  "mutability": "mutable",
                  "name": "_claimTopics",
                  "nameLocation": "11875:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11856:31:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14295,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11856:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14296,
                    "nodeType": "ArrayTypeName",
                    "src": "11856:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14300,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "11907:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11897:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14299,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14298,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "11897:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "11897:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11809:114:76"
            },
            "returnParameters": {
              "id": 14302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11933:0:76"
            },
            "scope": 14663,
            "src": "11780:469:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14379,
              "nodeType": "Block",
              "src": "12903:305:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14351,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14344,
                                  "src": "12967:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12959:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14349,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12959:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12959:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14348,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "12934:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12934:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14359,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "13029:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "13029:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14357,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "13018:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "13018:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13018:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14356,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "13008:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13008:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13043:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14354,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14344,
                              "src": "12983:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "12983:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12983:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12934:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13059:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12913:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14368,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14376,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14341,
                        "src": "13186:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14369,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "13123:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "13123:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13123:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "13123:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13123:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeTrustedIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10531,
                      "src": "13123:62:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$returns$__$",
                        "typeString": "function (contract IClaimIssuer) external"
                      }
                    },
                    "id": 14377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13123:78:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14378,
                  "nodeType": "ExpressionStatement",
                  "src": "13123:78:76"
                }
              ]
            },
            "documentation": {
              "id": 14338,
              "nodeType": "StructuredDocumentation",
              "src": "12255:550:76",
              "text": "  @dev calls the `removeTrustedIssuer` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "9ce2d88e",
            "id": 14380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callRemoveTrustedIssuer",
            "nameLocation": "12819:23:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14341,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "12856:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14380,
                  "src": "12843:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14339,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "12843:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "12843:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14344,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "12882:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14380,
                  "src": "12872:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14342,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "12872:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "12872:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12842:51:76"
            },
            "returnParameters": {
              "id": 14346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12903:0:76"
            },
            "scope": 14663,
            "src": "12810:398:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14426,
              "nodeType": "Block",
              "src": "13937:323:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14397,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14390,
                                  "src": "14001:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13993:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14395,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13993:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13993:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14394,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "13968:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13968:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14405,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "14063:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14406,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "14063:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14403,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "14052:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "14052:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14052:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14402,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "14042:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14042:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14077:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14400,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14390,
                              "src": "14017:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "14017:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14017:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13968:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14093:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13947:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13947:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14414,
                  "nodeType": "ExpressionStatement",
                  "src": "13947:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14422,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14384,
                        "src": "14224:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      },
                      {
                        "id": 14423,
                        "name": "_claimTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14387,
                        "src": "14240:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14415,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "14157:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "14157:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14157:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "14157:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14157:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateIssuerClaimTopics",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10541,
                      "src": "14157:66:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IClaimIssuer,uint256[] memory) external"
                      }
                    },
                    "id": 14424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14157:96:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14425,
                  "nodeType": "ExpressionStatement",
                  "src": "14157:96:76"
                }
              ]
            },
            "documentation": {
              "id": 14381,
              "nodeType": "StructuredDocumentation",
              "src": "13214:558:76",
              "text": "  @dev calls the `updateIssuerClaimTopics` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "4837b797",
            "id": 14427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callUpdateIssuerClaimTopics",
            "nameLocation": "13786:27:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14384,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "13836:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13823:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14382,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "13823:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "13823:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14387,
                  "mutability": "mutable",
                  "name": "_claimTopics",
                  "nameLocation": "13879:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13860:31:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14385,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13860:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14386,
                    "nodeType": "ArrayTypeName",
                    "src": "13860:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14390,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "13911:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13901:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14389,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14388,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "13901:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "13901:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13813:114:76"
            },
            "returnParameters": {
              "id": 14392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13937:0:76"
            },
            "scope": 14663,
            "src": "13777:483:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14468,
              "nodeType": "Block",
              "src": "14877:291:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14440,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14433,
                                  "src": "14939:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14931:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14438,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14931:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14931:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14437,
                            "name": "isClaimRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14978,
                            "src": "14908:22:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14908:43:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14448,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "15001:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "15001:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14446,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "14990:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "14990:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14990:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14445,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "14980:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14980:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15015:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14443,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14433,
                              "src": "14955:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "14955:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14955:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14908:109:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436c61696d52656769737472794d616e61676572",
                        "id": 14455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15031:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        },
                        "value": "Role: Sender is NOT ClaimRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        }
                      ],
                      "id": 14436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14887:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14887:196:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14457,
                  "nodeType": "ExpressionStatement",
                  "src": "14887:196:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14465,
                        "name": "_claimTopic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14430,
                        "src": "15149:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14458,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "15093:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "15093:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15093:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "15093:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15093:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addClaimTopic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10152,
                      "src": "15093:55:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15093:68:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "15093:68:76"
                }
              ]
            },
            "documentation": {
              "id": 14428,
              "nodeType": "StructuredDocumentation",
              "src": "14266:527:76",
              "text": "  @dev calls the `addClaimTopic` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n  See {IClaimTopicsRegistry-addClaimTopic}.\n  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "dd39042b",
            "id": 14469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callAddClaimTopic",
            "nameLocation": "14807:17:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14430,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "14833:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14469,
                  "src": "14825:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14825:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14433,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "14856:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14469,
                  "src": "14846:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14432,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14431,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "14846:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "14846:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14824:43:76"
            },
            "returnParameters": {
              "id": 14435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14877:0:76"
            },
            "scope": 14663,
            "src": "14798:370:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14510,
              "nodeType": "Block",
              "src": "15794:294:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14482,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14475,
                                  "src": "15856:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15848:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14480,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15848:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15848:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14479,
                            "name": "isClaimRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14978,
                            "src": "15825:22:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15825:43:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14490,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "15918:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "15918:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14488,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "15907:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "15907:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15907:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14487,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "15897:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15897:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15932:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14485,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14475,
                              "src": "15872:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "15872:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15872:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15825:109:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436c61696d52656769737472794d616e61676572",
                        "id": 14497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15948:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        },
                        "value": "Role: Sender is NOT ClaimRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        }
                      ],
                      "id": 14478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15804:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15804:196:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14499,
                  "nodeType": "ExpressionStatement",
                  "src": "15804:196:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14507,
                        "name": "_claimTopic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14472,
                        "src": "16069:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14500,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "16010:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "16010:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16010:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "16010:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16010:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeClaimTopic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10158,
                      "src": "16010:58:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 14508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16010:71:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14509,
                  "nodeType": "ExpressionStatement",
                  "src": "16010:71:76"
                }
              ]
            },
            "documentation": {
              "id": 14470,
              "nodeType": "StructuredDocumentation",
              "src": "15174:533:76",
              "text": "  @dev calls the `removeClaimTopic` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n  See {IClaimTopicsRegistry-removeClaimTopic}.\n  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "2f56d91b",
            "id": 14511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callRemoveClaimTopic",
            "nameLocation": "15721:20:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14472,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "15750:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14511,
                  "src": "15742:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15742:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14475,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "15773:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14511,
                  "src": "15763:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14474,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14473,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "15763:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "15763:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15741:43:76"
            },
            "returnParameters": {
              "id": 14477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15794:0:76"
            },
            "scope": 14663,
            "src": "15712:376:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14525,
              "nodeType": "Block",
              "src": "16509:66:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14522,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14514,
                        "src": "16558:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14519,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "16519:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15973,
                      "src": "16519:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16519:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14524,
                  "nodeType": "ExpressionStatement",
                  "src": "16519:49:76"
                }
              ]
            },
            "documentation": {
              "id": 14512,
              "nodeType": "StructuredDocumentation",
              "src": "16094:326:76",
              "text": "  @dev calls the `transferOwnershipOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-transferOwnershipOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "aa1cef56",
            "id": 14526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14516,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "16499:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "16499:9:76"
              }
            ],
            "name": "callTransferOwnershipOnTokenContract",
            "nameLocation": "16434:36:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14514,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "16479:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14526,
                  "src": "16471:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16471:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16470:19:76"
            },
            "returnParameters": {
              "id": 14518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16509:0:76"
            },
            "scope": 14663,
            "src": "16425:150:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14542,
              "nodeType": "Block",
              "src": "17064:96:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14539,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14529,
                        "src": "17143:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14534,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "17074:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "17074:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17074:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10352,
                      "src": "17074:68:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17074:79:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14541,
                  "nodeType": "ExpressionStatement",
                  "src": "17074:79:76"
                }
              ]
            },
            "documentation": {
              "id": 14527,
              "nodeType": "StructuredDocumentation",
              "src": "16581:383:76",
              "text": "  @dev calls the `transferOwnershipOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-transferOwnershipOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "e3812318",
            "id": 14543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14531,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "17054:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "17054:9:76"
              }
            ],
            "name": "callTransferOwnershipOnIdentityRegistryContract",
            "nameLocation": "16978:47:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14529,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "17034:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14543,
                  "src": "17026:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17026:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17025:19:76"
            },
            "returnParameters": {
              "id": 14533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17064:0:76"
            },
            "scope": 14663,
            "src": "16969:191:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14559,
              "nodeType": "Block",
              "src": "17611:84:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14556,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14546,
                        "src": "17678:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14551,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "17621:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "compliance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15770,
                          "src": "17621:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICompliance_$9302_$",
                            "typeString": "function () view external returns (contract ICompliance)"
                          }
                        },
                        "id": 14554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17621:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      },
                      "id": 14555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnComplianceContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9301,
                      "src": "17621:56:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17621:67:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14558,
                  "nodeType": "ExpressionStatement",
                  "src": "17621:67:76"
                }
              ]
            },
            "documentation": {
              "id": 14544,
              "nodeType": "StructuredDocumentation",
              "src": "17166:351:76",
              "text": "  @dev calls the `transferOwnershipOnComplianceContract` function on the Compliance contract\n  OwnerManager has to be set as owner on the Compliance smart contract to process this function\n  See {ICompliance-transferOwnershipOnComplianceContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "1096a7ec",
            "id": 14560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14548,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "17601:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "17601:9:76"
              }
            ],
            "name": "callTransferOwnershipOnComplianceContract",
            "nameLocation": "17531:41:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14546,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "17581:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14560,
                  "src": "17573:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17573:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17572:19:76"
            },
            "returnParameters": {
              "id": 14550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17611:0:76"
            },
            "scope": 14663,
            "src": "17522:173:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14578,
              "nodeType": "Block",
              "src": "18204:116:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14575,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14563,
                        "src": "18303:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14568,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "18214:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "18214:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18214:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "18214:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18214:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnClaimTopicsRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10171,
                      "src": "18214:88:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18214:99:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14577,
                  "nodeType": "ExpressionStatement",
                  "src": "18214:99:76"
                }
              ]
            },
            "documentation": {
              "id": 14561,
              "nodeType": "StructuredDocumentation",
              "src": "17701:400:76",
              "text": "  @dev calls the `transferOwnershipOnClaimTopicsRegistryContract` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics registry smart contract to process this function\n  See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "818ab8bd",
            "id": 14579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14565,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "18194:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "18194:9:76"
              }
            ],
            "name": "callTransferOwnershipOnClaimTopicsRegistryContract",
            "nameLocation": "18115:50:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14563,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "18174:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14579,
                  "src": "18166:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18166:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18165:19:76"
            },
            "returnParameters": {
              "id": 14567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18204:0:76"
            },
            "scope": 14663,
            "src": "18106:214:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14597,
              "nodeType": "Block",
              "src": "18826:113:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14594,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14582,
                        "src": "18922:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14587,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "18836:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "18836:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18836:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "18836:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18836:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnIssuersRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10583,
                      "src": "18836:85:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18836:96:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14596,
                  "nodeType": "ExpressionStatement",
                  "src": "18836:96:76"
                }
              ]
            },
            "documentation": {
              "id": 14580,
              "nodeType": "StructuredDocumentation",
              "src": "18326:401:76",
              "text": "  @dev calls the `transferOwnershipOnIssuersRegistryContract` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers registry smart contract to process this function\n  See {ITrustedIssuersRegistry-transferOwnershipOnIssuersRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "99884aab",
            "id": 14598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14584,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "18816:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "18816:9:76"
              }
            ],
            "name": "callTransferOwnershipOnIssuersRegistryContract",
            "nameLocation": "18741:46:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14582,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "18796:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14598,
                  "src": "18788:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18788:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18787:19:76"
            },
            "returnParameters": {
              "id": 14586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18826:0:76"
            },
            "scope": 14663,
            "src": "18732:207:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14612,
              "nodeType": "Block",
              "src": "19330:54:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14609,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14601,
                        "src": "19370:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14606,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "19340:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAgentOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15979,
                      "src": "19340:29:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19340:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14611,
                  "nodeType": "ExpressionStatement",
                  "src": "19340:37:76"
                }
              ]
            },
            "documentation": {
              "id": 14599,
              "nodeType": "StructuredDocumentation",
              "src": "18945:308:76",
              "text": "  @dev calls the `addAgentOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-addAgentOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "256ccc07",
            "id": 14613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14603,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "19320:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "19320:9:76"
              }
            ],
            "name": "callAddAgentOnTokenContract",
            "nameLocation": "19267:27:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14601,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "19303:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "19295:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19295:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19294:16:76"
            },
            "returnParameters": {
              "id": 14605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19330:0:76"
            },
            "scope": 14663,
            "src": "19258:126:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14627,
              "nodeType": "Block",
              "src": "19784:57:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14624,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14616,
                        "src": "19827:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14621,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "19794:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAgentOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15985,
                      "src": "19794:32:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19794:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14626,
                  "nodeType": "ExpressionStatement",
                  "src": "19794:40:76"
                }
              ]
            },
            "documentation": {
              "id": 14614,
              "nodeType": "StructuredDocumentation",
              "src": "19390:314:76",
              "text": "  @dev calls the `removeAgentOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-removeAgentOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "28d7be34",
            "id": 14628,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14619,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14618,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "19774:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "19774:9:76"
              }
            ],
            "name": "callRemoveAgentOnTokenContract",
            "nameLocation": "19718:30:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14616,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "19757:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14628,
                  "src": "19749:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19749:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19748:16:76"
            },
            "returnParameters": {
              "id": 14620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19784:0:76"
            },
            "scope": 14663,
            "src": "19709:132:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14644,
              "nodeType": "Block",
              "src": "20300:84:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14641,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14631,
                        "src": "20370:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14636,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "20310:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "20310:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20310:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAgentOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10358,
                      "src": "20310:59:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20310:67:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14643,
                  "nodeType": "ExpressionStatement",
                  "src": "20310:67:76"
                }
              ]
            },
            "documentation": {
              "id": 14629,
              "nodeType": "StructuredDocumentation",
              "src": "19847:365:76",
              "text": "  @dev calls the `addAgentOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-addAgentOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "85cef608",
            "id": 14645,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14633,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "20290:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "20290:9:76"
              }
            ],
            "name": "callAddAgentOnIdentityRegistryContract",
            "nameLocation": "20226:38:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14631,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "20273:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14645,
                  "src": "20265:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20265:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20264:16:76"
            },
            "returnParameters": {
              "id": 14635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20300:0:76"
            },
            "scope": 14663,
            "src": "20217:167:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14661,
              "nodeType": "Block",
              "src": "20852:87:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14658,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14648,
                        "src": "20925:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14653,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "20862:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "20862:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20862:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAgentOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10364,
                      "src": "20862:62:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20862:70:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14660,
                  "nodeType": "ExpressionStatement",
                  "src": "20862:70:76"
                }
              ]
            },
            "documentation": {
              "id": 14646,
              "nodeType": "StructuredDocumentation",
              "src": "20390:371:76",
              "text": "  @dev calls the `removeAgentOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-removeAgentOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "757d467f",
            "id": 14662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14650,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "20842:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "20842:9:76"
              }
            ],
            "name": "callRemoveAgentOnIdentityRegistryContract",
            "nameLocation": "20775:41:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "20825:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14662,
                  "src": "20817:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20817:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20816:16:76"
            },
            "returnParameters": {
              "id": 14652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20852:0:76"
            },
            "scope": 14663,
            "src": "20766:173:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14664,
        "src": "1490:19451:76",
        "usedErrors": []
      }
    ],
    "src": "1093:19849:76"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/roles/OwnerManager.sol",
    "exportedSymbols": {
      "Context": [
        4216
      ],
      "IClaimIssuer": [
        1456
      ],
      "IClaimTopicsRegistry": [
        10172
      ],
      "ICompliance": [
        9302
      ],
      "IERC20": [
        3009
      ],
      "IERC734": [
        1609
      ],
      "IERC735": [
        1734
      ],
      "IIdentity": [
        1743
      ],
      "IIdentityRegistry": [
        10365
      ],
      "IIdentityRegistryStorage": [
        10487
      ],
      "IToken": [
        15986
      ],
      "ITrustedIssuersRegistry": [
        10584
      ],
      "Ownable": [
        2159
      ],
      "OwnerManager": [
        14663
      ],
      "OwnerRoles": [
        15145
      ],
      "Roles": [
        15653
      ]
    },
    "id": 14664,
    "license": "GPL-3.0",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 13921,
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "1093:23:76"
      },
      {
        "absolutePath": "project:/contracts/token/IToken.sol",
        "file": "../token/IToken.sol",
        "id": 13922,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 15987,
        "src": "1118:29:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/IIdentityRegistry.sol",
        "file": "../registry/IIdentityRegistry.sol",
        "id": 13923,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10366,
        "src": "1148:43:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/ITrustedIssuersRegistry.sol",
        "file": "../registry/ITrustedIssuersRegistry.sol",
        "id": 13924,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10585,
        "src": "1192:49:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/registry/IClaimTopicsRegistry.sol",
        "file": "../registry/IClaimTopicsRegistry.sol",
        "id": 13925,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 10173,
        "src": "1242:46:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/compliance/ICompliance.sol",
        "file": "../compliance/ICompliance.sol",
        "id": 13926,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 9303,
        "src": "1289:39:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "project:/contracts/roles/OwnerRoles.sol",
        "file": "./OwnerRoles.sol",
        "id": 13927,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 15146,
        "src": "1329:26:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
        "file": "@onchain-id/solidity/contracts/interface/IIdentity.sol",
        "id": 13928,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 1744,
        "src": "1356:64:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        "file": "@onchain-id/solidity/contracts/interface/IClaimIssuer.sol",
        "id": 13929,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 14664,
        "sourceUnit": 1457,
        "src": "1421:67:76",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 13930,
              "name": "OwnerRoles",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 15145,
              "src": "1515:10:76"
            },
            "id": 13931,
            "nodeType": "InheritanceSpecifier",
            "src": "1515:10:76"
          }
        ],
        "canonicalName": "OwnerManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "id": 14663,
        "linearizedBaseContracts": [
          14663,
          15145,
          2159,
          4216
        ],
        "name": "OwnerManager",
        "nameLocation": "1499:12:76",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "documentation": {
              "id": 13932,
              "nodeType": "StructuredDocumentation",
              "src": "1532:64:76",
              "text": "@dev the token that is managed by this OwnerManager Contract"
            },
            "functionSelector": "fc0c546a",
            "id": 13935,
            "mutability": "mutable",
            "name": "token",
            "nameLocation": "1615:5:76",
            "nodeType": "VariableDeclaration",
            "scope": 14663,
            "src": "1601:19:76",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IToken_$15986",
              "typeString": "contract IToken"
            },
            "typeName": {
              "id": 13934,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 13933,
                "name": "IToken",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 15986,
                "src": "1601:6:76"
              },
              "referencedDeclaration": 15986,
              "src": "1601:6:76",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IToken_$15986",
                "typeString": "contract IToken"
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 13936,
              "nodeType": "StructuredDocumentation",
              "src": "1627:318:76",
              "text": "@dev Event emitted for each executed interaction with the compliance contract.\n For gas efficiency, only the interaction calldata selector (first 4\n bytes) is included in the event. For interactions without calldata or\n whose calldata is shorter than 4 bytes, the selector will be `0`."
            },
            "eventSelector": "5779a24d18a4639b1d59461e68c00fb0cd02533a4c5a6ff3ca6363e23e2fff56",
            "id": 13942,
            "name": "ComplianceInteraction",
            "nameLocation": "1956:21:76",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 13941,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13938,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "target",
                  "nameLocation": "1994:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13942,
                  "src": "1978:22:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13937,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1978:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13940,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "selector",
                  "nameLocation": "2009:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13942,
                  "src": "2002:15:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 13939,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "2002:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1977:41:76"
            },
            "src": "1950:69:76"
          },
          {
            "body": {
              "id": 13954,
              "nodeType": "Block",
              "src": "2257:39:76",
              "statements": [
                {
                  "expression": {
                    "id": 13952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 13948,
                      "name": "token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13935,
                      "src": "2267:5:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$15986",
                        "typeString": "contract IToken"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 13950,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 13945,
                          "src": "2282:6:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 13949,
                        "name": "IToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 15986,
                        "src": "2275:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IToken_$15986_$",
                          "typeString": "type(contract IToken)"
                        }
                      },
                      "id": 13951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "2275:14:76",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IToken_$15986",
                        "typeString": "contract IToken"
                      }
                    },
                    "src": "2267:22:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IToken_$15986",
                      "typeString": "contract IToken"
                    }
                  },
                  "id": 13953,
                  "nodeType": "ExpressionStatement",
                  "src": "2267:22:76"
                }
              ]
            },
            "documentation": {
              "id": 13943,
              "nodeType": "StructuredDocumentation",
              "src": "2025:199:76",
              "text": "  @dev the constructor initiates the OwnerManager contract\n  and sets msg.sender as owner of the contract\n  @param _token the token managed by this OwnerManager contract"
            },
            "id": 13955,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13946,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13945,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "2249:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13955,
                  "src": "2241:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13944,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2240:16:76"
            },
            "returnParameters": {
              "id": 13947,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2257:0:76"
            },
            "scope": 14663,
            "src": "2229:67:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 13992,
              "nodeType": "Block",
              "src": "2892:271:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 13982,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 13968,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13961,
                                  "src": "2955:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 13967,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2947:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 13966,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2947:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 13969,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2947:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 13965,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "2923:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 13970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2923:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 13976,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3017:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 13977,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3017:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 13974,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "3006:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 13975,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "3006:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 13978,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3006:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 13973,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "2996:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 13979,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2996:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 13980,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3031:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 13971,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13961,
                              "src": "2971:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 13972,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "2971:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 13981,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2971:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "2923:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 13983,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3047:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 13964,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2902:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 13984,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2902:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13985,
                  "nodeType": "ExpressionStatement",
                  "src": "2902:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 13989,
                        "name": "_identityRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13958,
                        "src": "3138:17:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 13986,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "3112:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 13988,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setIdentityRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15848,
                      "src": "3112:25:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 13990,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3112:44:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 13991,
                  "nodeType": "ExpressionStatement",
                  "src": "3112:44:76"
                }
              ]
            },
            "documentation": {
              "id": 13956,
              "nodeType": "StructuredDocumentation",
              "src": "2302:494:76",
              "text": "  @dev calls the `setIdentityRegistry` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setIdentityRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "9d6de3bc",
            "id": 13993,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetIdentityRegistry",
            "nameLocation": "2810:23:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 13962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13958,
                  "mutability": "mutable",
                  "name": "_identityRegistry",
                  "nameLocation": "2842:17:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13993,
                  "src": "2834:25:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13957,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2834:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13961,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "2871:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 13993,
                  "src": "2861:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 13960,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13959,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "2861:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "2861:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2833:49:76"
            },
            "returnParameters": {
              "id": 13963,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2892:0:76"
            },
            "scope": 14663,
            "src": "2801:362:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14030,
              "nodeType": "Block",
              "src": "3733:248:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14020,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14006,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 13999,
                                  "src": "3791:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14005,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "3783:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14004,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "3783:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14007,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3783:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14003,
                            "name": "isComplianceSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14858,
                            "src": "3764:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3764:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14014,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "3853:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14015,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "3853:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14012,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "3842:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14013,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "3842:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14016,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3842:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14011,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "3832:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14017,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "3832:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14018,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "3867:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14009,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 13999,
                              "src": "3807:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14010,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "3807:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14019,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3807:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3764:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e636520536574746572",
                        "id": 14021,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3883:39:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Setter\""
                        },
                        "value": "Role: Sender is NOT Compliance Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a1ecde2814e226e76b1becf9e74df5f5ede14dd7fbfcb5ff15be14160dcf1430",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Setter\""
                        }
                      ],
                      "id": 14002,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3743:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14022,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3743:189:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14023,
                  "nodeType": "ExpressionStatement",
                  "src": "3743:189:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14027,
                        "name": "_compliance",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13996,
                        "src": "3962:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14024,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "3942:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setCompliance",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15854,
                      "src": "3942:19:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3942:32:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14029,
                  "nodeType": "ExpressionStatement",
                  "src": "3942:32:76"
                }
              ]
            },
            "documentation": {
              "id": 13994,
              "nodeType": "StructuredDocumentation",
              "src": "3169:480:76",
              "text": "  @dev calls the `setCompliance` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setCompliance}.\n  Requires that `_onchainID` is set as ComplianceSetter on the OwnerManager contract\n  Requires that msg.sender is a MANAGEMENT KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "951af88d",
            "id": 14031,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetCompliance",
            "nameLocation": "3663:17:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14000,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 13996,
                  "mutability": "mutable",
                  "name": "_compliance",
                  "nameLocation": "3689:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "3681:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 13995,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3681:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 13999,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "3712:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14031,
                  "src": "3702:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 13998,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 13997,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "3702:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "3702:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3680:43:76"
            },
            "returnParameters": {
              "id": 14001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:0:76"
            },
            "scope": 14663,
            "src": "3654:327:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14079,
              "nodeType": "Block",
              "src": "4536:1314:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14058,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14044,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14037,
                                  "src": "4595:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4587:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14042,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4587:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4587:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14041,
                            "name": "isComplianceManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14918,
                            "src": "4567:19:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4567:40:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14052,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "4657:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "4657:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14050,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "4646:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14051,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "4646:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14054,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "4646:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14049,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "4636:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "4636:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14056,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4671:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14047,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14037,
                              "src": "4611:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14048,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "4611:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14057,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4611:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4567:106:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436f6d706c69616e6365204d616e61676572",
                        "id": 14059,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4687:40:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Manager\""
                        },
                        "value": "Role: Sender is NOT Compliance Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b285b7852006b068b7086b84800d3f6a9a5bef5a287e9c64e072dc1168937613",
                          "typeString": "literal_string \"Role: Sender is NOT Compliance Manager\""
                        }
                      ],
                      "id": 14040,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "4546:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4546:182:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14061,
                  "nodeType": "ExpressionStatement",
                  "src": "4546:182:76"
                },
                {
                  "assignments": [
                    14063
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 14063,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "4746:6:76",
                      "nodeType": "VariableDeclaration",
                      "scope": 14079,
                      "src": "4738:14:76",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 14062,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4738:7:76",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 14070,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14066,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "4763:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "compliance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15770,
                          "src": "4763:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICompliance_$9302_$",
                            "typeString": "function () view external returns (contract ICompliance)"
                          }
                        },
                        "id": 14068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4763:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      ],
                      "id": 14065,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "4755:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 14064,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4755:7:76",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 14069,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4755:27:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4738:44:76"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "5222:552:76",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "5236:36:76",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "5267:4:76",
                              "type": "",
                              "value": "0x40"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "5261:5:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5261:11:76"
                        },
                        "variables": [
                          {
                            "name": "freeMemoryPointer",
                            "nodeType": "YulTypedName",
                            "src": "5240:17:76",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "name": "freeMemoryPointer",
                              "nodeType": "YulIdentifier",
                              "src": "5298:17:76"
                            },
                            {
                              "name": "callData.offset",
                              "nodeType": "YulIdentifier",
                              "src": "5317:15:76"
                            },
                            {
                              "name": "callData.length",
                              "nodeType": "YulIdentifier",
                              "src": "5334:15:76"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "5285:12:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5285:65:76"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5285:65:76"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5634:126:76",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5671:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5674:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5677:14:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5677:16:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "returndatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "5656:14:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5656:38:76"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5656:38:76"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5722:1:76",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "5725:14:76"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5725:16:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "5715:6:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5715:27:76"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5715:27:76"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [],
                                  "functionName": {
                                    "name": "gas",
                                    "nodeType": "YulIdentifier",
                                    "src": "5416:3:76"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "5416:5:76"
                                },
                                {
                                  "name": "target",
                                  "nodeType": "YulIdentifier",
                                  "src": "5443:6:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5471:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "name": "freeMemoryPointer",
                                  "nodeType": "YulIdentifier",
                                  "src": "5494:17:76"
                                },
                                {
                                  "name": "callData.length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5533:15:76"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5570:1:76",
                                  "type": "",
                                  "value": "0"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "5593:1:76",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "call",
                                "nodeType": "YulIdentifier",
                                "src": "5390:4:76"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "5390:226:76"
                            }
                          ],
                          "functionName": {
                            "name": "iszero",
                            "nodeType": "YulIdentifier",
                            "src": "5366:6:76"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5366:251:76"
                        },
                        "nodeType": "YulIf",
                        "src": "5363:397:76"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 14034,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5334:15:76",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14034,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5533:15:76",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14034,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "5317:15:76",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 14063,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "5443:6:76",
                      "valueSize": 1
                    }
                  ],
                  "id": 14071,
                  "nodeType": "InlineAssembly",
                  "src": "5213:561:76"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 14073,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14063,
                        "src": "5811:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 14075,
                            "name": "callData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14034,
                            "src": "5828:8:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "id": 14074,
                          "name": "selector",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 14096,
                          "src": "5819:8:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_bytes4_$",
                            "typeString": "function (bytes calldata) pure returns (bytes4)"
                          }
                        },
                        "id": 14076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5819:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "id": 14072,
                      "name": "ComplianceInteraction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 13942,
                      "src": "5789:21:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bytes4_$returns$__$",
                        "typeString": "function (address,bytes4)"
                      }
                    },
                    "id": 14077,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5789:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14078,
                  "nodeType": "EmitStatement",
                  "src": "5784:54:76"
                }
              ]
            },
            "documentation": {
              "id": 14032,
              "nodeType": "StructuredDocumentation",
              "src": "3987:456:76",
              "text": "  @dev calls any onlyOwner function available on the compliance contract\n  OwnerManager has to be set as owner on the compliance smart contract to process this function\n  Requires that `_onchainID` is set as ComplianceManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "5c5f2047",
            "id": 14080,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callComplianceFunction",
            "nameLocation": "4457:22:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14038,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14034,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "4495:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14080,
                  "src": "4480:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14033,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4480:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14037,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "4515:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14080,
                  "src": "4505:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14036,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14035,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "4505:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "4505:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4479:47:76"
            },
            "returnParameters": {
              "id": 14039,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4536:0:76"
            },
            "scope": 14663,
            "src": "4448:1402:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14095,
              "nodeType": "Block",
              "src": "6159:722:76",
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 14091,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 14088,
                        "name": "callData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14083,
                        "src": "6173:8:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      "id": 14089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6173:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 14090,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6192:1:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "6173:20:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 14094,
                  "nodeType": "IfStatement",
                  "src": "6169:702:76",
                  "trueBody": {
                    "id": 14093,
                    "nodeType": "Block",
                    "src": "6195:676:76",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "6782:75:76",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "6800:39:76",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "callData.offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "6823:15:76"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6810:12:76"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6810:29:76"
                              },
                              "variableNames": [
                                {
                                  "name": "result",
                                  "nodeType": "YulIdentifier",
                                  "src": "6800:6:76"
                                }
                              ]
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 14083,
                            "isOffset": true,
                            "isSlot": false,
                            "src": "6823:15:76",
                            "suffix": "offset",
                            "valueSize": 1
                          },
                          {
                            "declaration": 14086,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "6800:6:76",
                            "valueSize": 1
                          }
                        ],
                        "id": 14092,
                        "nodeType": "InlineAssembly",
                        "src": "6773:84:76"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 14081,
              "nodeType": "StructuredDocumentation",
              "src": "5856:217:76",
              "text": "@dev Extracts the Solidity ABI selector for the specified interaction.\n @param callData Interaction data.\n @return result The 4 byte function selector of the call encoded in\n this interaction."
            },
            "id": 14096,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "selector",
            "nameLocation": "6087:8:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14084,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14083,
                  "mutability": "mutable",
                  "name": "callData",
                  "nameLocation": "6111:8:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14096,
                  "src": "6096:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 14082,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6096:5:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6095:25:76"
            },
            "returnParameters": {
              "id": 14087,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14086,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "6151:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14096,
                  "src": "6144:13:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 14085,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6144:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6143:15:76"
            },
            "scope": 14663,
            "src": "6078:803:76",
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 14133,
              "nodeType": "Block",
              "src": "7437:244:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14109,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14102,
                                  "src": "7495:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14108,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7487:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14107,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7487:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7487:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14106,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "7468:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7468:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14117,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "7557:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14118,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "7557:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14115,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "7546:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14116,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "7546:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14119,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "7546:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14114,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "7536:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7536:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7571:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14112,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14102,
                              "src": "7511:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "7511:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14122,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7511:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "7468:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7587:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14105,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "7447:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7447:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14126,
                  "nodeType": "ExpressionStatement",
                  "src": "7447:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14130,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14099,
                        "src": "7668:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 14127,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "7654:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setName",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15798,
                      "src": "7654:13:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 14131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7654:20:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14132,
                  "nodeType": "ExpressionStatement",
                  "src": "7654:20:76"
                }
              ]
            },
            "documentation": {
              "id": 14097,
              "nodeType": "StructuredDocumentation",
              "src": "6887:465:76",
              "text": "  @dev calls the `setName` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setName}.\n  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "309ff3d1",
            "id": 14134,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenName",
            "nameLocation": "7366:16:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14103,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14099,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "7399:5:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14134,
                  "src": "7383:21:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14098,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "7383:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14102,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "7416:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14134,
                  "src": "7406:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14101,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14100,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "7406:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "7406:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7382:45:76"
            },
            "returnParameters": {
              "id": 14104,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7437:0:76"
            },
            "scope": 14663,
            "src": "7357:324:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14171,
              "nodeType": "Block",
              "src": "8245:248:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14161,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14147,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14140,
                                  "src": "8303:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14146,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8295:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14145,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8295:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14148,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8295:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14144,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "8276:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14149,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8276:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14155,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "8365:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14156,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "8365:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14153,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "8354:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14154,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "8354:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14157,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8354:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14152,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "8344:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14158,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8344:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8379:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14150,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14140,
                              "src": "8319:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14151,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "8319:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8319:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "8276:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8395:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14143,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "8255:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8255:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14164,
                  "nodeType": "ExpressionStatement",
                  "src": "8255:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14168,
                        "name": "_symbol",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14137,
                        "src": "8478:7:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "id": 14165,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "8462:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14167,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setSymbol",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15804,
                      "src": "8462:15:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 14169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8462:24:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14170,
                  "nodeType": "ExpressionStatement",
                  "src": "8462:24:76"
                }
              ]
            },
            "documentation": {
              "id": 14135,
              "nodeType": "StructuredDocumentation",
              "src": "7687:469:76",
              "text": "  @dev calls the `setSymbol` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setSymbol}.\n  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "2af70c30",
            "id": 14172,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenSymbol",
            "nameLocation": "8170:18:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14141,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14137,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "8205:7:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14172,
                  "src": "8189:23:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 14136,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8189:6:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14140,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "8224:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14172,
                  "src": "8214:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14138,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "8214:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "8214:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8188:47:76"
            },
            "returnParameters": {
              "id": 14142,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8245:0:76"
            },
            "scope": 14663,
            "src": "8161:332:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14209,
              "nodeType": "Block",
              "src": "9070:259:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14199,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14185,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14178,
                                  "src": "9128:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14184,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9120:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14183,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9120:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14186,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9120:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14182,
                            "name": "isTokenInfoManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15098,
                            "src": "9101:18:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14187,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9101:39:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14193,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "9190:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14194,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "9190:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14191,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "9179:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14192,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "9179:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "9179:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14190,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "9169:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9169:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14197,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9204:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14188,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14178,
                              "src": "9144:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14189,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "9144:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14198,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9144:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "9101:105:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420546f6b656e20496e666f726d6174696f6e204d616e61676572",
                        "id": 14200,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9220:47:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        },
                        "value": "Role: Sender is NOT Token Information Manager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b71b9889449f962d2d0eb88d755e423b7f6b6e33ddd77ebde6ad7c451f28935f",
                          "typeString": "literal_string \"Role: Sender is NOT Token Information Manager\""
                        }
                      ],
                      "id": 14181,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9080:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14201,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9080:197:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14202,
                  "nodeType": "ExpressionStatement",
                  "src": "9080:197:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14206,
                        "name": "_tokenOnchainID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14175,
                        "src": "9306:15:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14203,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "9287:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14205,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setOnchainID",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15810,
                      "src": "9287:18:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14207,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9287:35:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14208,
                  "nodeType": "ExpressionStatement",
                  "src": "9287:35:76"
                }
              ]
            },
            "documentation": {
              "id": 14173,
              "nodeType": "StructuredDocumentation",
              "src": "8499:479:76",
              "text": "  @dev calls the `setOnchainID` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-setOnchainID}.\n  Requires that `_tokenOnchainID` is set as TokenInfoManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "87cc060c",
            "id": 14210,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTokenOnchainID",
            "nameLocation": "8992:21:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14179,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14175,
                  "mutability": "mutable",
                  "name": "_tokenOnchainID",
                  "nameLocation": "9022:15:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14210,
                  "src": "9014:23:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14174,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9014:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14178,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "9049:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14210,
                  "src": "9039:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14177,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14176,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "9039:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "9039:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9013:47:76"
            },
            "returnParameters": {
              "id": 14180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9070:0:76"
            },
            "scope": 14663,
            "src": "8983:346:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14249,
              "nodeType": "Block",
              "src": "9972:296:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14223,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14216,
                                  "src": "10035:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10027:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14221,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10027:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14224,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10027:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14220,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "10003:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14225,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10003:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14231,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "10097:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14232,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "10097:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14229,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "10086:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14230,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "10086:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14233,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "10086:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14228,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "10076:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14234,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10076:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14235,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10111:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14226,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14216,
                              "src": "10051:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "10051:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10051:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10003:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 14238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10127:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 14219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "9982:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9982:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14240,
                  "nodeType": "ExpressionStatement",
                  "src": "9982:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14246,
                        "name": "_claimTopicsRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14213,
                        "src": "10240:20:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14241,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "10192:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14243,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "10192:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14244,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10192:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setClaimTopicsRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10255,
                      "src": "10192:47:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14247,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10192:69:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14248,
                  "nodeType": "ExpressionStatement",
                  "src": "10192:69:76"
                }
              ]
            },
            "documentation": {
              "id": 14211,
              "nodeType": "StructuredDocumentation",
              "src": "9335:535:76",
              "text": "  @dev calls the `setClaimTopicsRegistry` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-setClaimTopicsRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "eeac6fe6",
            "id": 14250,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetClaimTopicsRegistry",
            "nameLocation": "9884:26:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14213,
                  "mutability": "mutable",
                  "name": "_claimTopicsRegistry",
                  "nameLocation": "9919:20:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14250,
                  "src": "9911:28:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14212,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9911:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14216,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "9951:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14250,
                  "src": "9941:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14215,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14214,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "9941:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "9941:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9910:52:76"
            },
            "returnParameters": {
              "id": 14218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9972:0:76"
            },
            "scope": 14663,
            "src": "9875:393:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14289,
              "nodeType": "Block",
              "src": "10923:302:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14277,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14263,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14256,
                                  "src": "10986:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14262,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10978:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14261,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10978:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14264,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10978:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14260,
                            "name": "isRegistryAddressSetter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14798,
                            "src": "10954:23:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14265,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10954:44:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14271,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "11048:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14272,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "11048:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14269,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "11037:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14270,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "11037:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14273,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11037:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14268,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "11027:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14274,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11027:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14275,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11062:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14266,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14256,
                              "src": "11002:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14267,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "11002:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14276,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11002:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "10954:110:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54205265676973747279204164647265737320536574746572",
                        "id": 14278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11078:45:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        },
                        "value": "Role: Sender is NOT Registry Address Setter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a382f0aff803ae4e0a546feb69f7fafae17cefd143109fa23ea4753e2512ba3",
                          "typeString": "literal_string \"Role: Sender is NOT Registry Address Setter\""
                        }
                      ],
                      "id": 14259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "10933:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14279,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10933:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14280,
                  "nodeType": "ExpressionStatement",
                  "src": "10933:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14286,
                        "name": "_trustedIssuersRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14253,
                        "src": "11194:23:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14281,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "11143:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "11143:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11143:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setTrustedIssuersRegistry",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10261,
                      "src": "11143:50:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11143:75:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14288,
                  "nodeType": "ExpressionStatement",
                  "src": "11143:75:76"
                }
              ]
            },
            "documentation": {
              "id": 14251,
              "nodeType": "StructuredDocumentation",
              "src": "10274:541:76",
              "text": "  @dev calls the `setTrustedIssuersRegistry` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-setTrustedIssuersRegistry}.\n  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "f087249c",
            "id": 14290,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callSetTrustedIssuersRegistry",
            "nameLocation": "10829:29:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14253,
                  "mutability": "mutable",
                  "name": "_trustedIssuersRegistry",
                  "nameLocation": "10867:23:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14290,
                  "src": "10859:31:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14252,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10859:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14256,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "10902:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14290,
                  "src": "10892:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14255,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14254,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "10892:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "10892:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10858:55:76"
            },
            "returnParameters": {
              "id": 14258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10923:0:76"
            },
            "scope": 14663,
            "src": "10820:405:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14336,
              "nodeType": "Block",
              "src": "11933:316:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14307,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14300,
                                  "src": "11997:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14306,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11989:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14305,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11989:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14308,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11989:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14304,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "11964:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14309,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11964:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14315,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "12059:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14316,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "12059:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14313,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "12048:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14314,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "12048:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "12048:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14312,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "12038:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14318,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12038:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12073:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14310,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14300,
                              "src": "12013:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14311,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "12013:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12013:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11964:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14322,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12089:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14303,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "11943:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14323,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11943:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14324,
                  "nodeType": "ExpressionStatement",
                  "src": "11943:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14332,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14294,
                        "src": "12213:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      },
                      {
                        "id": 14333,
                        "name": "_claimTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14297,
                        "src": "12229:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14325,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "12153:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14327,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "12153:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14328,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12153:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14329,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "12153:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14330,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12153:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addTrustedIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10524,
                      "src": "12153:59:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IClaimIssuer,uint256[] memory) external"
                      }
                    },
                    "id": 14334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12153:89:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14335,
                  "nodeType": "ExpressionStatement",
                  "src": "12153:89:76"
                }
              ]
            },
            "documentation": {
              "id": 14291,
              "nodeType": "StructuredDocumentation",
              "src": "11231:544:76",
              "text": "  @dev calls the `addTrustedIssuer` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-addTrustedIssuer}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "fc6de4b5",
            "id": 14337,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callAddTrustedIssuer",
            "nameLocation": "11789:20:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14301,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14294,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "11832:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11819:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14293,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14292,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "11819:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "11819:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14297,
                  "mutability": "mutable",
                  "name": "_claimTopics",
                  "nameLocation": "11875:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11856:31:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14295,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "11856:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14296,
                    "nodeType": "ArrayTypeName",
                    "src": "11856:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14300,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "11907:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14337,
                  "src": "11897:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14299,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14298,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "11897:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "11897:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11809:114:76"
            },
            "returnParameters": {
              "id": 14302,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11933:0:76"
            },
            "scope": 14663,
            "src": "11780:469:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14379,
              "nodeType": "Block",
              "src": "12903:305:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14365,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14351,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14344,
                                  "src": "12967:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14350,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "12959:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14349,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "12959:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14352,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "12959:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14348,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "12934:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12934:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14359,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "13029:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14360,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "13029:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14357,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "13018:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14358,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "13018:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14361,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13018:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14356,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "13008:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13008:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14363,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13043:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14354,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14344,
                              "src": "12983:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "12983:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14364,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12983:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "12934:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14366,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13059:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14347,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "12913:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12913:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14368,
                  "nodeType": "ExpressionStatement",
                  "src": "12913:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14376,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14341,
                        "src": "13186:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14369,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "13123:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14371,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "13123:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13123:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "13123:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14374,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13123:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14375,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeTrustedIssuer",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10531,
                      "src": "13123:62:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$returns$__$",
                        "typeString": "function (contract IClaimIssuer) external"
                      }
                    },
                    "id": 14377,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13123:78:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14378,
                  "nodeType": "ExpressionStatement",
                  "src": "13123:78:76"
                }
              ]
            },
            "documentation": {
              "id": 14338,
              "nodeType": "StructuredDocumentation",
              "src": "12255:550:76",
              "text": "  @dev calls the `removeTrustedIssuer` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-removeTrustedIssuer}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "9ce2d88e",
            "id": 14380,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callRemoveTrustedIssuer",
            "nameLocation": "12819:23:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14345,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14341,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "12856:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14380,
                  "src": "12843:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14340,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14339,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "12843:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "12843:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14344,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "12882:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14380,
                  "src": "12872:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14343,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14342,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "12872:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "12872:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12842:51:76"
            },
            "returnParameters": {
              "id": 14346,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12903:0:76"
            },
            "scope": 14663,
            "src": "12810:398:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14426,
              "nodeType": "Block",
              "src": "13937:323:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14397,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14390,
                                  "src": "14001:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "13993:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14395,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "13993:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14398,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13993:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14394,
                            "name": "isIssuersRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15038,
                            "src": "13968:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14399,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13968:45:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14405,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "14063:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14406,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "14063:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14403,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "14052:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14404,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "14052:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14407,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14052:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14402,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "14042:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14408,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14042:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14077:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14400,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14390,
                              "src": "14017:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14401,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "14017:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14410,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14017:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "13968:111:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f54204973737565727352656769737472794d616e61676572",
                        "id": 14412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14093:44:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        },
                        "value": "Role: Sender is NOT IssuersRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1cea3625456e6a4ccdd9aecc83e1c4dc84afaf7a6d9e9fc4679c908c544ae59b",
                          "typeString": "literal_string \"Role: Sender is NOT IssuersRegistryManager\""
                        }
                      ],
                      "id": 14393,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "13947:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13947:200:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14414,
                  "nodeType": "ExpressionStatement",
                  "src": "13947:200:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14422,
                        "name": "_trustedIssuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14384,
                        "src": "14224:14:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        }
                      },
                      {
                        "id": 14423,
                        "name": "_claimTopics",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14387,
                        "src": "14240:12:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                          "typeString": "contract IClaimIssuer"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14415,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "14157:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "14157:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14157:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14419,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "14157:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14157:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14421,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "updateIssuerClaimTopics",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10541,
                      "src": "14157:66:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IClaimIssuer_$1456_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (contract IClaimIssuer,uint256[] memory) external"
                      }
                    },
                    "id": 14424,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14157:96:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14425,
                  "nodeType": "ExpressionStatement",
                  "src": "14157:96:76"
                }
              ]
            },
            "documentation": {
              "id": 14381,
              "nodeType": "StructuredDocumentation",
              "src": "13214:558:76",
              "text": "  @dev calls the `updateIssuerClaimTopics` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function\n  See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.\n  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "4837b797",
            "id": 14427,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callUpdateIssuerClaimTopics",
            "nameLocation": "13786:27:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14384,
                  "mutability": "mutable",
                  "name": "_trustedIssuer",
                  "nameLocation": "13836:14:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13823:27:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                    "typeString": "contract IClaimIssuer"
                  },
                  "typeName": {
                    "id": 14383,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14382,
                      "name": "IClaimIssuer",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1456,
                      "src": "13823:12:76"
                    },
                    "referencedDeclaration": 1456,
                    "src": "13823:12:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IClaimIssuer_$1456",
                      "typeString": "contract IClaimIssuer"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14387,
                  "mutability": "mutable",
                  "name": "_claimTopics",
                  "nameLocation": "13879:12:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13860:31:76",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 14385,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "13860:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 14386,
                    "nodeType": "ArrayTypeName",
                    "src": "13860:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14390,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "13911:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14427,
                  "src": "13901:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14389,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14388,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "13901:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "13901:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13813:114:76"
            },
            "returnParameters": {
              "id": 14392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13937:0:76"
            },
            "scope": 14663,
            "src": "13777:483:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14468,
              "nodeType": "Block",
              "src": "14877:291:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14454,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14440,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14433,
                                  "src": "14939:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "14931:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14438,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "14931:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14441,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14931:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14437,
                            "name": "isClaimRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14978,
                            "src": "14908:22:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14442,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14908:43:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14448,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "15001:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "15001:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14446,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "14990:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14447,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "14990:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14450,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "14990:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14445,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "14980:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "14980:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14452,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15015:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14443,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14433,
                              "src": "14955:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14444,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "14955:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14955:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "14908:109:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436c61696d52656769737472794d616e61676572",
                        "id": 14455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15031:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        },
                        "value": "Role: Sender is NOT ClaimRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        }
                      ],
                      "id": 14436,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "14887:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14887:196:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14457,
                  "nodeType": "ExpressionStatement",
                  "src": "14887:196:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14465,
                        "name": "_claimTopic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14430,
                        "src": "15149:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14458,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "15093:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "15093:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14461,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "15093:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "15093:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14463,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15093:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14464,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addClaimTopic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10152,
                      "src": "15093:55:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 14466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15093:68:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14467,
                  "nodeType": "ExpressionStatement",
                  "src": "15093:68:76"
                }
              ]
            },
            "documentation": {
              "id": 14428,
              "nodeType": "StructuredDocumentation",
              "src": "14266:527:76",
              "text": "  @dev calls the `addClaimTopic` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n  See {IClaimTopicsRegistry-addClaimTopic}.\n  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "dd39042b",
            "id": 14469,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callAddClaimTopic",
            "nameLocation": "14807:17:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14434,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14430,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "14833:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14469,
                  "src": "14825:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14429,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14825:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14433,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "14856:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14469,
                  "src": "14846:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14432,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14431,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "14846:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "14846:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14824:43:76"
            },
            "returnParameters": {
              "id": 14435,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14877:0:76"
            },
            "scope": 14663,
            "src": "14798:370:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14510,
              "nodeType": "Block",
              "src": "15794:294:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 14496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 14482,
                                  "name": "_onchainID",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 14475,
                                  "src": "15856:10:76",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                                    "typeString": "contract IIdentity"
                                  }
                                ],
                                "id": 14481,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "15848:7:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 14480,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "15848:7:76",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 14483,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15848:19:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 14479,
                            "name": "isClaimRegistryManager",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 14978,
                            "src": "15825:22:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 14484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15825:43:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "expression": {
                                        "id": 14490,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 4294967281,
                                        "src": "15918:3:76",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 14491,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "15918:10:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 14488,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 4294967295,
                                      "src": "15907:3:76",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 14489,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "15907:10:76",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 14492,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "15907:22:76",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 14487,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 4294967288,
                                "src": "15897:9:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 14493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "15897:33:76",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "hexValue": "32",
                              "id": 14494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "15932:1:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              },
                              "value": "2"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_rational_2_by_1",
                                "typeString": "int_const 2"
                              }
                            ],
                            "expression": {
                              "id": 14485,
                              "name": "_onchainID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 14475,
                              "src": "15872:10:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IIdentity_$1743",
                                "typeString": "contract IIdentity"
                              }
                            },
                            "id": 14486,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "keyHasPurpose",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1598,
                            "src": "15872:24:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (bytes32,uint256) view external returns (bool)"
                            }
                          },
                          "id": 14495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15872:62:76",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "15825:109:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "526f6c653a2053656e646572206973204e4f5420436c61696d52656769737472794d616e61676572",
                        "id": 14497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15948:42:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        },
                        "value": "Role: Sender is NOT ClaimRegistryManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e7e4489e6454b196d2e13650eaf0dbf52508d1518388bccb807dffebb5df19a6",
                          "typeString": "literal_string \"Role: Sender is NOT ClaimRegistryManager\""
                        }
                      ],
                      "id": 14478,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "15804:7:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 14498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15804:196:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14499,
                  "nodeType": "ExpressionStatement",
                  "src": "15804:196:76"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14507,
                        "name": "_claimTopic",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14472,
                        "src": "16069:11:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14500,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "16010:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14502,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "16010:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14503,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "16010:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14504,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "16010:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14505,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16010:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14506,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeClaimTopic",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10158,
                      "src": "16010:58:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 14508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16010:71:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14509,
                  "nodeType": "ExpressionStatement",
                  "src": "16010:71:76"
                }
              ]
            },
            "documentation": {
              "id": 14470,
              "nodeType": "StructuredDocumentation",
              "src": "15174:533:76",
              "text": "  @dev calls the `removeClaimTopic` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function\n  See {IClaimTopicsRegistry-removeClaimTopic}.\n  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract\n  Requires that msg.sender is an ACTION KEY on `_onchainID`\n  @param _onchainID the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
            },
            "functionSelector": "2f56d91b",
            "id": 14511,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "callRemoveClaimTopic",
            "nameLocation": "15721:20:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14476,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14472,
                  "mutability": "mutable",
                  "name": "_claimTopic",
                  "nameLocation": "15750:11:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14511,
                  "src": "15742:19:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15742:7:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 14475,
                  "mutability": "mutable",
                  "name": "_onchainID",
                  "nameLocation": "15773:10:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14511,
                  "src": "15763:20:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IIdentity_$1743",
                    "typeString": "contract IIdentity"
                  },
                  "typeName": {
                    "id": 14474,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 14473,
                      "name": "IIdentity",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 1743,
                      "src": "15763:9:76"
                    },
                    "referencedDeclaration": 1743,
                    "src": "15763:9:76",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IIdentity_$1743",
                      "typeString": "contract IIdentity"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15741:43:76"
            },
            "returnParameters": {
              "id": 14477,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15794:0:76"
            },
            "scope": 14663,
            "src": "15712:376:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14525,
              "nodeType": "Block",
              "src": "16509:66:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14522,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14514,
                        "src": "16558:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14519,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "16519:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14521,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15973,
                      "src": "16519:38:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16519:49:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14524,
                  "nodeType": "ExpressionStatement",
                  "src": "16519:49:76"
                }
              ]
            },
            "documentation": {
              "id": 14512,
              "nodeType": "StructuredDocumentation",
              "src": "16094:326:76",
              "text": "  @dev calls the `transferOwnershipOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-transferOwnershipOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "aa1cef56",
            "id": 14526,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14517,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14516,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "16499:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "16499:9:76"
              }
            ],
            "name": "callTransferOwnershipOnTokenContract",
            "nameLocation": "16434:36:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14515,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14514,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "16479:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14526,
                  "src": "16471:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14513,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16471:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16470:19:76"
            },
            "returnParameters": {
              "id": 14518,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16509:0:76"
            },
            "scope": 14663,
            "src": "16425:150:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14542,
              "nodeType": "Block",
              "src": "17064:96:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14539,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14529,
                        "src": "17143:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14534,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "17074:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "17074:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14537,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17074:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14538,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10352,
                      "src": "17074:68:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14540,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17074:79:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14541,
                  "nodeType": "ExpressionStatement",
                  "src": "17074:79:76"
                }
              ]
            },
            "documentation": {
              "id": 14527,
              "nodeType": "StructuredDocumentation",
              "src": "16581:383:76",
              "text": "  @dev calls the `transferOwnershipOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-transferOwnershipOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "e3812318",
            "id": 14543,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14532,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14531,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "17054:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "17054:9:76"
              }
            ],
            "name": "callTransferOwnershipOnIdentityRegistryContract",
            "nameLocation": "16978:47:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14530,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14529,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "17034:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14543,
                  "src": "17026:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14528,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17026:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17025:19:76"
            },
            "returnParameters": {
              "id": 14533,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17064:0:76"
            },
            "scope": 14663,
            "src": "16969:191:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14559,
              "nodeType": "Block",
              "src": "17611:84:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14556,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14546,
                        "src": "17678:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14551,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "17621:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "compliance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15770,
                          "src": "17621:16:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ICompliance_$9302_$",
                            "typeString": "function () view external returns (contract ICompliance)"
                          }
                        },
                        "id": 14554,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17621:18:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ICompliance_$9302",
                          "typeString": "contract ICompliance"
                        }
                      },
                      "id": 14555,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnComplianceContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9301,
                      "src": "17621:56:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17621:67:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14558,
                  "nodeType": "ExpressionStatement",
                  "src": "17621:67:76"
                }
              ]
            },
            "documentation": {
              "id": 14544,
              "nodeType": "StructuredDocumentation",
              "src": "17166:351:76",
              "text": "  @dev calls the `transferOwnershipOnComplianceContract` function on the Compliance contract\n  OwnerManager has to be set as owner on the Compliance smart contract to process this function\n  See {ICompliance-transferOwnershipOnComplianceContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "1096a7ec",
            "id": 14560,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14549,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14548,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "17601:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "17601:9:76"
              }
            ],
            "name": "callTransferOwnershipOnComplianceContract",
            "nameLocation": "17531:41:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14547,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14546,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "17581:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14560,
                  "src": "17573:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14545,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17573:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17572:19:76"
            },
            "returnParameters": {
              "id": 14550,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17611:0:76"
            },
            "scope": 14663,
            "src": "17522:173:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14578,
              "nodeType": "Block",
              "src": "18204:116:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14575,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14563,
                        "src": "18303:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14568,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "18214:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14570,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "18214:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18214:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "topicsRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10346,
                          "src": "18214:39:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IClaimTopicsRegistry_$10172_$",
                            "typeString": "function () view external returns (contract IClaimTopicsRegistry)"
                          }
                        },
                        "id": 14573,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18214:41:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IClaimTopicsRegistry_$10172",
                          "typeString": "contract IClaimTopicsRegistry"
                        }
                      },
                      "id": 14574,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnClaimTopicsRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10171,
                      "src": "18214:88:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18214:99:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14577,
                  "nodeType": "ExpressionStatement",
                  "src": "18214:99:76"
                }
              ]
            },
            "documentation": {
              "id": 14561,
              "nodeType": "StructuredDocumentation",
              "src": "17701:400:76",
              "text": "  @dev calls the `transferOwnershipOnClaimTopicsRegistryContract` function on the Claim Topics Registry contract\n  OwnerManager has to be set as owner on the Claim Topics registry smart contract to process this function\n  See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "818ab8bd",
            "id": 14579,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14566,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14565,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "18194:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "18194:9:76"
              }
            ],
            "name": "callTransferOwnershipOnClaimTopicsRegistryContract",
            "nameLocation": "18115:50:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14564,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14563,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "18174:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14579,
                  "src": "18166:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14562,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18166:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18165:19:76"
            },
            "returnParameters": {
              "id": 14567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18204:0:76"
            },
            "scope": 14663,
            "src": "18106:214:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14597,
              "nodeType": "Block",
              "src": "18826:113:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14594,
                        "name": "_newOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14582,
                        "src": "18922:9:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 14587,
                                "name": "token",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 13935,
                                "src": "18836:5:76",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IToken_$15986",
                                  "typeString": "contract IToken"
                                }
                              },
                              "id": 14589,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "identityRegistry",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 15763,
                              "src": "18836:22:76",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                                "typeString": "function () view external returns (contract IIdentityRegistry)"
                              }
                            },
                            "id": 14590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18836:24:76",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                              "typeString": "contract IIdentityRegistry"
                            }
                          },
                          "id": 14591,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "issuersRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 10339,
                          "src": "18836:40:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_ITrustedIssuersRegistry_$10584_$",
                            "typeString": "function () view external returns (contract ITrustedIssuersRegistry)"
                          }
                        },
                        "id": 14592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18836:42:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ITrustedIssuersRegistry_$10584",
                          "typeString": "contract ITrustedIssuersRegistry"
                        }
                      },
                      "id": 14593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferOwnershipOnIssuersRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10583,
                      "src": "18836:85:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18836:96:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14596,
                  "nodeType": "ExpressionStatement",
                  "src": "18836:96:76"
                }
              ]
            },
            "documentation": {
              "id": 14580,
              "nodeType": "StructuredDocumentation",
              "src": "18326:401:76",
              "text": "  @dev calls the `transferOwnershipOnIssuersRegistryContract` function on the Trusted Issuers Registry contract\n  OwnerManager has to be set as owner on the Trusted Issuers registry smart contract to process this function\n  See {ITrustedIssuersRegistry-transferOwnershipOnIssuersRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "99884aab",
            "id": 14598,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14584,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "18816:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "18816:9:76"
              }
            ],
            "name": "callTransferOwnershipOnIssuersRegistryContract",
            "nameLocation": "18741:46:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14583,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14582,
                  "mutability": "mutable",
                  "name": "_newOwner",
                  "nameLocation": "18796:9:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14598,
                  "src": "18788:17:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18788:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18787:19:76"
            },
            "returnParameters": {
              "id": 14586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18826:0:76"
            },
            "scope": 14663,
            "src": "18732:207:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14612,
              "nodeType": "Block",
              "src": "19330:54:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14609,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14601,
                        "src": "19370:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14606,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "19340:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14608,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAgentOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15979,
                      "src": "19340:29:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19340:37:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14611,
                  "nodeType": "ExpressionStatement",
                  "src": "19340:37:76"
                }
              ]
            },
            "documentation": {
              "id": 14599,
              "nodeType": "StructuredDocumentation",
              "src": "18945:308:76",
              "text": "  @dev calls the `addAgentOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-addAgentOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "256ccc07",
            "id": 14613,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14604,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14603,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "19320:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "19320:9:76"
              }
            ],
            "name": "callAddAgentOnTokenContract",
            "nameLocation": "19267:27:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14602,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14601,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "19303:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14613,
                  "src": "19295:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19295:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19294:16:76"
            },
            "returnParameters": {
              "id": 14605,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19330:0:76"
            },
            "scope": 14663,
            "src": "19258:126:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14627,
              "nodeType": "Block",
              "src": "19784:57:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14624,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14616,
                        "src": "19827:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 14621,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 13935,
                        "src": "19794:5:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IToken_$15986",
                          "typeString": "contract IToken"
                        }
                      },
                      "id": 14623,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAgentOnTokenContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 15985,
                      "src": "19794:32:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19794:40:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14626,
                  "nodeType": "ExpressionStatement",
                  "src": "19794:40:76"
                }
              ]
            },
            "documentation": {
              "id": 14614,
              "nodeType": "StructuredDocumentation",
              "src": "19390:314:76",
              "text": "  @dev calls the `removeAgentOnTokenContract` function on the token contract\n  OwnerManager has to be set as owner on the token smart contract to process this function\n  See {IToken-removeAgentOnTokenContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "28d7be34",
            "id": 14628,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14619,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14618,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "19774:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "19774:9:76"
              }
            ],
            "name": "callRemoveAgentOnTokenContract",
            "nameLocation": "19718:30:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14617,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14616,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "19757:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14628,
                  "src": "19749:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14615,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19749:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19748:16:76"
            },
            "returnParameters": {
              "id": 14620,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19784:0:76"
            },
            "scope": 14663,
            "src": "19709:132:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14644,
              "nodeType": "Block",
              "src": "20300:84:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14641,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14631,
                        "src": "20370:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14636,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "20310:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "20310:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14639,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20310:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14640,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "addAgentOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10358,
                      "src": "20310:59:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14642,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20310:67:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14643,
                  "nodeType": "ExpressionStatement",
                  "src": "20310:67:76"
                }
              ]
            },
            "documentation": {
              "id": 14629,
              "nodeType": "StructuredDocumentation",
              "src": "19847:365:76",
              "text": "  @dev calls the `addAgentOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-addAgentOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "85cef608",
            "id": 14645,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14633,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "20290:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "20290:9:76"
              }
            ],
            "name": "callAddAgentOnIdentityRegistryContract",
            "nameLocation": "20226:38:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14631,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "20273:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14645,
                  "src": "20265:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14630,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20265:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20264:16:76"
            },
            "returnParameters": {
              "id": 14635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20300:0:76"
            },
            "scope": 14663,
            "src": "20217:167:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "body": {
              "id": 14661,
              "nodeType": "Block",
              "src": "20852:87:76",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 14658,
                        "name": "_agent",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 14648,
                        "src": "20925:6:76",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 14653,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 13935,
                            "src": "20862:5:76",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IToken_$15986",
                              "typeString": "contract IToken"
                            }
                          },
                          "id": 14655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "identityRegistry",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 15763,
                          "src": "20862:22:76",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_IIdentityRegistry_$10365_$",
                            "typeString": "function () view external returns (contract IIdentityRegistry)"
                          }
                        },
                        "id": 14656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20862:24:76",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IIdentityRegistry_$10365",
                          "typeString": "contract IIdentityRegistry"
                        }
                      },
                      "id": 14657,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "removeAgentOnIdentityRegistryContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 10364,
                      "src": "20862:62:76",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 14659,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20862:70:76",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 14660,
                  "nodeType": "ExpressionStatement",
                  "src": "20862:70:76"
                }
              ]
            },
            "documentation": {
              "id": 14646,
              "nodeType": "StructuredDocumentation",
              "src": "20390:371:76",
              "text": "  @dev calls the `removeAgentOnIdentityRegistryContract` function on the Identity Registry contract\n  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function\n  See {IIdentityRegistry-removeAgentOnIdentityRegistryContract}.\n  Requires that msg.sender is an Admin of the OwnerManager contract"
            },
            "functionSelector": "757d467f",
            "id": 14662,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 14651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 14650,
                  "name": "onlyAdmin",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 14724,
                  "src": "20842:9:76"
                },
                "nodeType": "ModifierInvocation",
                "src": "20842:9:76"
              }
            ],
            "name": "callRemoveAgentOnIdentityRegistryContract",
            "nameLocation": "20775:41:76",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 14649,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 14648,
                  "mutability": "mutable",
                  "name": "_agent",
                  "nameLocation": "20825:6:76",
                  "nodeType": "VariableDeclaration",
                  "scope": 14662,
                  "src": "20817:14:76",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 14647,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20817:7:76",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20816:16:76"
            },
            "returnParameters": {
              "id": 14652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20852:0:76"
            },
            "scope": 14663,
            "src": "20766:173:76",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 14664,
        "src": "1490:19451:76",
        "usedErrors": []
      }
    ],
    "src": "1093:19849:76"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.15+commit.e14f2714.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.6",
  "updatedAt": "2022-08-03T10:43:51.472Z",
  "devdoc": {
    "events": {
      "ComplianceInteraction(address,bytes4)": {
        "details": "Event emitted for each executed interaction with the compliance contract. For gas efficiency, only the interaction calldata selector (first 4 bytes) is included in the event. For interactions without calldata or whose calldata is shorter than 4 bytes, the selector will be `0`."
      }
    },
    "kind": "dev",
    "methods": {
      "callAddAgentOnIdentityRegistryContract(address)": {
        "details": "calls the `addAgentOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-addAgentOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callAddAgentOnTokenContract(address)": {
        "details": "calls the `addAgentOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-addAgentOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callAddClaimTopic(uint256,address)": {
        "details": "calls the `addClaimTopic` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function  See {IClaimTopicsRegistry-addClaimTopic}.  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callAddTrustedIssuer(address,uint256[],address)": {
        "details": "calls the `addTrustedIssuer` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-addTrustedIssuer}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callComplianceFunction(bytes,address)": {
        "details": "calls any onlyOwner function available on the compliance contract  OwnerManager has to be set as owner on the compliance smart contract to process this function  Requires that `_onchainID` is set as ComplianceManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callRemoveAgentOnIdentityRegistryContract(address)": {
        "details": "calls the `removeAgentOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-removeAgentOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callRemoveAgentOnTokenContract(address)": {
        "details": "calls the `removeAgentOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-removeAgentOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callRemoveClaimTopic(uint256,address)": {
        "details": "calls the `removeClaimTopic` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics Registry smart contract to process this function  See {IClaimTopicsRegistry-removeClaimTopic}.  Requires that `_onchainID` is set as ClaimRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callRemoveTrustedIssuer(address,address)": {
        "details": "calls the `removeTrustedIssuer` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-removeTrustedIssuer}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetClaimTopicsRegistry(address,address)": {
        "details": "calls the `setClaimTopicsRegistry` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-setClaimTopicsRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetCompliance(address,address)": {
        "details": "calls the `setCompliance` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setCompliance}.  Requires that `_onchainID` is set as ComplianceSetter on the OwnerManager contract  Requires that msg.sender is a MANAGEMENT KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetIdentityRegistry(address,address)": {
        "details": "calls the `setIdentityRegistry` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setIdentityRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetTokenName(string,address)": {
        "details": "calls the `setName` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setName}.  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetTokenOnchainID(address,address)": {
        "details": "calls the `setOnchainID` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setOnchainID}.  Requires that `_tokenOnchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetTokenSymbol(string,address)": {
        "details": "calls the `setSymbol` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-setSymbol}.  Requires that `_onchainID` is set as TokenInfoManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callSetTrustedIssuersRegistry(address,address)": {
        "details": "calls the `setTrustedIssuersRegistry` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-setTrustedIssuersRegistry}.  Requires that `_onchainID` is set as RegistryAddressSetter on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "callTransferOwnershipOnClaimTopicsRegistryContract(address)": {
        "details": "calls the `transferOwnershipOnClaimTopicsRegistryContract` function on the Claim Topics Registry contract  OwnerManager has to be set as owner on the Claim Topics registry smart contract to process this function  See {IClaimTopicsRegistry-transferOwnershipOnClaimTopicsRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callTransferOwnershipOnComplianceContract(address)": {
        "details": "calls the `transferOwnershipOnComplianceContract` function on the Compliance contract  OwnerManager has to be set as owner on the Compliance smart contract to process this function  See {ICompliance-transferOwnershipOnComplianceContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callTransferOwnershipOnIdentityRegistryContract(address)": {
        "details": "calls the `transferOwnershipOnIdentityRegistryContract` function on the Identity Registry contract  OwnerManager has to be set as owner on the Identity Registry smart contract to process this function  See {IIdentityRegistry-transferOwnershipOnIdentityRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callTransferOwnershipOnIssuersRegistryContract(address)": {
        "details": "calls the `transferOwnershipOnIssuersRegistryContract` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers registry smart contract to process this function  See {ITrustedIssuersRegistry-transferOwnershipOnIssuersRegistryContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callTransferOwnershipOnTokenContract(address)": {
        "details": "calls the `transferOwnershipOnTokenContract` function on the token contract  OwnerManager has to be set as owner on the token smart contract to process this function  See {IToken-transferOwnershipOnTokenContract}.  Requires that msg.sender is an Admin of the OwnerManager contract"
      },
      "callUpdateIssuerClaimTopics(address,uint256[],address)": {
        "details": "calls the `updateIssuerClaimTopics` function on the Trusted Issuers Registry contract  OwnerManager has to be set as owner on the Trusted Issuers Registry smart contract to process this function  See {ITrustedIssuersRegistry-updateIssuerClaimTopics}.  Requires that `_onchainID` is set as IssuersRegistryManager on the OwnerManager contract  Requires that msg.sender is an ACTION KEY on `_onchainID`",
        "params": {
          "_onchainID": "the _onchainID contract of the caller, e.g. \"i call this function and i am Bob\""
        }
      },
      "constructor": {
        "details": "the constructor initiates the OwnerManager contract  and sets msg.sender as owner of the contract",
        "params": {
          "_token": "the token managed by this OwnerManager contract"
        }
      },
      "isClaimRegistryManager(address)": {
        "details": "ClaimRegistryManager Role _claimRegistryManager"
      },
      "isComplianceManager(address)": {
        "details": "ComplianceManager Role _complianceManager"
      },
      "isComplianceSetter(address)": {
        "details": "ComplianceSetter Role _complianceSetter"
      },
      "isIssuersRegistryManager(address)": {
        "details": "IssuersRegistryManager Role _issuersRegistryManager"
      },
      "isOwnerAdmin(address)": {
        "details": "OwnerAdmin Role _ownerAdmin"
      },
      "isRegistryAddressSetter(address)": {
        "details": "RegistryAddressSetter Role _registryAddressSetter"
      },
      "isTokenInfoManager(address)": {
        "details": "TokenInfoManager Role _tokenInfoManager"
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "stateVariables": {
      "token": {
        "details": "the token that is managed by this OwnerManager Contract"
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}